{"version":3,"file":"static/js/main.8005e733.js","mappings":"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","sources":["Context.js","Loot.js","Lists.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {createContext} from 'react';\r\n\r\n// Create contexts so components can pass data to any children.\r\nexport const FoundContext = createContext();\r\nexport const CarryoverContext = createContext();\r\nexport const FilterContext = createContext();\r\nexport const SettingContext = createContext();\r\n","import * as React from 'react';\r\nimport {\r\n  //NavigationContainer,\r\n  //useNavigation,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\n//import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {\r\n  StyleSheet,\r\n  Platform,\r\n  Image, ImageBackground,\r\n  Text, TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View, ScrollView,\r\n  Modal,\r\n  PixelRatio,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MultipleSelectList } from 'react-native-dropdown-select-list';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\n//import { useFonts } from 'expo-font';\r\n\r\n// Import contexts here.\r\nimport {\r\n  FoundContext, CarryoverContext, FilterContext, SettingContext\r\n} from \"./Context\";\r\n\r\n// Add icon images here.\r\nconst iconGold = require('./assets/icon_gold.png');\r\nconst iconGems = require('./assets/icon_gems.png');\r\nconst iconGoods = require('./assets/icon_goods.png');\r\n\r\n// Add background images here.\r\nconst bgDefaultLight = require('./assets/bg_default_light.png');\r\nconst bgDefaultDark = require('./assets/bg_default_dark.png');\r\nconst bgEasyLight = require('./assets/bg_easy_light.png');\r\nconst bgEasyDark = require('./assets/bg_easy_dark.png');\r\nconst bgMediumLight = require('./assets/bg_medium_light.png');\r\nconst bgMediumDark = require('./assets/bg_medium_dark.png');\r\nconst bgHardLight = require('./assets/bg_hard_light.png');\r\nconst bgHardDark = require('./assets/bg_hard_dark.png');\r\nconst bgFoundLight = require('./assets/bg_found_light.png');\r\nconst bgFoundLightS = require('./assets/bg_found_light_small.png');\r\nconst bgFoundLightT = require('./assets/bg_found_light_tall.png');\r\nconst bgFoundDark = require('./assets/bg_found_dark.png');\r\nconst bgFoundDarkS = require('./assets/bg_found_dark_small.png');\r\nconst bgFoundDarkT = require('./assets/bg_found_dark_tall.png');\r\n\r\n\r\n/* **************** */\r\n/*  LOOTLIST ENTRY  */\r\n/* **************** */\r\n// Custom view component of a unique item and all its locations.\r\nexport function LootlistEntry(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch CarryLoot state from context.\r\n  const {getCarryLoot, setCarryLoot} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  /*function passingTest() {\r\n    alert('Test success.');\r\n  };*/\r\n\r\n  return (\r\n    <View style={styles.listEntry}>\r\n      <View style={[\r\n        styles.nameEntry,\r\n        {backgroundColor: colors.backMed,\r\n        borderColor: colors.border},\r\n        props.values && styles.nameEntryLoot\r\n      ]}>\r\n        {/* Item's image goes here. */}\r\n        {props.img.length === 1 &&\r\n          <Image\r\n            source={props.img[0]}\r\n            style={styles.imgStyle}\r\n          />\r\n        }\r\n        {/* If the item has several varieties,\r\n            switch between the images every few seconds. */}\r\n        {props.img.length > 1 &&\r\n          <ImageSwitch\r\n            img={props.img}\r\n          />\r\n        }\r\n        <Text style={[styles.entryText, {color: colors.text}]}>\r\n          {props.name}\r\n        </Text>\r\n      </View>\r\n      <View style={[\r\n        styles.subEntry, props.values && styles.subEntryLoot\r\n      ]}>\r\n        {/* For loot,\r\n            map out each entry in loot value sub-array. */}\r\n        {props.values && props.values.map((valueKey, index1) => (\r\n          <View\r\n            key={valueKey.id}\r\n            style={[\r\n              (Platform.OS === 'web' && width >= 617 &&\r\n              valueKey.locations.length < 3)\r\n              ? styles.subEntryLPV_Web\r\n              : (Platform.OS === 'web' && width < 617 &&\r\n                valueKey.locations.length === 1)\r\n                ? styles.subEntryLPV_Web\r\n                : styles.subEntryLocsPerValue\r\n            ]}\r\n          >\r\n            <View style={[\r\n              styles.subEntryValue,\r\n              {backgroundColor: colors.backMed,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              {/* Loot item's value goes here. */}\r\n              {valueKey.value && valueKey.value[0] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[0]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.value && valueKey.value[1] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[1]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.value && valueKey.value[2] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[2]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {/* Variable values for carryover loot. */}\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[0] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[1] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[2] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {/* Edge case for loot with value of 0. */}\r\n              {valueKey.value && !valueKey.carryValue &&\r\n                valueKey.value[0] === 0 &&\r\n                valueKey.value[1] === 0 &&\r\n                valueKey.value[2] === 0 &&\r\n                <Text style={[styles.lootText, {color: colors.text}]}>\r\n                  0\r\n                </Text>\r\n              }\r\n            </View>\r\n            <View style={[styles.subEntryLoc, styles.subEntryLocLoot]}>\r\n              {/* Map out each entry in loot location sub-sub-array. */}\r\n              {valueKey.locations.map((locKey, index2) => (\r\n                <FindMe\r\n                  key={locKey.id}\r\n                  id={locKey.id}\r\n                  title={props.title}\r\n                  modeNames={props.modeNames}\r\n                  areas={props.areas}\r\n                  notes={props.notes}\r\n                  value={valueKey.value}\r\n                  carryValue={valueKey.carryValue}\r\n                  findSimple={locKey.findSimple}\r\n                  findArea={locKey.findArea}\r\n                  findNarrow={locKey.findNarrow}\r\n                  findExact={locKey.findExact}\r\n                  findObj={locKey.findObj}\r\n                  findCount={locKey.findCount}\r\n                  findCountRecipe={locKey.findCountRecipe}\r\n                  findCountBox={locKey.findCountBox}\r\n                  findCountMode={locKey.findCountMode}\r\n                  findCountActual={locKey.findCountActual}\r\n                  findRecipe={locKey.findRecipe}\r\n                  findBox={locKey.findBox}\r\n                  findPick={locKey.findPick}\r\n                  findSecret={locKey.findSecret}\r\n                  findUnable={locKey.findUnable}\r\n                  findNote={locKey.findNote}\r\n                  findLink={locKey.findLink}\r\n                  loadout={locKey.loadout}\r\n                  price={locKey.price}\r\n                  getLinkedFind={props.getLinkedFind}\r\n                  setLinkedFind={props.setLinkedFind}\r\n                  //passingTest={() => passingTest()}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ))}\r\n        {/* For items and junk,\r\n            map out each entry in location sub-array. */}\r\n        {props.locations &&\r\n          <View style={styles.subEntryLoc}>\r\n            {props.locations.map((locKey, index3) => (\r\n              <FindMe\r\n                key={locKey.id}\r\n                id={locKey.id}\r\n                title={props.title}\r\n                modeNames={props.modeNames}\r\n                areas={props.areas}\r\n                notes={props.notes}\r\n                value={locKey.value}\r\n                findSimple={locKey.findSimple}\r\n                findArea={locKey.findArea}\r\n                findNarrow={locKey.findNarrow}\r\n                findExact={locKey.findExact}\r\n                findObj={locKey.findObj}\r\n                findCount={locKey.findCount}\r\n                findCountRecipe={locKey.findCountRecipe}\r\n                findCountBox={locKey.findCountBox}\r\n                findCountMode={locKey.findCountMode}\r\n                findCountActual={locKey.findCountActual}\r\n                findRecipe={locKey.findRecipe}\r\n                findBox={locKey.findBox}\r\n                findPick={locKey.findPick}\r\n                findSecret={locKey.findSecret}\r\n                findUnable={locKey.findUnable}\r\n                findNote={locKey.findNote}\r\n                findLink={locKey.findLink}\r\n                loadout={locKey.loadout}\r\n                price={locKey.price}\r\n                carryover={locKey.carryover}\r\n                getLinkedFind={props.getLinkedFind}\r\n                setLinkedFind={props.setLinkedFind}\r\n              />\r\n            ))}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*      FIND ME     */\r\n/* **************** */\r\n// Custom view component of a precise location of a given item.\r\nfunction FindMe(props) {\r\n  // Use defaults to avoid errors if some props are undefined.\r\n  const {\r\n    id = '',\r\n    title = '',\r\n    modeNames = [{'name': '', 'icon': ''}],\r\n    areas = [{'key': '1', 'value': ''}],\r\n    notes = [{'delimiter': '', 'icon': ''}],\r\n    value = [0,0,0],\r\n    carryValue = [0,0,0],\r\n    findSimple = '',\r\n    findArea = 0,\r\n    findNarrow = '',\r\n    findExact = '',\r\n    findObj = false,\r\n    findCount = [1,1,1],\r\n    findCountRecipe = [1,1,1],\r\n    findCountBox = [1,1,1],\r\n    findCountMode = [-1,-1,-1],\r\n    findCountActual = [-1,-1,-1],\r\n    findRecipe = ' ',\r\n    findBox = false,\r\n    findPick = false,\r\n    findSecret = false,\r\n    findUnable = false,\r\n    findNote = 0,\r\n    findLink = [],\r\n    loadout = '',\r\n    price = 0,\r\n    carryover = false,\r\n    getLinkedFind = getLinkedFind,\r\n    setLinkedFind = setLinkedFind,\r\n    //passingTest = passingTest,\r\n  } = props;\r\n\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // SimpleColor: tracks this item's background color & pattern.\r\n  // Used to display found status or ease of finding loot items.\r\n  const [getSimpleColor, setSimpleColor] = React.useState(bgDefaultLight);\r\n\r\n  // IsFound: tracks if this item is selected as 'found'.\r\n  // Used to change location's background color & update loot totals.\r\n  const [getIsFound, setIsFound] = React.useState(false);\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} =\r\n    React.useContext(FoundContext);\r\n\r\n  // Fetch CarryLoot and CarryFound states from context.\r\n  const {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  // Fetch filter states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX,\r\n        getFilterModeA, setFilterModeA,\r\n        getFilterModeB, setFilterModeB,\r\n        getFilterModeC, setFilterModeC,\r\n        getFilterLootGold, setFilterLootGold,\r\n        getFilterLootGems, setFilterLootGems,\r\n        getFilterLootGoods, setFilterLootGoods,\r\n        getFilterOnlyObj, setFilterOnlyObj,\r\n        getFilterOnlyPick, setFilterOnlyPick,\r\n        getFilterOnlySec, setFilterOnlySec,\r\n        getFilterArea, setFilterArea} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme,\r\n        getSecSpoiler, setSecSpoiler} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Save & read item's 'found'/'not found' data in device storage.\r\n  // This allows user's selections to persist,\r\n  // whether they navigate to another screen or close the app.\r\n  // This is a promise-based method, using the 'async await' syntax\r\n  // with a 'try-catch' block.\r\n  // Use the item's ID to ensure each data has a unique identifier.\r\n\r\n  // Send data to device storage.\r\n  const storeIsFound = async (newToggle) => {\r\n    try {\r\n      // Convert item's state from boolean to string.\r\n      const jsonToggle = JSON.stringify(newToggle);\r\n      await AsyncStorage.setItem(`@inventory_${id}`, jsonToggle);\r\n      //alert(`Saved inventory_${props.id} as ${jsonToggle}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save value.');\r\n    }\r\n  };\r\n\r\n  const storeFoundLoot = async (addFoundLoot) => {\r\n    try {\r\n      // Convert item's state from array to string.\r\n      const jsonLoot = JSON.stringify(addFoundLoot);\r\n      await AsyncStorage.setItem(`@myloot_${title}`, jsonLoot);\r\n      //alert(`Saved myloot_${myList[missionName].title} as ${jsonLoot}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save array.');\r\n    }\r\n  };\r\n\r\n  const storeFoundPocket = async (addFoundPocket) => {\r\n    try {\r\n      // Convert item's state from array to string.\r\n      const jsonPocket = JSON.stringify(addFoundPocket);\r\n      await AsyncStorage.setItem(`@mypocket_${title}`, jsonPocket);\r\n      //alert(`Saved mypocket_${myList[missionName].title} as ${jsonPocket}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save array.');\r\n    }\r\n  };\r\n\r\n  // Read data from device storage.\r\n  const readIsFound = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(`@inventory_${id}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseValue = JSON.parse(jsonValue);\r\n      if (parseValue !== null) {\r\n        setIsFound(parseValue);\r\n        simpleColorSwitch(parseValue);\r\n        //alert(`Loaded inventory_${id} as ${jsonValue}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read value.');\r\n    }\r\n  };\r\n\r\n  function activateMe() {\r\n    // If item is present but can't be acquired\r\n    // (or doing so softlocks or kills the player),\r\n    // skip this function.\r\n    if (!findUnable) {\r\n      let newFound = toggleMe(\"opposite\");\r\n\r\n      // Increment found loot per difficulty.\r\n      const addFoundLoot = accumLoot.current.map((foundDiffKey, i) => {\r\n        return foundDiffKey.map((foundValueKey, j) => {\r\n          let newValue = 0;\r\n          // Increment gold, gems, & goods.\r\n          if (j < 3 && (props.value || props.findLink)) {\r\n            // If newly selected, add...\r\n            if (newFound) {\r\n              // ...the value of this loot...\r\n              if (props.value) {\r\n                newValue = foundValueKey += (\r\n                  props.value[j] *\r\n                  findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n                );\r\n              }\r\n              // ...and the value of any linked loot.\r\n              if (props.findLink) {\r\n                props.findLink.map((foundLinkKey, k) => {\r\n                  if (foundLinkKey.value) {\r\n                    newValue += (\r\n                      foundLinkKey.value[j] * foundLinkKey.findCount[i]\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              return newValue;\r\n            // If newly deselected, subtract...\r\n            } else {\r\n              // ...the value of this loot...\r\n              if (props.value) {\r\n                newValue = foundValueKey -= (\r\n                  props.value[j] *\r\n                  findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n                );\r\n              }\r\n              // ...and the value of any linked loot.\r\n              if (props.findLink) {\r\n                props.findLink.map((foundLinkKey, k) => {\r\n                  if (foundLinkKey.value) {\r\n                    newValue -= (\r\n                      foundLinkKey.value[j] * foundLinkKey.findCount[i]\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              return newValue;\r\n            }\r\n          // Increment total loot.\r\n          } else if (j === 3 && (props.value || props.findLink)) {\r\n            // If newly selected, add...\r\n            if (newFound) {\r\n              // ...the value of this loot...\r\n              if (props.value) {\r\n                newValue = foundValueKey += (\r\n                  (props.value[0] + props.value[1] + props.value[2]) *\r\n                  findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n                );\r\n              }\r\n              // ...and the value of any linked loot.\r\n              if (props.findLink) {\r\n                props.findLink.map((allKey, l) => {\r\n                  if (allKey.value) {\r\n                    newValue += (\r\n                      (allKey.value[0] + allKey.value[1] + allKey.value[2]) *\r\n                      allKey.findCount[i]\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              return newValue;\r\n            // If newly deselected, subtract...\r\n            } else {\r\n              // ...the value of this loot...\r\n              if (props.value) {\r\n                newValue = foundValueKey -= (\r\n                  (props.value[0] + props.value[1] + props.value[2]) *\r\n                  findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n                );\r\n              }\r\n              // ...and the value of any linked loot.\r\n              if (props.findLink) {\r\n                props.findLink.map((allKey, l) => {\r\n                  if (allKey.value) {\r\n                    newValue -= (\r\n                      (allKey.value[0] + allKey.value[1] + allKey.value[2]) *\r\n                      allKey.findCount[i]\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n              return newValue;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      if ((props.value || props.findLink) && !props.carryValue) {\r\n        //setFoundLoot(addFoundLoot);\r\n        //alert(`${addFoundLoot}`);\r\n        accumLoot.current = addFoundLoot;\r\n        storeFoundLoot(addFoundLoot);\r\n      }\r\n\r\n      // Increment found pickpockets per difficulty.\r\n      const addFoundPocket = accumPocket.current.map((pocketDiffKey, p) => {\r\n        // If newly selected, add...\r\n        if (newFound) {\r\n          // ...one pickpocket...\r\n          if (props.findCountBox && props.findCountBox[p] > 0) {\r\n            pocketDiffKey += 1;\r\n          }\r\n          // ...and another for every linked pickpocket.\r\n          if (props.findLink && props.findLink.length > 0) {\r\n            props.findLink.map((pocketLinkKey, q) => {\r\n              if (pocketLinkKey.findPick &&\r\n                pocketLinkKey.findCount[p] > 0) {\r\n                pocketDiffKey += 1;\r\n              };\r\n            });\r\n          }\r\n          return pocketDiffKey;\r\n        // If newly deselected, subtract...\r\n        } else {\r\n          // ...one pickpocket...\r\n          if (props.findCountBox && props.findCountBox[p] > 0) {\r\n            pocketDiffKey -= 1;\r\n          }\r\n          // ...and another for every linked pickpocket.\r\n          if (props.findLink && props.findLink.length > 0) {\r\n            props.findLink.map((pocketLinkKey, q) => {\r\n              if (pocketLinkKey.findPick &&\r\n                pocketLinkKey.findCount[p] > 0) {\r\n                pocketDiffKey -= 1;\r\n              };\r\n            });\r\n          }\r\n          return pocketDiffKey;\r\n        }\r\n      });\r\n      if (props.findPick) {\r\n        //setFoundPocket(addFoundPocket);\r\n        accumPocket.current = addFoundPocket;\r\n        storeFoundPocket(addFoundPocket);\r\n      }\r\n\r\n      // Toggle whether carryover loot is 'found' or 'not found'.\r\n      if (newFound &&\r\n        props.carryValue && Math.min(...props.carryValue) === -1) {\r\n        setCarryFound(true);\r\n      } else if (\r\n        props.carryValue && Math.min(...props.carryValue) === -1) {\r\n        setCarryFound(false);\r\n      }\r\n\r\n      // Toggle any linked items.\r\n      if (props.findLink) {\r\n        setLinkedFind(props.findLink);\r\n      }\r\n    }\r\n  };\r\n\r\n  function toggleMe(type) {\r\n    let newToggle = true;\r\n    // If this item is not part of the starting inventory,\r\n    // toggle between 'found' and 'not found'.\r\n    if (!props.loadout || props.loadout !== \"start\") {\r\n      newToggle = toggleSwitch(getIsFound, type);\r\n    };\r\n\r\n    simpleColorSwitch(newToggle);\r\n\r\n    storeIsFound(newToggle);\r\n    setIsFound(newToggle);\r\n    return newToggle;\r\n  }\r\n\r\n  // Switch statement to set item as 'found' / 'not found'.\r\n  function toggleSwitch(toggle, type) {\r\n    switch(type) {\r\n      // 'On' sets this item as 'found'.\r\n      case \"on\":\r\n        return true;\r\n      // 'Off' sets this item as 'not found'.\r\n      case \"off\":\r\n        return false;\r\n      // 'Opposite' inverts this item's status.\r\n      case \"opposite\":\r\n        return !toggle;\r\n      // If no case specified, don't change item's status.\r\n      default:\r\n        return toggle;\r\n    }\r\n  }\r\n\r\n  // Change the component's background image.\r\n  // Use different patterns to account for colorblindness.\r\n  function simpleColorSwitch(newFound) {\r\n    if (getCurrentTheme === 'dark') {\r\n      // Checkmark if item is marked as found (or in starting inventory).\r\n      if (newFound) {\r\n        setSimpleColor(bgFoundDark);\r\n      } else {\r\n        // Green pattern for loot that's easy to find.\r\n        if (props.findSimple === \"findE\") {\r\n          setSimpleColor(bgEasyDark);\r\n        // Blue pattern for loot that's somewhat hidden.\r\n        } else if (props.findSimple === \"findM\") {\r\n          setSimpleColor(bgMediumDark);\r\n        // Purple pattern for loot that's hard to spot.\r\n        } else if (props.findSimple === \"findH\") {\r\n          setSimpleColor(bgHardDark);\r\n        // Default (no pattern) for items and junk.\r\n        } else {\r\n          setSimpleColor(bgDefaultDark);\r\n        }\r\n      }\r\n    } else {\r\n      // Checkmark if item is marked as found (or in starting inventory).\r\n      if (newFound) {\r\n        setSimpleColor(bgFoundLight);\r\n      } else {\r\n        // Lime pattern for loot that's easy to find.\r\n        if (props.findSimple === \"findE\") {\r\n          setSimpleColor(bgEasyLight);\r\n        // Cyan pattern for loot that's somewhat hidden.\r\n        } else if (props.findSimple === \"findM\") {\r\n          setSimpleColor(bgMediumLight);\r\n        // Pink pattern for loot that's hard to spot.\r\n        } else if (props.findSimple === \"findH\") {\r\n          setSimpleColor(bgHardLight);\r\n        // Default (no pattern) for items and junk.\r\n        } else {\r\n          setSimpleColor(bgDefaultLight);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readIsFound();\r\n\r\n    simpleColorSwitch();\r\n\r\n    // Select this item by default if it's in the starting inventory.\r\n    if (props.loadout && props.loadout === \"start\") {\r\n      //toggleMe(\"on\");\r\n      activateMe();\r\n    };\r\n\r\n    if (props.getLinkedFind) {\r\n      // If 'Clear All' button has been pressed,\r\n      // toggle this item as 'not found'.\r\n      if (props.getLinkedFind === \"reset\") {\r\n        toggleMe(\"off\");\r\n        setLinkedFind();\r\n      // If another item is selected that's linked to this item,\r\n      // toggle this item as 'found' or 'not found', as well.\r\n      } else {\r\n        props.getLinkedFind.map((linkKey, linkIndex) => {\r\n          if (linkKey.id === props.id) {\r\n            // Clear the array of linked items.\r\n            setLinkedFind();\r\n\r\n            toggleMe(\"opposite\");\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }, [props.getLinkedFind, getCurrentTheme]);\r\n\r\n  return (\r\n    <>\r\n      {(\r\n      // If exclusive to certain difficulties,\r\n      // hide this box if those difficulty filters are disabled.\r\n        (getFilterDiffN && findCount[0] !== 0 &&\r\n          findCountRecipe[0] !== 0 && findCountBox[0] !== 0) ||\r\n        (getFilterDiffH && findCount[1] !== 0 &&\r\n          findCountRecipe[1] !== 0 && findCountBox[1] !== 0) ||\r\n        (getFilterDiffX && findCount[2] !== 0 &&\r\n          findCountRecipe[2] !== 0 && findCountBox[2] !== 0)\r\n      ) &&\r\n      // If exclusive to certain game modes,\r\n      // hide this box if those game mode filters are disabled.\r\n      ( (getFilterModeA && findCountMode[0] !== 0) ||\r\n        (getFilterModeB && findCountMode[1] !== 0) ||\r\n        (getFilterModeC && findCountMode[2] !== 0)\r\n      ) &&\r\n      // Depending on this item's loot type(s),\r\n      // hide this box if those loot filters are disabled.\r\n      ( (getFilterLootGold && props.value &&\r\n          (props.value[0] !== 0 ||\r\n          (props.carryValue && props.carryValue[0] === -1)) ) ||\r\n        (getFilterLootGems && props.value &&\r\n          (props.value[1] !== 0 ||\r\n          (props.carryValue && props.carryValue[1] === -1)) ) ||\r\n        (getFilterLootGoods && props.value &&\r\n          (props.value[2] !== 0 ||\r\n          (props.carryValue && props.carryValue[2] === -1)) ) ||\r\n        (props.value && Math.max(...props.value) === 0) ||\r\n        !props.value\r\n      ) &&\r\n      // If not the goal of an objective,\r\n      // hide this box if the objectives only filter is enabled.\r\n      !( getFilterOnlyObj && !props.findObj ) &&\r\n      // If not a pickpocket,\r\n      // hide this box if the pickpockets only filter is enabled.\r\n      !( getFilterOnlyPick && !props.findPick ) &&\r\n      // If not in a secret location,\r\n      // hide this box if the secrets only filter is enabled.\r\n      !( getFilterOnlySec && !props.findSecret ) &&\r\n      // If area filter has one or more areas selected,\r\n      // hide this box if this item's area is not selected.\r\n      ( getFilterArea.length === 0 ||\r\n        getFilterArea.includes(props.areas[props.findArea].value)\r\n      ) &&\r\n        <TouchableOpacity\r\n          // Different background colors to indicate\r\n          // simplicity of finding (Easy, Medium, Hard),\r\n          // and whether user has selected it.\r\n          style={[\r\n            styles.find,\r\n            {backgroundColor: colors.backLight,\r\n            borderColor: colors.border},\r\n            //findSimple === \"findE\" && {backgroundColor: colors.findE},\r\n            //findSimple === \"findM\" && {backgroundColor: colors.findM},\r\n            //findSimple === \"findH\" && {backgroundColor: colors.findH},\r\n            //getIsFound && {backgroundColor: colors.found},\r\n          ]}\r\n          // Toggle whether this box is selected or not.\r\n          onPress={() => activateMe()}\r\n        >\r\n          {/*Text fields for general area and precise location.*/}\r\n          <ImageBackground\r\n            source={getSimpleColor}\r\n            resizeMode=\"cover\"\r\n            style={[\r\n              styles.findBackground\r\n            ]}\r\n          >\r\n            {(getIsFound || !props.findSecret ||\r\n              (props.findSecret && getSecSpoiler !== 'all')) &&\r\n              <FindMeArea\r\n                modeNames={props.modeNames}\r\n                value={props.value}\r\n                findArea={props.areas[props.findArea].value}\r\n                findObj={props.findObj}\r\n                findCount={props.findCount}\r\n                findCountRecipe={props.findCountRecipe}\r\n                findCountBox={props.findCountBox}\r\n                findCountMode={props.findCountMode}\r\n                findCountActual={props.findCountActual}\r\n                loadout={props.loadout}\r\n                carryover={props.carryover}\r\n              />\r\n            }\r\n            {(getIsFound || !props.findSecret ||\r\n              (props.findSecret && getSecSpoiler === 'none')) &&\r\n              <FindMePrecise\r\n                modeNames={props.modeNames}\r\n                findNarrow={props.findNarrow}\r\n                findExact={props.findExact}\r\n                findCount={props.findCount}\r\n                findCountRecipe={props.findCountRecipe}\r\n                findCountBox={props.findCountBox}\r\n                findCountMode={props.findCountMode}\r\n                findCountActual={props.findCountActual}\r\n                findRecipe={props.findRecipe}\r\n                findBox={props.findBox}\r\n                findPick={props.findPick}\r\n                findSecret={props.findSecret}\r\n                findUnable={props.findUnable}\r\n                findNote={props.notes[props.findNote]}\r\n                loadout={props.loadout}\r\n                price={props.price}\r\n              />\r\n            }\r\n            {/* Spoiler cover if secret locations are set to be hidden. */}\r\n            {!getIsFound &&\r\n              props.findSecret && getSecSpoiler !== 'none' &&\r\n              <Text style={[\r\n                styles.locText,\r\n                {fontSize: (Platform.OS === 'web') ? 12 : width*0.019,\r\n                  color: colors.text},\r\n                props.findSecret && {color: colors.locSecret},\r\n                props.findUnable && styles.locNoGet,\r\n              ]}>\r\n                [[ SECRET ]]\r\n              </Text>\r\n            }\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*   FIND ME AREA   */\r\n/* **************** */\r\n// Custom text component to show an item's general area.\r\nconst FindMeArea = React.memo(function FindMeArea(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // DiffExclude: tracks if this item is only on certain difficulties.\r\n  // Used to add difficulty markers to text field.\r\n  const [getDiffExclude, setDiffExclude] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Is this item only available here on certain difficulties?\r\n    if (\r\n      props.findCount && Math.min(...props.findCount) === 0 ||\r\n      props.findCountRecipe && Math.min(...props.findCountRecipe) === 0 ||\r\n      props.findCountBox && Math.min(...props.findCountBox) === 0\r\n    ) {\r\n      setDiffExclude(true);\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locText,\r\n      {fontSize: (Platform.OS === 'web') ? 12 : width*0.019,\r\n        color: colors.text}\r\n    ]}>\r\n      {/* Does this item trigger (or contribute to) an objective? */}\r\n      {props.findObj &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locObj}}>\r\n          {'✶'}\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Normal? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[0] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[0] > 0 ||\r\n          props.findCountBox && props.findCountBox[0] > 0) &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locN}}>\r\n          {'■'}\r\n          {/*'●■▲◆'*/}\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Hard? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[1] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[1] > 0 ||\r\n          props.findCountBox && props.findCountBox[1] > 0) &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locH}}>\r\n          {'▲'}\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Expert? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[2] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[2] > 0 ||\r\n          props.findCountBox && props.findCountBox[2] > 0) &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locX}}>\r\n          {'◆'}\r\n        </Text>\r\n      }\r\n      {/* Separate the markings from the location, if needed. */}\r\n      {(props.findObj || getDiffExclude) &&\r\n        ' '\r\n      }\r\n      {/* Print the area where this item is found. */}\r\n      {props.findArea}\r\n      {/* Is there more than 1 of this item at loadout?\r\n          Or, is there more than 1 of this item in the secret list? */}\r\n      {(props.loadout === \"start\" || props.loadout === \"store\" ||\r\n        props.secret) &&\r\n        ((props.findCount && Math.max(...props.findCount) > 1) ||\r\n        (props.findCountMode && Math.max(...props.findCountMode) > -1) ||\r\n        props.carryover) &&\r\n        <FindMeCount\r\n          modeNames={props.modeNames}\r\n          findCount={props.findCount}\r\n          findCountMode={props.findCountMode}\r\n          findCountActual={props.findCountActual}\r\n          carryover={props.carryover}\r\n        />\r\n      }\r\n      {/* Mirror the objective and difficulty markings, if any. */}\r\n      {/*{(props.findObj || getDiffExclude) &&\r\n        ' '\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[2] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[2] > 0 ||\r\n          props.findCountBox && props.findCountBox[2] > 0) &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locX}}>\r\n          {'▷'}\r\n        </Text>\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[1] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[1] > 0 ||\r\n          props.findCountBox && props.findCountBox[1] > 0) &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locH}}>\r\n          {'>'}\r\n        </Text>\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[0] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[0] > 0 ||\r\n          props.findCountBox && props.findCountBox[0] > 0) &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locN}}>\r\n          {'❱'}\r\n        </Text>\r\n      }\r\n      {props.findObj &&\r\n        <Text style={{fontWeight: 'bold', color: colors.locObj}}>\r\n          {'✶'}\r\n        </Text>\r\n      }*/}\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*  FIND ME PRECISE */\r\n/* **************** */\r\n// Custom text component to show an item's precise location.\r\nconst FindMePrecise = React.memo(function FindMePrecise(props) {\r\n\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locText,\r\n      {fontSize: (Platform.OS === 'web') ? 12 : width*0.019,\r\n        color: colors.text},\r\n      //props.findSecret && {color: colors.locSecret},\r\n      props.findUnable && styles.locNoGet,\r\n    ]}>\r\n      {/* If no precise location, insert a blank for spacing. */}\r\n      {!props.findNarrow && !props.findExact &&\r\n       !props.findRecipe && props.loadout !== \"store\" &&\r\n       ' '\r\n      }\r\n      {/* Is this item in a secret location? */}\r\n      {props.findSecret &&\r\n        <Text style={{color: colors.locSecret}}>\r\n          {'[[ '}\r\n        </Text>\r\n      }\r\n      {/* Print the general location of this item, if applicable. */}\r\n      {props.findNarrow &&\r\n        props.findNarrow\r\n      }\r\n      {/* Separate the general and exact locations, if needed. */}\r\n      {props.findNarrow && props.findExact &&\r\n        ', '\r\n      }\r\n      {/* Is this item able to be pickpocketed? */}\r\n      {props.findPick &&\r\n        <Text>{'{ '}</Text>\r\n      }\r\n      {/* Print the exact location of this item, if applicable. */}\r\n      {props.findExact &&\r\n        <Text style={[\r\n          styles.locText,\r\n          {fontSize: (Platform.OS === 'web') ? 12 : width*0.019},\r\n          props.findBox && styles.locBox,\r\n          props.findPick && styles.locPick,\r\n        ]}>\r\n          {props.findExact}\r\n        </Text>\r\n      }\r\n      {/* Is there more than 1 of this item in a container? */}\r\n      {props.findCountBox && Math.max(...props.findCountBox) > 1 &&\r\n        <FindMeCount\r\n          findCount={props.findCountBox}\r\n          findCountActual={props.findCountActual}\r\n          findBox={props.findBox}\r\n          findPick={props.findPick}\r\n        />\r\n      }\r\n      {props.findPick &&\r\n        <Text>{' }'}</Text>\r\n      }\r\n      {/* Is there more than 1 of this item at this location? */}\r\n      {!props.loadout &&\r\n        ((props.findCount && (Math.max(...props.findCount) > 1 ||\r\n          Math.min(...props.findCount) === -1)\r\n        ) ||\r\n        (props.findCountMode && Math.max(...props.findCountMode) > -1)) &&\r\n        <FindMeCount\r\n          modeNames={props.modeNames}\r\n          findCount={props.findCount}\r\n          findCountMode={props.findCountMode}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Separate the location and requirements, if needed. */}\r\n      {(props.findNarrow || props.findExact) &&\r\n        ((props.loadout === \"store\" && props.price > 0) ||\r\n          props.findRecipe) &&\r\n        ', '\r\n      }\r\n      {/* Print the requirements, if any, for this item to appear. */}\r\n      {props.findRecipe &&\r\n        <Text style={styles.locCount}>{props.findRecipe}</Text>\r\n      }\r\n      {/* Do the requirements make more than 1 of this item appear? */}\r\n      {props.findCountRecipe &&\r\n        (Math.max(...props.findCountRecipe) > 1 ||\r\n          Math.min(...props.findCountRecipe) === -1\r\n        ) &&\r\n        <FindMeCount\r\n          findCount={props.findCountRecipe}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {props.findSecret &&\r\n        <Text style={{color: colors.locSecret}}>\r\n          {' ]]'}\r\n        </Text>\r\n      }\r\n      {/* Is this item available in the loadout store? */}\r\n      {props.loadout === \"store\" && props.price > 0 &&\r\n        `Price: ${props.price}`\r\n      }\r\n      {/* Print the footnote icon for this item, if applicable. */}\r\n      {props.findNote &&\r\n        <Text style={styles.locCount}>\r\n          {props.findNote.delimiter &&\r\n            `${props.findNote.delimiter}`\r\n          }\r\n          {props.findNote.icon &&\r\n            `${props.findNote.icon}`\r\n          }\r\n        </Text>\r\n      }\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   FIND ME COUNT  */\r\n/* **************** */\r\n// Custom text component to show an item's stack count.\r\nconst FindMeCount = React.memo(function FindMeCount(props) {\r\n  // Use defaults to avoid errors if some props are undefined.\r\n  const {\r\n    modeNames = [{'name': '', 'icon': ''}],\r\n    findCount = [1,1,1],\r\n    findCountMode = [-1,-1,-1],\r\n    findCountActual = [-1,-1,-1],\r\n    findBox = false,\r\n    findPick = false,\r\n    carryover = false,\r\n  } = props;\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Change: tracks if this item has differing stack counts.\r\n  // Used to add relevant stack numbers to text field.\r\n  const [getDiffChange, setDiffChange] = React.useState(false);\r\n  const [getModeChange, setModeChange] = React.useState(false);\r\n  const [getActlChange, setActlChange] = React.useState(false);\r\n\r\n  // Stack: stores stack count shared across difficulties / game modes.\r\n  // Used to avoid reprinting the same count when unnecessary.\r\n  const [getDiffStack, setDiffStack] = React.useState(0);\r\n  const [getModeStack, setModeStack] = React.useState(0);\r\n  const [getActlStack, setActlStack] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Does this have different stack counts on different difficulties?\r\n    if (findCount[0] !== findCount[1] ||\r\n      findCount[1] !== findCount[2] ||\r\n      findCount[0] !== findCount[2]) {\r\n      // Exception: only available on Normal.\r\n      if (findCount[0] > 0 &&\r\n        findCount[1] === 0 && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[0]);\r\n      // Exception: only available on Hard.\r\n      } else if (findCount[1] > 0 &&\r\n        findCount[0] === 0 && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[1]);\r\n      // Exception: only available on Expert.\r\n      } else if (findCount[2] > 0 &&\r\n        findCount[0] === 0 && findCount[1] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[2]);\r\n      // Exception: same on Normal & Hard, unavailable on Expert.\r\n      } else if (findCount[0] > 0 && findCount[1] > 0 &&\r\n        findCount[0] === findCount[1] && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[0]);\r\n      // Exception: same on Hard & Expert, unavailable on Normal.\r\n      } else if (findCount[1] > 0 && findCount[2] > 0 &&\r\n        findCount[1] === findCount[2] && findCount[0] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[1]);\r\n      // Exception: same on Normal & Expert, unavailable on Hard.\r\n      } else if (findCount[0] > 0 && findCount[2] > 0 &&\r\n        findCount[0] === findCount[2] && findCount[1] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[2]);\r\n      // Otherwise, different stack counts on all difficulties.\r\n      } else {\r\n        setDiffChange(true);\r\n      }\r\n    // Otherwise, same count on all difficulties.\r\n    } else {\r\n      setDiffChange(false);\r\n      setDiffStack(findCount[0]);\r\n    }\r\n\r\n    // Does this have different stack counts on different game modes?\r\n    if (findCountMode[0] !== findCountMode[1] ||\r\n      findCountMode[1] !== findCountMode[2] ||\r\n      findCountMode[0] !== findCountMode[2]) {\r\n      // Exception: only available on Mode A.\r\n      if (findCountMode[0] > 0 &&\r\n        findCountMode[1] === 0 && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[0]);\r\n      // Exception: only available on Mode B.\r\n      } else if (findCountMode[1] > 0 &&\r\n        findCountMode[0] === 0 && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[1]);\r\n      // Exception: only available on Mode C.\r\n      } else if (findCountMode[2] > 0 &&\r\n        findCountMode[0] === 0 && findCountMode[1] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[2]);\r\n      // Exception: same on Modes A & B, unavailable on Mode C.\r\n      } else if (findCountMode[0] > 0 && findCountMode[1] > 0 &&\r\n        findCountMode[0] === findCountMode[1] && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[0]);\r\n      // Exception: same on Modes B & C, unavailable on Mode A.\r\n      } else if (findCountMode[1] > 0 && findCountMode[2] > 0 &&\r\n        findCountMode[1] === findCountMode[2] && findCountMode[0] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[1]);\r\n      // Exception: same on Modes A & C, unavailable on Mode B.\r\n      } else if (findCountMode[0] > 0 && findCountMode[2] > 0 &&\r\n        findCountMode[0] === findCountMode[2] && findCountMode[1] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[2]);\r\n      // Otherwise, different stack counts on all game modes.\r\n      } else {\r\n        setModeChange(true);\r\n      }\r\n    // Otherwise, same count on all game modes.\r\n    } else {\r\n      setModeChange(false);\r\n      setModeStack(findCountMode[0]);\r\n    }\r\n\r\n    // Does this have different actual counts on different difficulties?\r\n    if (findCountActual[0] !== findCountActual[1] ||\r\n      findCountActual[1] !== findCountActual[2] ||\r\n      findCountActual[0] !== findCountActual[2]) {\r\n      // Exception: only available on Normal.\r\n      if (findCountActual[0] > 0 &&\r\n        findCountActual[1] === 0 && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[0]);\r\n      // Exception: only available on Hard.\r\n      } else if (findCountActual[1] > 0 &&\r\n        findCountActual[0] === 0 && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[1]);\r\n      // Exception: only available on Expert.\r\n      } else if (findCountActual[2] > 0 &&\r\n        findCountActual[0] === 0 && findCountActual[1] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[2]);\r\n      // Exception: same on Normal & Hard, unavailable on Expert.\r\n      } else if (findCountActual[0] > 0 && findCountActual[1] > 0 &&\r\n        findCountActual[0] === findCountActual[1] && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[0]);\r\n      // Exception: same on Hard & Expert, unavailable on Normal.\r\n      } else if (findCountActual[1] > 0 && findCountActual[2] > 0 &&\r\n        findCountActual[1] === findCountActual[2] && findCountActual[0] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[1]);\r\n      // Exception: same on Normal & Expert, unavailable on Hard.\r\n      } else if (findCountActual[0] > 0 && findCountActual[2] > 0 &&\r\n        findCountActual[0] === findCountActual[2] && findCountActual[1] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[2]);\r\n      // Otherwise, different actual counts on all difficulties.\r\n      } else {\r\n        setActlChange(true);\r\n      }\r\n    // Otherwise, same actual count on all difficulties.\r\n    } else {\r\n      setActlChange(false);\r\n      setActlStack(findCountActual[0]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locCount,\r\n      findBox && styles.locBox,\r\n      findPick && styles.locPick,\r\n    ]}>\r\n      {' '}\r\n      {/* Does this item carry over from the last mission? */}\r\n      {carryover &&\r\n        'x [previous #]'\r\n      }\r\n      {/* Don't print the 'x' if only showing the game mode(s)\r\n          and the stack count is 1. */}\r\n      {!getModeChange && getDiffStack !== 1 &&\r\n        'x'\r\n      }\r\n      {/* Print this item's stack count (unchanged by difficulty). */}\r\n      {!getDiffChange && Math.max(...findCount) > 0 &&\r\n        (!getModeChange && getDiffStack !== 1) &&\r\n        getDiffStack\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {!getDiffChange && findCount[0] === -1 &&\r\n        (!getModeChange && getDiffStack !== 1) &&\r\n        '∞'\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {!getDiffChange && Math.max(...findCountActual) > -1 &&\r\n        <>\r\n          {'('}\r\n          {/* Is the available count the same on all difficulties? */}\r\n          {!getActlChange &&\r\n            getActlStack\r\n          }\r\n          {/* Is the available count different on Normal? */}\r\n          {getActlChange && findCountActual[0] > -1 &&\r\n            <Text style={{color: colors.locN}}>\r\n              {findCountActual[0]}\r\n            </Text>\r\n          }\r\n          {/* Separate the Normal stack from Hard or Expert, if needed. */}\r\n          {getActlChange && findCountActual[0] > -1 &&\r\n            (findCountActual[1] > -1 || findCountActual[2] > -1) &&\r\n            '/'\r\n          }\r\n          {/* Is the available count different on Hard? */}\r\n          {getActlChange && findCountActual[1] > -1 &&\r\n            <Text style={{color: colors.locH}}>\r\n              {findCountActual[1]}\r\n            </Text>\r\n          }\r\n          {/* Separate the Hard stack from Expert, if needed. */}\r\n          {getActlChange &&\r\n            findCountActual[1] > -1 && findCountActual[2] > -1 &&\r\n            '/'\r\n          }\r\n          {/* Is the available count different on Expert? */}\r\n          {getActlChange && findCountActual[2] > -1 &&\r\n            <Text style={{color: colors.locX}}>\r\n              {findCountActual[2]}\r\n            </Text>\r\n          }\r\n          {')'}\r\n        </>\r\n      }\r\n      {/* Print this item's stack count (Normal difficulty). */}\r\n      {getDiffChange && findCount[0] > 0 &&\r\n        <Text style={{color: colors.locN}}>\r\n          {findCount[0]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[0] === -1 &&\r\n        <Text style={{color: colors.locN}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[0] > -1 &&\r\n        <Text style={{color: colors.locN}}>\r\n          ({findCountActual[0]})\r\n        </Text>\r\n      }\r\n      {/* Separate the Normal stack from Hard or Expert, if needed. */}\r\n      {getDiffChange && findCount[0] > 0 &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Hard difficulty). */}\r\n      {getDiffChange && findCount[1] > 0 &&\r\n        <Text style={{color: colors.locH}}>\r\n          {findCount[1]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[1] === -1 &&\r\n        <Text style={{color: colors.locH}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[1] > -1 &&\r\n        <Text style={{color: colors.locH}}>\r\n          ({findCountActual[1]})\r\n        </Text>\r\n      }\r\n      {/* Separate the Hard stack from Expert, if needed. */}\r\n      {getDiffChange &&\r\n        (findCount[1] > 0 && findCount[2] > 0) &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Expert difficulty). */}\r\n      {getDiffChange && findCount[2] > 0 &&\r\n        <Text style={{color: colors.locX}}>\r\n          {findCount[2]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[2] === -1 &&\r\n        <Text style={{color: colors.locX}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[2] > -1 &&\r\n        <Text style={{color: colors.locX}}>\r\n          ({findCountActual[2]})\r\n        </Text>\r\n      }\r\n\r\n      {/* Print this item's stack count (unchanged by game mode). */}\r\n      {!getModeChange &&\r\n        (!getDiffChange && getModeStack > 1) &&\r\n        `x${getModeStack}`\r\n      }\r\n      {!getModeChange && getModeStack !== -1 &&\r\n        '~'\r\n      }\r\n      {/* Print this item's stack count (Game mode A). */}\r\n      {getModeChange && findCountMode[0] > 0 &&\r\n        `x${findCountMode[0]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode A? */}\r\n      {findCountMode[0] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[0].icon}`\r\n      }\r\n      {/* Separate the Mode A stack from Mode B or C, if needed. */}\r\n      {getModeChange && findCountMode[0] > 0 &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Game mode B). */}\r\n      {getModeChange && findCountMode[1] > 0 &&\r\n        `x${findCountMode[1]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode B? */}\r\n      {findCountMode[1] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[1].icon}`\r\n      }\r\n      {/* Separate the Mode B stack from Mode C, if needed. */}\r\n      {getModeChange &&\r\n        (findCountMode[1] > 0 && findCountMode[2] > 0) &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Game mode C). */}\r\n      {getModeChange && findCountMode[2] > 0 &&\r\n        `x${findCountMode[2]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode C? */}\r\n      {findCountMode[2] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[2].icon}`\r\n      }\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   SECRET ENTRY   */\r\n/* **************** */\r\n// Custom view component of a secret, its trigger, and its rewards.\r\nexport const SecretEntry = React.memo(function SecretEntry(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // SecFound: tracks if this secret is selected as 'found'.\r\n  // Used to change location's background color.\r\n  const [getSecFound, setSecFound] = React.useState(false);\r\n\r\n  // ShowModal: tracks the modal's visibility.\r\n  // Used to show or hide the modal with an enlarged secret image.\r\n  // If multiple triggers, integer determines which image to show.\r\n  const [getShowModal, setShowModal] = React.useState(-1);\r\n\r\n  // Fetch FilterDiff states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Send data to device storage.\r\n  const storeSecFound = async (newSecFound) => {\r\n    try {\r\n      // Convert secret's state from boolean to string.\r\n      const jsonSecret = JSON.stringify(newSecFound);\r\n      await AsyncStorage.setItem(`@secret_${props.id}`, jsonSecret);\r\n      //alert(`Saved secret_${props.id} as ${jsonSecret}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      //alert('Failed to save value.');\r\n    }\r\n  };\r\n\r\n  // Read data from device storage.\r\n  const readSecFound = async () => {\r\n    try {\r\n      const jsonSecret = await AsyncStorage.getItem(`@secret_${props.id}`);\r\n      // Convert secret's state from string to boolean.\r\n      const parseSecret = JSON.parse(jsonSecret);\r\n      if (parseSecret !== null) {\r\n        setSecFound(parseSecret);\r\n        //alert(`Loaded secret_${props.id} as ${parseSecret}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read value.');\r\n    }\r\n  };\r\n\r\n  function triggerMe(type) {\r\n    let newSecFound = true;\r\n    newSecFound = triggerSwitch(getSecFound, type);\r\n\r\n    setSecFound(newSecFound);\r\n    // Send this data to storage.\r\n    storeSecFound(newSecFound);\r\n  };\r\n\r\n  // Switch statement to set secret as 'found' / 'not found'.\r\n  function triggerSwitch(toggle, type) {\r\n    switch(type) {\r\n      // 'On' sets this secret as 'found'.\r\n      case \"on\":\r\n        return true;\r\n      // 'Off' sets this secret as 'not found'.\r\n      case \"off\":\r\n        return false;\r\n      // 'Opposite' inverts this secret's status.\r\n      case \"opposite\":\r\n        return !toggle;\r\n      // If no case specified, don't change secret's status.\r\n      default:\r\n        return toggle;\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readSecFound();\r\n\r\n    if (props.getLinkedFind) {\r\n      // If 'Clear All' button has been pressed,\r\n      // toggle this item as 'not found'.\r\n      if (props.getLinkedFind === \"reset\") {\r\n        triggerMe(\"off\");\r\n        props.setLinkedFind();\r\n      }\r\n    }\r\n\r\n  }, [props.getLinkedFind]);\r\n\r\n  return (\r\n    <View style={styles.listEntry}>\r\n      <View style={[\r\n        styles.secretTrigList,\r\n        Platform.OS !== 'web' && {width: '72%'},\r\n        Platform.OS === 'web' && {\r\n          width: (width > 794) ? 590 : '77.5%'\r\n        }\r\n      ]}>\r\n        {/* Map out each entry in secret trigger sub-array. */}\r\n        {props.triggers && props.triggers.map((trigKey, trigIndex) => (\r\n          <View\r\n            key={trigKey.id}\r\n            style={styles.secretTrig}\r\n          >\r\n            <View style={[\r\n              styles.secretTrigID,\r\n              Platform.OS !== 'web' && {width: '27%'},\r\n              Platform.OS === 'web' && {\r\n                width: (width > 794) ? 140 : '24%'\r\n              },\r\n              {backgroundColor: colors.backMed,\r\n              borderColor: colors.border},\r\n              props.triggers.length === 1 && styles.secretTrigOne,\r\n              trigIndex === 0 && styles.secretTrigTop,\r\n              trigIndex !== 0 && styles.secretTrigMid,\r\n              trigIndex === props.triggers.length - 1 &&\r\n                props.triggers.length > 1 &&\r\n                styles.secretTrigBot\r\n            ]}>\r\n              {/* Secret's number and image go here. */}\r\n              {trigIndex === 0 &&\r\n                <Text style={[styles.secretNum, {color: colors.text}]}>\r\n                  {props.number}\r\n                </Text>\r\n              }\r\n              <TouchableWithoutFeedback\r\n                onPress={() => setShowModal(trigIndex)}\r\n              >\r\n                <Image\r\n                  source={props.img[trigIndex]}\r\n                  style={[\r\n                    styles.imgSecret,\r\n                    Platform.OS !== 'web' && {width: 70, height: 70},\r\n                    Platform.OS === 'web' && {\r\n                      width: (width > 794) ? 128 : width*0.16,\r\n                      height: (width > 794) ? 128 : width*0.16,\r\n                    },\r\n                  ]}\r\n                />\r\n              </TouchableWithoutFeedback>\r\n              {/* Modal to show bigger secret image. */}\r\n              <Modal\r\n                animationType='fade'\r\n                transparent={true}\r\n                visible={getShowModal !== -1}\r\n                onRequestClose={() => setShowModal(-1)}\r\n              >\r\n                <TouchableOpacity\r\n                  style={styles.modalView}\r\n                  activeOpacity={1}\r\n                  onPressOut={() => setShowModal(-1)}\r\n                >\r\n                  <TouchableWithoutFeedback>\r\n                    <View style={[\r\n                      styles.secretModal,\r\n                      {backgroundColor: colors.backMed,\r\n                      borderColor: colors.border}\r\n                    ]}>\r\n                      <Image\r\n                        source={props.img[getShowModal]}\r\n                        style={styles.imgSecretBig}\r\n                      />\r\n                    </View>\r\n                  </TouchableWithoutFeedback>\r\n                </TouchableOpacity>\r\n              </Modal>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.secretLoc,\r\n                Platform.OS !== 'web' && {width: '38%'},\r\n                Platform.OS === 'web' && {\r\n                  width: (width > 794) ? 150 : '25%'\r\n                },\r\n                {borderColor: colors.border}\r\n              ]}\r\n              // Toggle whether this secret is selected or not.\r\n              onPress={() => triggerMe(\"opposite\")}\r\n            >\r\n              <ImageBackground\r\n                source={(getCurrentTheme === 'dark')\r\n                  ? (getSecFound\r\n                    ? bgFoundDarkT : bgDefaultDark)\r\n                  : (getSecFound\r\n                    ? bgFoundLightT : bgDefaultLight)}\r\n                resizeMode=\"cover\"\r\n                style={[\r\n                  styles.findBackground\r\n                ]}\r\n              >\r\n                {/* Secret's location goes here. */}\r\n                <FindMeArea\r\n                  findArea={props.areas[trigKey.findArea].value}\r\n                  findCount={trigKey.findDiff}\r\n                />\r\n                <FindMePrecise\r\n                  findNarrow={trigKey.findNarrow}\r\n                />\r\n              </ImageBackground>\r\n            </TouchableOpacity>\r\n            <View style={[\r\n              styles.secretMethod,\r\n              Platform.OS !== 'web' && {width: '35%'},\r\n              Platform.OS === 'web' && {\r\n                width: (width > 794) ? 300 : '51%'\r\n              },\r\n              {backgroundColor: colors.backLight,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              {/* Secret's trigger goes here. */}\r\n              <Text style={[\r\n                styles.secretText,\r\n                {color: colors.text}\r\n              ]}>\r\n                {trigKey.method}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={[\r\n        styles.secretRewardList,\r\n        Platform.OS !== 'web' && {width: '28%'},\r\n        Platform.OS === 'web' && {\r\n          width: (width > 794) ? 174 : '22.5%'\r\n        }\r\n      ]}>\r\n        {/* Map out each entry in secret reward sub-array. */}\r\n        {props.rewards && props.rewards.map((rewKey, rewIndex) => (\r\n          <View\r\n            key={rewKey.id}\r\n            style={styles.secretRewardFlex}\r\n          >\r\n            {(\r\n            // If exclusive to certain difficulties,\r\n            // hide this box if those difficulty filters are disabled.\r\n              (getFilterDiffN &&\r\n                rewKey.findCount && rewKey.findCount[0] !== 0) ||\r\n              (getFilterDiffH &&\r\n                rewKey.findCount && rewKey.findCount[1] !== 0) ||\r\n              (getFilterDiffX &&\r\n                rewKey.findCount && rewKey.findCount[2] !== 0)\r\n            ) &&\r\n              <View style={[\r\n                styles.secretReward,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                {/*!rewKey.rewardLoot && !rewKey.rewardItem &&\r\n                  <Text style={styles.secretRewardText}>WIP</Text>\r\n                */}\r\n                {/* Is this reward a new route? */}\r\n                {rewKey.rewardRoute &&\r\n                  <>\r\n                    <Text style={[\r\n                      styles.secretRewardText,\r\n                      styles.secretRewardOther,\r\n                      {color: colors.text}\r\n                    ]}>\r\n                      A new route between\r\n                    </Text>\r\n                    {rewKey.rewardRoute.map((routeKey, routeIndex) => (\r\n                      <Text\r\n                        key={`route_${routeIndex}`}\r\n                        style={[\r\n                          styles.secretRewardText,\r\n                          styles.secretRewardOther,\r\n                          {color: colors.text}\r\n                      ]}>\r\n                        {/* Print 'and' before\r\n                            final destination in list. */}\r\n                        {routeIndex === rewKey.rewardRoute.length -1 &&\r\n                          <Text>and </Text>\r\n                        }\r\n                        {/* Print each destination. */}\r\n                        {routeKey}\r\n                        {/* Print comma after each destination\r\n                            if list has at least 3 destinations. */}\r\n                        {routeIndex !== rewKey.rewardRoute.length - 1 &&\r\n                          rewKey.rewardRoute.length > 2 &&\r\n                          <Text>,</Text>\r\n                        }\r\n                      </Text>\r\n                    ))}\r\n                  </>\r\n                }\r\n                {/* Is this reward a loot item? */}\r\n                {rewKey.rewardLoot &&\r\n                  <>\r\n                    <Text style={[\r\n                      styles.secretRewardText,\r\n                      {color: colors.text}\r\n                    ]}>\r\n                      <FindMeArea\r\n                        value={rewKey.value}\r\n                        findArea={rewKey.rewardLoot}\r\n                        findCount={rewKey.findCount}\r\n                        secret={true}\r\n                      />\r\n                      {':'}\r\n                    </Text>\r\n                    {/* Loot item's value goes here. */}\r\n                    <View style={styles.lootRow}>\r\n                      {rewKey.value && rewKey.value[0] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGold}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[0]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {rewKey.value && rewKey.value[1] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGems}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[1]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {rewKey.value && rewKey.value[2] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGoods}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[2]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {/* If multiple loot items have same value,\r\n                          clarify shown value is not cumulative. */}\r\n                      {rewKey.findCount &&\r\n                        Math.max(...rewKey.findCount) > 1 &&\r\n                        <Text style={[\r\n                          styles.secretRewardText,\r\n                          {color: colors.text}\r\n                        ]}>\r\n                          {'each'}\r\n                        </Text>\r\n                      }\r\n                    </View>\r\n                  </>\r\n                }\r\n                {/* Is this reward an inventory item? */}\r\n                {rewKey.rewardItem &&\r\n                  <Text style={[\r\n                    styles.secretRewardText,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    <FindMeArea\r\n                      value={rewKey.value}\r\n                      findArea={rewKey.rewardItem}\r\n                      findCount={rewKey.findCount}\r\n                      secret={true}\r\n                    />\r\n                  </Text>\r\n                }\r\n                {/* Is this reward something else? */}\r\n                {rewKey.rewardOther &&\r\n                  <Text style={[\r\n                    styles.secretRewardText,\r\n                    styles.secretRewardOther,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {rewKey.rewardOther}\r\n                  </Text>\r\n                }\r\n              </View>\r\n            }\r\n          </View>\r\n        ))}\r\n        {/* Is there no tangible reward for finding this secret? */}\r\n        {!props.rewards &&\r\n          <View style={styles.secretReward}>\r\n            <Text style={[\r\n              styles.secretRewardText,\r\n              styles.secretRewardOther,\r\n              {color: colors.text}\r\n            ]}>\r\n              None\r\n            </Text>\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   IMAGE SWITCH   */\r\n/* **************** */\r\n// Custom view component showing a slideshow of images.\r\nconst ImageSwitch = React.memo(function ImageSwitch(props) {\r\n  // ImageIndex: tracks the current index in the image array.\r\n  const [getImageIndex, setImageIndex] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Create an interval to iterate through the image array.\r\n    const imageID = setInterval(() => {\r\n      if (getImageIndex < props.img.length - 1) {\r\n        setImageIndex(getImageIndex + 1);\r\n      } else if (getImageIndex === props.img.length - 1) {\r\n        setImageIndex(0);\r\n      }\r\n    // Delay how often the interval updates.\r\n    // 2000 milliseconds = every 2 seconds.\r\n    }, 2000);\r\n\r\n    // Clear the interval when the component unmounts.\r\n    return () => clearInterval(imageID);\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <Image\r\n        source={props.img[getImageIndex]}\r\n        style={styles.imgStyle}\r\n      />\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   TOTALS VIEW    */\r\n/* **************** */\r\n// Custom view component of the mission's loot values & requirements.\r\nexport const TotalsView = React.memo(function TotalsView(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} = React.useContext(FoundContext);\r\n\r\n  // Fetch CarryLoot and CarryFound states from context.\r\n  const {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // FoundLoot: tracks the values of loot selected by the user.\r\n  // Each nested array is for Normal, Hard, & Expert difficulty.\r\n  // Each index in an array is for gold, gems, goods, and total.\r\n  const [getFoundLoot, setFoundLoot] =\r\n    React.useState([[0,0,0,0], [0,0,0,0], [0,0,0,0]]);\r\n\r\n  // FoundPocket: tracks the pickpockets selected by the user.\r\n  // Each index in the array is for Normal, Hard, & Expert difficulty.\r\n  const [getFoundPocket, setFoundPocket] = React.useState([0,0,0]);\r\n\r\n  // Share: tracks if any difficulties have the same loot total.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which total table headers to show.\r\n  const [getShareNH, setShareNH] = React.useState(false);\r\n  const [getShareHX, setShareHX] = React.useState(false);\r\n  const [getShareNX, setShareNX] = React.useState(false);\r\n\r\n  // Goal: tracks if any difficulties have the same loot goal.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which goal table headers to show.\r\n  const [getGoalNH, setGoalNH] = React.useState(false);\r\n  const [getGoalHX, setGoalHX] = React.useState(false);\r\n  const [getGoalNX, setGoalNX] = React.useState(false);\r\n\r\n  // Pocket: tracks if any difficulties have the same pickpockets.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which pickpocket table headers to show.\r\n  const [getPocketNH, setPocketNH] = React.useState(false);\r\n  const [getPocketHX, setPocketHX] = React.useState(false);\r\n  const [getPocketNX, setPocketNX] = React.useState(false);\r\n\r\n  // Read data from device storage.\r\n  /*const readFoundLoot = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(`@myloot_${props.title}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        setFoundLoot(parseArray);\r\n        //alert(`Loaded myloot_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read loot array.');\r\n    }\r\n  };\r\n  const readFoundPocket = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(`@mypocket_${props.title}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        setFoundPocket(parseArray);\r\n        //alert(`Loaded mypocket_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read pocket array.');\r\n    }\r\n  };*/\r\n\r\n  // Function to limit the TextInput to numeric characters.\r\n  function onlyNumeric(over) {\r\n    // Failsafe so an empty input doesn't cause errors.\r\n    if (over === '') {\r\n      over = '0';\r\n    }\r\n    // Use a regex to remove any characters that aren't numbers.\r\n    over = over.replace(/[^0-9]/g, '');\r\n    // Use a regex to remove any leading zeros.\r\n    over = over.replace(/^0+/, '');\r\n    setCarryLoot(over);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    //readFoundLoot();\r\n    //readFoundPocket();\r\n\r\n    // Do Normal and Hard have the same loot totals?\r\n    if (props.totals && props.lootChanges) {\r\n      if (props.lootChanges[0] === props.lootChanges[1]) {\r\n          //props.totals[0][0] === props.totals[1][0] &&\r\n          //props.totals[0][1] === props.totals[1][1] &&\r\n          //props.totals[0][2] === props.totals[1][2] &&\r\n          //props.totals[0][3] === props.totals[1][3]) {\r\n        setShareNH(true);\r\n        // Do Normal and Hard have the same loot goal?\r\n        setGoalNH(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[0] !== props.goal1.total[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[0] !== props.goal1.gold[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[0] !== props.goal1.gems[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[0] !== props.goal1.goods[1]) {\r\n            setGoalNH(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[0] !== props.goal2.total[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[0] !== props.goal2.gold[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[0] !== props.goal2.gems[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[0] !== props.goal2.goods[1]) {\r\n            setGoalNH(false);\r\n          }\r\n        }\r\n      }\r\n      // Do Hard and Expert have the same loot totals?\r\n      if (props.lootChanges[1] === props.lootChanges[2]) {\r\n          //props.totals[1][0] === props.totals[2][0] &&\r\n          //props.totals[1][1] === props.totals[2][1] &&\r\n          //props.totals[1][2] === props.totals[2][2] &&\r\n          //props.totals[1][3] === props.totals[2][3]) {\r\n        setShareHX(true);\r\n        // Do Hard and Expert have the same loot goal?\r\n        setGoalHX(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[1] !== props.goal1.total[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[1] !== props.goal1.gold[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[1] !== props.goal1.gems[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[1] !== props.goal1.goods[2]) {\r\n            setGoalHX(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[1] !== props.goal2.total[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[1] !== props.goal2.gold[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[1] !== props.goal2.gems[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[1] !== props.goal2.goods[2]) {\r\n            setGoalHX(false);\r\n          }\r\n        }\r\n      }\r\n      // Do Normal and Expert have the same loot totals?\r\n      if (props.lootChanges[0] === props.lootChanges[2]) {\r\n          //props.totals[0][0] === props.totals[2][0] &&\r\n          //props.totals[0][1] === props.totals[2][1] &&\r\n          //props.totals[0][2] === props.totals[2][2] &&\r\n          //props.totals[0][3] === props.totals[2][3]) {\r\n        setShareNX(true);\r\n        // Do Normal and Expert have the same loot goal?\r\n        setGoalNX(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[0] !== props.goal1.total[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[0] !== props.goal1.gold[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[0] !== props.goal1.gems[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[0] !== props.goal1.goods[2]) {\r\n            setGoalNX(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[0] !== props.goal2.total[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[0] !== props.goal2.gold[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[0] !== props.goal2.gems[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[0] !== props.goal2.goods[2]) {\r\n            setGoalNX(false);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (props.pocketCount && props.pocketChanges) {\r\n      // Do Normal and Hard have the same pickpockets?\r\n      if (props.pocketChanges[0] === props.pocketChanges[1]) {\r\n        setPocketNH(true);\r\n      }\r\n      // Do Hard and Expert have the same pickpockets?\r\n      if (props.pocketChanges[1] === props.pocketChanges[2]) {\r\n        setPocketHX(true);\r\n      }\r\n      // Do Normal and Expert have the same pickpockets?\r\n      if (props.pocketChanges[0] === props.pocketChanges[2]) {\r\n        setPocketNX(true);\r\n      }\r\n    }\r\n\r\n    // If navigating directly from previous mission,\r\n    // retain that mission's found loot total, if needed.\r\n    if (props.carriedLoot) {\r\n      setCarryLoot(props.carriedLoot.toString());\r\n    }\r\n\r\n    // Create an interval to force the found totals to update.\r\n    const updateMe = setInterval(() => {\r\n      setFoundLoot(accumLoot.current);\r\n      setFoundPocket(accumPocket.current);\r\n    // Delay how often the interval updates.\r\n    // 200 milliseconds = five times per second.\r\n    }, 200);\r\n\r\n    // Clear the interval when the component unmounts.\r\n    return () => clearInterval(updateMe);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={[styles.totalBorder, {borderColor: colors.border}]}>\r\n      <ScrollView\r\n        style={{\r\n          flexGrow: (Platform.OS === 'web') ? 0 : 1,\r\n          height: (!props.totals && !props.pocketCount) ? '0%' :\r\n            (Platform.OS === 'web') ? height*0.33 : '25%'\r\n        }}\r\n        contentContainerStyle={styles.totalView}\r\n      >\r\n        {/* If loot carries over from the previous mission,\r\n            allow user to input the total loot they found. */}\r\n        {props.totals && props.carryLoot &&\r\n          <View style={styles.carryView}>\r\n            <Text style={[styles.carryText, {color: colors.text}]}>\r\n              {`Enter previous loot: `}\r\n            </Text>\r\n            <TextInput\r\n              style={[\r\n                styles.carryInput,\r\n                {color: colors.text,\r\n                borderColor: colors.inputBorder}\r\n              ]}\r\n              inputMode='numeric'\r\n              maxLength={5}\r\n              onChangeText={over => onlyNumeric(over)}\r\n              value={getCarryLoot}\r\n              // Show carryover loot found in the previous mission.\r\n              defaultValue={getCarryLoot.toString()}\r\n            />\r\n          </View>\r\n        }\r\n        {/* If this mission has loot,\r\n            display a table showing totals for each loot value. */}\r\n        {(props.totals &&\r\n         (Math.max(...props.totals[0]) > 0 ||\r\n          Math.max(...props.totals[1]) > 0 ||\r\n          Math.max(...props.totals[2]) > 0) ) &&\r\n          <View style={styles.spacedView}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>\r\n                  Loot Totals\r\n                  </Text>\r\n              </View>\r\n              {/* Column headers for gold / gems / goods / total. */}\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGold}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGems}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGoods}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Total</Text>\r\n              </View>\r\n              {/* Extra column if loot carries over. */}\r\n              {props.carryLoot &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.tableHeadText,\r\n                    {fontSize: (Platform.OS !== 'web') ? 8 :\r\n                            (width < 626) ? 10 : 14}\r\n                  ]}>+ Carryover</Text>\r\n                </View>\r\n              }\r\n            </View>\r\n            {props.totals.map((outerKey, a) => (\r\n              <View key={`outer_${a}`}>\r\n                {/* Default row: All, N+H, N+X, or N */}\r\n                {/* Second row: H+X or H */}\r\n                {/* Third row: X */}\r\n                {((a === 0) ||\r\n                  (a === 1 && !getShareNH) ||\r\n                  (a === 2 && !getShareHX && !getShareNX)) &&\r\n                  <View style={styles.tableRow}>\r\n                    {Math.max(...outerKey) > 0 &&\r\n                      <>\r\n                        <View style={[\r\n                          styles.tableRowStart,\r\n                          styles.sizeRowStart,\r\n                          {backgroundColor: colors.backMed,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          {/* All difficulties have the same total. */}\r\n                          {a === 0 &&\r\n                            getShareNH && getShareHX && getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              All\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Hard have the same total. */}\r\n                          {a === 0 &&\r\n                            getShareNH && !getShareHX && !getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard and Expert have the same total. */}\r\n                          {a === 1 &&\r\n                            !getShareNH && getShareHX && !getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Expert have the same total. */}\r\n                          {a === 0 &&\r\n                            !getShareNH && !getShareHX && getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal has a different total. */}\r\n                          {a === 0 && !getShareNH && !getShareNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard has a different total. */}\r\n                          {a === 1 && !getShareNH && !getShareHX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Expert has a different total. */}\r\n                          {a === 2 && !getShareHX && !getShareNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                        </View>\r\n                        {/* Display found loot value & max loot value. */}\r\n                        {outerKey.map((innerKey, b) => (\r\n                          <View\r\n                            key={`inner_${b}`}\r\n                            style={[styles.tableRowBox,\r\n                              {width: (Platform.OS !== 'web')\r\n                                      ? (width < 400) ? 48 : 66\r\n                                      : (width < 626) ? 60 : 100,\r\n                              borderColor: colors.border}\r\n                          ]}>\r\n                            <ImageBackground\r\n                              source={(getCurrentTheme === 'dark')\r\n                                ? ((getFoundLoot[a][b] >= innerKey)\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundDarkS : bgFoundDark)\r\n                                  : bgDefaultDark)\r\n                                : ((getFoundLoot[a][b] >= innerKey)\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundLightS : bgFoundLight)\r\n                                  : bgDefaultLight)}\r\n                              resizeMode=\"cover\"\r\n                              style={[\r\n                                styles.totalBackground\r\n                              ]}\r\n                            >\r\n                              <Text style={[\r\n                                styles.tableRowText, {color: colors.text}\r\n                              ]}>\r\n                                {getFoundLoot[a][b]}\r\n                                {((Platform.OS !== 'web' && width < 400) ||\r\n                                  (Platform.OS === 'web' && width < 626)) &&\r\n                                  \"\\n\"\r\n                                }\r\n                                {\" / \"}\r\n                                {innerKey}\r\n                              </Text>\r\n                            </ImageBackground>\r\n                          </View>\r\n                        ))}\r\n                        {/* Carryover loot box if input is empty. */}\r\n                        {props.carryLoot && getCarryLoot === '' &&\r\n                          <View style={[styles.tableRowBox,\r\n                            {width: (Platform.OS !== 'web')\r\n                                    ? (width < 400) ? 48 : 66\r\n                                    : (width < 626) ? 60 : 100,\r\n                            borderColor: colors.border}\r\n                          ]}>\r\n                            <ImageBackground\r\n                              source={(getCurrentTheme === 'dark')\r\n                                ? ((getFoundLoot[a][3] >= props.totals[a][3])\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundDarkS : bgFoundDark)\r\n                                  : bgDefaultDark)\r\n                                : ((getFoundLoot[a][3] >= props.totals[a][3])\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundLightS : bgFoundLight)\r\n                                  : bgDefaultLight)}\r\n                              resizeMode=\"cover\"\r\n                              style={[\r\n                                styles.totalBackground\r\n                              ]}\r\n                            >\r\n                              <Text style={[\r\n                                styles.tableRowText, {color: colors.text}\r\n                              ]}>\r\n                                {getFoundLoot[a][3]}\r\n                                {((Platform.OS !== 'web' && width < 400) ||\r\n                                  (Platform.OS === 'web' && width < 626)) &&\r\n                                  \"\\n\"\r\n                                }\r\n                                {\" / \"}\r\n                                {props.totals[a][3]}\r\n                              </Text>\r\n                            </ImageBackground>\r\n                          </View>\r\n                        }\r\n                        {/* Carryover loot box if input is given. */}\r\n                        {props.carryLoot && getCarryLoot !== '' &&\r\n                          <View style={[styles.tableRowBox,\r\n                            {width: (Platform.OS !== 'web')\r\n                                    ? (width < 400) ? 48 : 66\r\n                                    : (width < 626) ? 60 : 100,\r\n                            borderColor: colors.border},\r\n                            (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                            (parseInt(getCarryLoot) + props.totals[a][3]) &&\r\n                            {backgroundColor: colors.found}\r\n                          ]}>\r\n                            <ImageBackground\r\n                              source={(getCurrentTheme === 'dark')\r\n                                ? ((getCarryFound &&\r\n                                  (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                                  (parseInt(getCarryLoot) + props.totals[a][3]))\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundDarkS : bgFoundDark)\r\n                                  : bgDefaultDark)\r\n                                : ((getCarryFound &&\r\n                                  (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                                  (parseInt(getCarryLoot) + props.totals[a][3]))\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundLightS : bgFoundLight)\r\n                                  : bgDefaultLight)}\r\n                              resizeMode=\"cover\"\r\n                              style={[\r\n                                styles.totalBackground\r\n                              ]}\r\n                            >\r\n                              <Text style={[\r\n                                styles.tableRowText, {color: colors.text}\r\n                              ]}>\r\n                                {getCarryFound &&\r\n                                  parseInt(getCarryLoot) + getFoundLoot[a][3]}\r\n                                {!getCarryFound && getFoundLoot[a][3]}\r\n                                {((Platform.OS !== 'web' && width < 400) ||\r\n                                  (Platform.OS === 'web' && width < 626)) &&\r\n                                  \"\\n\"\r\n                                }\r\n                                {\" / \"}\r\n                                {parseInt(getCarryLoot) + props.totals[a][3]}\r\n                              </Text>\r\n                            </ImageBackground>\r\n                          </View>\r\n                        }\r\n                      </>\r\n                    }\r\n                  </View>\r\n                }\r\n              </View>\r\n            ))}\r\n          </View>\r\n        }\r\n\r\n        {/* If this mission has a loot goal,\r\n            display a table of loot goals. */}\r\n        {( (props.goal1 && props.goal1.total &&\r\n            Math.max(...props.goal1.total) > 0) ||\r\n           (props.goal2 && props.goal2.total &&\r\n            Math.max(...props.goal2.total) > 0) ) &&\r\n          <View style={styles.spacedView}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Loot Goals</Text>\r\n              </View>\r\n              {/* Column for the first loot goal. */}\r\n              {props.goal1 && props.goal1.total &&\r\n                Math.max(...props.goal1.total) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  {/* Is this loot goal optional or a bonus? */}\r\n                  {props.goal1.info !== \"optional\" &&\r\n                   props.goal1.info !== \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>Required</Text>\r\n                  }\r\n                  {props.goal1.info === \"optional\" &&\r\n                    <Text style={styles.tableHeadText}>(Optional)</Text>\r\n                  }\r\n                  {props.goal1.info === \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>(Bonus)</Text>\r\n                  }\r\n                </View>\r\n              }\r\n              {/* Column for the first goal's gold minimum. */}\r\n              {props.goal1 && props.goal1.gold &&\r\n                Math.max(...props.goal1.gold) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the first goal's gems minimum. */}\r\n              {props.goal1 && props.goal1.gems &&\r\n                Math.max(...props.goal1.gems) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the first goal's goods minimum. */}\r\n              {props.goal1 && props.goal1.goods &&\r\n                Math.max(...props.goal1.goods) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the second loot goal. */}\r\n              {props.goal2 && props.goal2.total &&\r\n                Math.max(...props.goal2.total) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  {/* Is this loot goal optional or a bonus? */}\r\n                  {props.goal2.info !== \"optional\" &&\r\n                   props.goal2.info !== \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>Required</Text>\r\n                  }\r\n                  {props.goal2.info === \"optional\" &&\r\n                    <Text style={styles.tableHeadText}>(Optional)</Text>\r\n                  }\r\n                  {props.goal2.info === \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>(Bonus)</Text>\r\n                  }\r\n                </View>\r\n              }\r\n              {/* Column for the second goal's gold minimum. */}\r\n              {props.goal2 && props.goal2.gold &&\r\n                Math.max(...props.goal2.gold) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the second goal's gems minimum. */}\r\n              {props.goal2 && props.goal2.gems &&\r\n                Math.max(...props.goal2.gems) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the second goal's goods minimum. */}\r\n              {props.goal2 && props.goal2.goods &&\r\n                Math.max(...props.goal2.goods) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n            </View>\r\n            {props.goal1.total.map((goalKey, g) => (\r\n              <View key={`total_${g}`}>\r\n                {/* Default row: All, N+H, N+X, or N */}\r\n                {/* Second row: H+X or H */}\r\n                {/* Third row: X */}\r\n                {((g === 0) ||\r\n                  (g === 1 && !getGoalNH) ||\r\n                  (g === 2 && !getGoalHX && !getGoalNX)) &&\r\n                  <View style={styles.tableRow}>\r\n                    {/* Make sure difficulty level has a loot goal. */}\r\n                    {/* Edge case for a gold/gems/goods minimum\r\n                        but not a total minimum. */}\r\n                    {(goalKey !== 0 ||\r\n                      (goalKey === 0 &&\r\n                        ((props.goal1.gold && props.goal1.gold[g] !== 0) ||\r\n                        (props.goal1.gems && props.goal1.gems[g] !== 0) ||\r\n                        (props.goal1.goods && props.goal1.goods[g] !== 0))\r\n                      )\r\n                    ) &&\r\n                      <>\r\n                        <View style={[\r\n                          styles.tableRowStart,\r\n                          styles.sizeRowStart,\r\n                          {backgroundColor: colors.backMed,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          {/* All difficulties have the same goal. */}\r\n                          {g === 0 &&\r\n                            getGoalNH && getGoalHX && getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              All\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Hard have the same goal. */}\r\n                          {g === 0 &&\r\n                            getGoalNH && !getGoalHX && !getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard and Expert have the same goal. */}\r\n                          {g === 1 &&\r\n                            !getGoalNH && getGoalHX && !getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Expert have the same goal. */}\r\n                          {g === 0 &&\r\n                            !getGoalNH && !getGoalHX && getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal has a different goal. */}\r\n                          {g === 0 && !getGoalNH && !getGoalNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard has a different goal. */}\r\n                          {g === 1 && !getGoalNH && !getGoalHX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Expert has a different goal. */}\r\n                          {g === 2 && !getGoalHX && !getGoalNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                        </View>\r\n                        {/* Display found loot & loot goal. */}\r\n                        <GoalView\r\n                          goalLoot={goalKey}\r\n                          totalLoot={props.totals[g][3]}\r\n                          foundLoot={getFoundLoot[g][3]}\r\n                        />\r\n                        {/* Is there a minimum gold requirement? */}\r\n                        {props.goal1.gold &&\r\n                          Math.max(...props.goal1.gold) > 0 &&\r\n                          <GoalView\r\n                            goalLoot={props.goal1.gold[g]}\r\n                            totalLoot={props.totals[g][0]}\r\n                            foundLoot={getFoundLoot[g][0]}\r\n                          />\r\n                        }\r\n                        {/* Is there a minimum gems requirement? */}\r\n                        {props.goal1.gems &&\r\n                          Math.max(...props.goal1.gems) > 0 &&\r\n                          <GoalView\r\n                            goalLoot={props.goal1.gems[g]}\r\n                            totalLoot={props.totals[g][1]}\r\n                            foundLoot={getFoundLoot[g][1]}\r\n                          />\r\n                        }\r\n                        {/* Is there a minimum goods requirement? */}\r\n                        {props.goal1.goods &&\r\n                          Math.max(...props.goal1.goods) > 0 &&\r\n                          <GoalView\r\n                            goalLoot={props.goal1.goods[g]}\r\n                            totalLoot={props.totals[g][2]}\r\n                            foundLoot={getFoundLoot[g][2]}\r\n                          />\r\n                        }\r\n                        {/* Is there a second loot goal? */}\r\n                        {props.goal2 && props.goal2.total &&\r\n                          Math.max(...props.goal2.total) > 0 &&\r\n                          <>\r\n                            <GoalView\r\n                              goalLoot={props.goal2.total[g]}\r\n                              totalLoot={props.totals[g][3]}\r\n                              foundLoot={getFoundLoot[g][3]}\r\n                            />\r\n                            {/* Is there a minimum gold requirement? */}\r\n                            {props.goal2 && props.goal2.gold &&\r\n                              Math.max(...props.goal2.gold) > 0 &&\r\n                              <GoalView\r\n                                goalLoot={props.goal2.gold[g]}\r\n                                totalLoot={props.totals[g][0]}\r\n                                foundLoot={getFoundLoot[g][0]}\r\n                              />\r\n                            }\r\n                            {/* Is there a minimum gems requirement? */}\r\n                            {props.goal2 && props.goal2.gems &&\r\n                              Math.max(...props.goal2.gems) > 0 &&\r\n                              <GoalView\r\n                                goalLoot={props.goal2.gems[g]}\r\n                                totalLoot={props.totals[g][1]}\r\n                                foundLoot={getFoundLoot[g][1]}\r\n                              />\r\n                            }\r\n                            {/* Is there a minimum goods requirement? */}\r\n                            {props.goal2 && props.goal2.goods &&\r\n                              Math.max(...props.goal2.goods) > 0 &&\r\n                              <GoalView\r\n                                goalLoot={props.goal2.goods[g]}\r\n                                totalLoot={props.totals[g][2]}\r\n                                foundLoot={getFoundLoot[g][2]}\r\n                              />\r\n                            }\r\n                          </>\r\n                        }\r\n                      </>\r\n                    }\r\n                  </View>\r\n                }\r\n              </View>\r\n            ))}\r\n          </View>\r\n        }\r\n\r\n        {/* If this mission has pickpockets,\r\n            display a table of pickpocket counts. */}\r\n        {(props.pocketCount &&\r\n         (Math.max(...props.pocketCount) > 0) ) &&\r\n          <View style={styles.spacedView}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Pickpockets</Text>\r\n              </View>\r\n              {/* Column header. */}\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.pocketRowBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Total</Text>\r\n              </View>\r\n            </View>\r\n            {props.pocketCount.map((pickKey, c) => (\r\n              <View key={`pocket_${c}`}>\r\n                {/* Default row: All, N+H, N+X, or N */}\r\n                {/* Second row: H+X or H */}\r\n                {/* Third row: X */}\r\n                {((c === 0) ||\r\n                  (c === 1 && !getPocketNH) ||\r\n                  (c === 2 && !getPocketHX && !getPocketNX)) &&\r\n                  <View style={styles.tableRow}>\r\n                    {pickKey > 0 &&\r\n                      <>\r\n                        <View style={[\r\n                          styles.tableRowStart,\r\n                          styles.sizeRowStart,\r\n                          {backgroundColor: colors.backMed,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          {/* All difficulties have the same pickpockets. */}\r\n                          {c === 0 &&\r\n                            getPocketNH && getPocketHX && getPocketNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              All\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Hard have the same pickpockets. */}\r\n                          {c === 0 &&\r\n                            getPocketNH && !getPocketHX && !getPocketNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard and Expert have the same pickpockets. */}\r\n                          {c === 1 &&\r\n                            !getPocketNH && getPocketHX && !getPocketNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Expert have the same pickpockets. */}\r\n                          {c === 0 &&\r\n                            !getPocketNH && !getPocketHX && getPocketNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal has different pickpockets. */}\r\n                          {c === 0 && !getPocketNH && !getPocketNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard has different pickpockets. */}\r\n                          {c === 1 && !getPocketNH && !getPocketHX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Expert has different pickpockets. */}\r\n                          {c === 2 && !getPocketHX && !getPocketNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                        </View>\r\n                        {/* Display found pickpockets & max pickpockets. */}\r\n                        <View style={[\r\n                          styles.tableRowBox,\r\n                          styles.pocketRowBox,\r\n                          {borderColor: colors.border}\r\n                        ]}>\r\n                          <ImageBackground\r\n                            source={(getCurrentTheme === 'dark')\r\n                              ? ((getFoundPocket[c] >= props.pocketCount[c])\r\n                                ? ((Platform.OS === 'web' && width < 626)\r\n                                  ? bgFoundDarkS : bgFoundDark)\r\n                                : bgDefaultDark)\r\n                              : ((getFoundPocket[c] >= props.pocketCount[c])\r\n                                ? ((Platform.OS === 'web' && width < 626)\r\n                                  ? bgFoundLightS : bgFoundLight)\r\n                                : bgDefaultLight)}\r\n                            resizeMode=\"cover\"\r\n                            style={[\r\n                              styles.totalBackground\r\n                            ]}\r\n                          >\r\n                            <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                              {getFoundPocket[c]}{\" / \"}{props.pocketCount[c]}\r\n                            </Text>\r\n                          </ImageBackground>\r\n                        </View>\r\n                      </>\r\n                    }\r\n                  </View>\r\n                }\r\n              </View>\r\n            ))}\r\n          </View>\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*     GOAL VIEW    */\r\n/* **************** */\r\n// Custom view component of a loot goal and its percentage.\r\nexport function GoalView(props) {\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  //const {getFoundLoot, setFoundLoot, getFoundPocket, setFoundPocket} =\r\n  //  React.useContext(FoundContext);\r\n\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  return (\r\n    <>\r\n      {/* If no value minimum, display an empty space. */}\r\n      {props.goalLoot === 0 &&\r\n        <View style={styles.emptyRowBox} />\r\n      }\r\n      {/* Otherwise, display the loot goal. */}\r\n      {props.goalLoot > 0 &&\r\n        <View style={[\r\n          styles.tableRowBox,\r\n          {width: (Platform.OS !== 'web')\r\n                  ? (width < 400) ? 48 : 66\r\n                  : (width < 626) ? 60 : 100,\r\n          borderColor: colors.border}\r\n        ]}>\r\n          <ImageBackground\r\n            source={(getCurrentTheme === 'dark')\r\n              ? ((props.foundLoot >= props.goalLoot)\r\n                ? ((Platform.OS === 'web' && width < 626)\r\n                  ? bgFoundDarkS : bgFoundDark)\r\n                : bgDefaultDark)\r\n              : ((props.foundLoot >= props.goalLoot)\r\n                ? ((Platform.OS === 'web' && width < 626)\r\n                  ? bgFoundLightS : bgFoundLight)\r\n                : bgDefaultLight)}\r\n            resizeMode=\"cover\"\r\n            style={[\r\n              styles.totalBackground\r\n            ]}\r\n          >\r\n            {/* Display found loot compared to loot goal. */}\r\n            <Text style={[\r\n              styles.tableRowText,\r\n              {color: colors.text}\r\n            ]}>\r\n              {props.foundLoot}\r\n              {((Platform.OS !== 'web' && width < 400) ||\r\n                (Platform.OS === 'web' && width < 626)) &&\r\n                \"\\n\"\r\n              }\r\n              {\" / \"}\r\n              {props.goalLoot}\r\n              {((Platform.OS !== 'web' && width >= 400) ||\r\n                (Platform.OS === 'web' && width >= 626)) &&\r\n                \" \"\r\n              }\r\n            </Text>\r\n            {/* Display loot goal percentage. */}\r\n            <Text style={[\r\n              styles.tableRowText,\r\n              styles.locCount,\r\n              {color: colors.text}\r\n            ]}>\r\n              {\"( \"}\r\n              {`${Math.round(\r\n                (props.goalLoot / props.totalLoot) * 100 )}`}\r\n              {\"% )\"}\r\n            </Text>\r\n          </ImageBackground>\r\n        </View>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*    FILTER VIEW   */\r\n/* **************** */\r\n// Custom view component of options for filtering item locations.\r\nexport function FilterView(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // ShowModal: tracks the modal's visibility.\r\n  // Used to show or hide the modal with 'please wait' text.\r\n  const [getShowModal, setShowModal] = React.useState(false);\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} =\r\n    React.useContext(FoundContext);\r\n\r\n  // Fetch filter states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX,\r\n        getFilterModeA, setFilterModeA,\r\n        getFilterModeB, setFilterModeB,\r\n        getFilterModeC, setFilterModeC,\r\n        getFilterLootGold, setFilterLootGold,\r\n        getFilterLootGems, setFilterLootGems,\r\n        getFilterLootGoods, setFilterLootGoods,\r\n        getFilterOnlyObj, setFilterOnlyObj,\r\n        getFilterOnlyPick, setFilterOnlyPick,\r\n        getFilterOnlySec, setFilterOnlySec,\r\n        getFilterArea, setFilterArea} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Variables for checkbox icon formatting.\r\n  const checkSize = 14;\r\n  const checkColorOn = getCurrentTheme === 'dark'\r\n    ? 'goldenrod' : 'olive';\r\n  const checkColorOff = getCurrentTheme === 'dark'\r\n    ? 'rgb(140,140,140)' : 'rgb(70,70,70)';\r\n\r\n  // Remove this mission's data in device storage.\r\n  const removeStored = async () => {\r\n    const invKeys = [];\r\n    // Show the 'please wait' modal.\r\n    setShowModal(true);\r\n    // Create an array large enough to contain all IDs.\r\n    for (let i = 1; i <= 140; i++) {\r\n      invKeys.push(`@inventory_${props.id}_loot_${i}`);\r\n    }\r\n    for (let i = 1; i <= 110; i++) {\r\n      invKeys.push(`@inventory_${props.id}_item_${i}`);\r\n    }\r\n    for (let i = 1; i <= 70; i++) {\r\n      invKeys.push(`@inventory_${props.id}_junk_${i}`);\r\n    }\r\n    for (let i = 1; i <= 20; i++) {\r\n      invKeys.push(`@secret_${props.id}_sec_${i}`);\r\n    }\r\n    try {\r\n      await AsyncStorage.multiRemove(invKeys);\r\n      await AsyncStorage.removeItem(`@myloot_${props.title}`);\r\n      await AsyncStorage.removeItem(`@mypocket_${props.title}`);\r\n      //alert('Cleared all items.');\r\n    } catch (e) {\r\n      // Error: Clearing the data failed.\r\n      alert('Failed to clear data.');\r\n    }\r\n\r\n    // Reset loot & pickpocket totals to 0.\r\n    accumLoot.current = [[0,0,0,0],[0,0,0,0],[0,0,0,0]];\r\n    accumPocket.current = [0,0,0];\r\n    // Update item boxes.\r\n    props.setLinkedFind('reset');\r\n    // Hide the 'please wait' modal.\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Button to clear all selected items. */}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.allButton,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border}\r\n        ]}\r\n        onPress={removeStored}\r\n      >\r\n        <Text style={{color: colors.text}}>\r\n          Clear All\r\n        </Text>\r\n        {/* Modal to show 'please wait' text. */}\r\n        <Modal\r\n          animationType='fade'\r\n          transparent={true}\r\n          visible={getShowModal}\r\n          onRequestClose={() => setShowModal(false)}\r\n        >\r\n          <View\r\n            style={styles.modalView}\r\n            activeOpacity={1}\r\n          >\r\n            <View style={[\r\n              styles.waitModal,\r\n              {backgroundColor: colors.backLight,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={{color: colors.text}}>\r\n                Clearing mission data.\r\n              </Text>\r\n              <Text style={{color: colors.text}}>\r\n                Please wait...\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.filters}>\r\n        <Text style={[\r\n            Platform.OS !== 'web' && {\r\n              fontSize: width*0.035,\r\n            },\r\n            Platform.OS === 'web' && {\r\n              fontSize: (width > 460) ? 14 : width*0.03,\r\n            },\r\n            {color: colors.text}\r\n          ]}>\r\n          Filters:\r\n        </Text>\r\n        <View>\r\n          {/* Row of difficulty filters, if applicable. */}\r\n          {props.diffChanges &&\r\n            <View style={styles.filterRow}>\r\n              {/* Normal difficulty filter. */}\r\n              <TouchableOpacity\r\n                // Change background color when toggled.\r\n                style={[styles.filterButton,\r\n                  {minWidth: (Platform.OS === 'web')\r\n                    ? 105 : width*0.256,\r\n                  backgroundColor: colors.backLight,\r\n                  borderColor: colors.border},\r\n                  !getFilterDiffN && {backgroundColor: colors.backDark}\r\n                ]}\r\n                // Toggle whether this filter is on or off.\r\n                onPress={() => setFilterDiffN(!getFilterDiffN)}\r\n              >\r\n                {/* Change checkbox icon when toggled. */}\r\n                <Ionicons\r\n                  name={getFilterDiffN ? \"checkbox\" : \"square-outline\"}\r\n                  size={checkSize}\r\n                  color={getFilterDiffN ? checkColorOn : checkColorOff}\r\n                />\r\n                <Text style={[\r\n                  styles.locCount,\r\n                  {fontSize: (Platform.OS === 'web')\r\n                    ? 12 : width*0.028,\r\n                  color: colors.locN}\r\n                ]}>\r\n                  {` ${props.diffNames[0]}`}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {/* Hard difficulty filter. */}\r\n              <TouchableOpacity\r\n                // Change background color when toggled.\r\n                style={[styles.filterButton,\r\n                  {minWidth: (Platform.OS === 'web')\r\n                    ? 105 : width*0.256,\r\n                  backgroundColor: colors.backLight,\r\n                  borderColor: colors.border},\r\n                  !getFilterDiffH && {backgroundColor: colors.backDark}\r\n                ]}\r\n                // Toggle whether this filter is on or off.\r\n                onPress={() => setFilterDiffH(!getFilterDiffH)}\r\n              >\r\n                {/* Change checkbox icon when toggled. */}\r\n                <Ionicons\r\n                  name={getFilterDiffH ? \"checkbox\" : \"square-outline\"}\r\n                  size={checkSize}\r\n                  color={getFilterDiffH ? checkColorOn : checkColorOff}\r\n                />\r\n                <Text style={[\r\n                  styles.locCount,\r\n                  {fontSize: (Platform.OS === 'web')\r\n                    ? 12 : width*0.028,\r\n                  color: colors.locH}\r\n                ]}>\r\n                  {` ${props.diffNames[1]}`}\r\n                </Text>\r\n              </TouchableOpacity>\r\n              {/* Expert difficulty filter. */}\r\n              <TouchableOpacity\r\n                // Change background color when toggled.\r\n                style={[styles.filterButton,\r\n                  {minWidth: (Platform.OS === 'web')\r\n                    ? 105 : width*0.256,\r\n                  backgroundColor: colors.backLight,\r\n                  borderColor: colors.border},\r\n                  !getFilterDiffX && {backgroundColor: colors.backDark}\r\n                ]}\r\n                // Toggle whether this filter is on or off.\r\n                onPress={() => setFilterDiffX(!getFilterDiffX)}\r\n              >\r\n                {/* Change checkbox icon when toggled. */}\r\n                <Ionicons\r\n                  name={getFilterDiffX ? \"checkbox\" : \"square-outline\"}\r\n                  size={checkSize}\r\n                  color={getFilterDiffX ? checkColorOn : checkColorOff}\r\n                />\r\n                <Text style={[\r\n                  styles.locCount,\r\n                  {fontSize: (Platform.OS === 'web')\r\n                    ? 12 : width*0.028,\r\n                  color: colors.locX}\r\n                ]}>\r\n                  {` ${props.diffNames[2]}`}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          }\r\n\r\n          {/* Row of game mode filters, if applicable. */}\r\n          {props.modeNames &&\r\n            <View style={styles.filterRow}>\r\n              {/* Game mode A filter. */}\r\n              {props.modeNames.length >= 1 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeA && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeA(!getFilterModeA)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeA ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeA ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: getFilterModeA\r\n                      ? colors.text : colors.textInvert}\r\n                  ]}>\r\n                    {` ${props.modeNames[0].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Game mode B filter. */}\r\n              {props.modeNames.length >= 2 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeB && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeB(!getFilterModeB)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeB ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeB ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: getFilterModeB\r\n                      ? colors.text : colors.textInvert}\r\n                  ]}>\r\n                    {` ${props.modeNames[1].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Game mode C filter. */}\r\n              {props.modeNames.length >= 3 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeC && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeC(!getFilterModeC)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeC ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeC ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: getFilterModeC\r\n                      ? colors.text : colors.textInvert}\r\n                  ]}>\r\n                    {` ${props.modeNames[2].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n            </View>\r\n          }\r\n\r\n          {/* Row of loot type filters, if applicable.. */}\r\n          {props.lootCount &&\r\n            <View style={styles.filterRow}>\r\n              {/* Gold loot filter. */}\r\n              {props.goldCount &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterLootGold && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterLootGold(!getFilterLootGold)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterLootGold ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterLootGold ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text> </Text>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIconBig}\r\n                  />\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Gems loot filter. */}\r\n              {props.gemsCount &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterLootGems && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterLootGems(!getFilterLootGems)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterLootGems ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterLootGems ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text> </Text>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIconBig}\r\n                  />\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Goods loot filter. */}\r\n              {props.goodsCount &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterLootGoods && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterLootGoods(!getFilterLootGoods)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterLootGoods ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterLootGoods ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text> </Text>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIconBig}\r\n                  />\r\n                </TouchableOpacity>\r\n              }\r\n            </View>\r\n          }\r\n\r\n          {/* Row of miscellaneous filters, if applicable. */}\r\n          {(props.markObj || props.secretCount ||\r\n            (props.pocketCount && (Math.max(...props.pocketCount) > 0) )) &&\r\n            <View style={styles.filterRow}>\r\n              {/* Objectives only filter. */}\r\n              {props.markObj &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterOnlyObj && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterOnlyObj(!getFilterOnlyObj)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterOnlyObj ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterOnlyObj ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: getFilterOnlyObj\r\n                      ? colors.text : colors.textInvert}\r\n                  ]}>\r\n                    {` Only Objs`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Pickpockets only filter. */}\r\n              {(props.pocketCount &&\r\n               (Math.max(...props.pocketCount) > 0) ) &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterOnlyPick && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterOnlyPick(!getFilterOnlyPick)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterOnlyPick ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterOnlyPick ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: getFilterOnlyPick\r\n                      ? colors.text : colors.textInvert}\r\n                  ]}>\r\n                    {` Only Picks`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Secrets only filter. */}\r\n              {props.secretCount > 0 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterOnlySec && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterOnlySec(!getFilterOnlySec)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterOnlySec ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterOnlySec ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: getFilterOnlySec\r\n                      ? colors.text : colors.textInvert}\r\n                  ]}>\r\n                    {` Only Secrets`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n            </View>\r\n          }\r\n        </View>\r\n      </View>\r\n\r\n      {/* Area filter. */}\r\n      <MultipleSelectList\r\n        boxStyles={[\r\n          styles.filterAreaBox,\r\n          Platform.OS !== 'web' && {\r\n            width: '80%',\r\n          },\r\n          Platform.OS === 'web' && {\r\n            width: (width > 460) ? 425 : width*0.92,\r\n          },\r\n          {backgroundColor: colors.inputArea,\r\n          borderColor: colors.inputBorder}\r\n        ]}\r\n        checkBoxStyles={{backgroundColor: colors.inputCheck}}\r\n        inputStyles={{color: colors.text}}\r\n        labelStyles={{color: colors.text}}\r\n        dropdownStyles={[\r\n          styles.filterAreaDropdown,\r\n          Platform.OS !== 'web' && {\r\n            width: '80%',\r\n          },\r\n          Platform.OS === 'web' && {\r\n            width: (width > 460) ? 425 : width*0.92,\r\n          },\r\n          {backgroundColor: colors.inputArea,\r\n          borderColor: colors.inputBorder}\r\n        ]}\r\n        dropdownItemStyles={styles.filterAreaListItem}\r\n        dropdownTextStyles={[\r\n          styles.filterAreaListText,\r\n          {color: colors.text}\r\n        ]}\r\n        badgeStyles={[\r\n          styles.filterAreaBadge,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border}\r\n        ]}\r\n        badgeTextStyles={[\r\n          styles.filterAreaBadgeText,\r\n          {color: colors.text}\r\n        ]}\r\n        data={props.areas}\r\n        save=\"value\"\r\n        setSelected={(area) => setFilterArea(area)}\r\n        placeholder=\"Select Areas\"\r\n        label=\"Selected:\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// Define various styles here.\r\nconst styles = StyleSheet.create({\r\n  listEntry: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    alignItems: 'stretch',\r\n  },\r\n  nameEntry: {\r\n    borderWidth: 1,\r\n    borderTopLeftRadius: 8,\r\n    borderBottomLeftRadius: 8,\r\n    alignItems: 'center',\r\n    width: (Platform.OS === 'web') ? 80 : '15%',\r\n  },\r\n  nameEntryLoot: {\r\n    width: (Platform.OS === 'web') ? 80 : '13.5%',\r\n  },\r\n  subEntry: {\r\n    flex: 1,\r\n    width: (Platform.OS === 'web') ? 764 : '85%',\r\n  },\r\n  subEntryLoot: {\r\n    flex: 1,\r\n    width: (Platform.OS === 'web') ? 764 : '86.5%',\r\n  },\r\n  subEntryLocsPerValue: {\r\n    flex: 10,\r\n    flexDirection: 'row',\r\n    minHeight: (Platform.OS === 'web') ? 38 : 30,\r\n  },\r\n  subEntryLPV_Web: {\r\n    //backgroundColor: 'orange',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    minHeight: (Platform.OS === 'web') ? 38 : 30,\r\n  },\r\n  subEntryValue: {\r\n    //flexDirection: 'row',\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    paddingLeft: (Platform.OS === 'web') ? 4 : 2,\r\n    width: (Platform.OS === 'web') ? 60 : '11%',\r\n  },\r\n  subEntryLoc: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignContent: 'stretch',\r\n    //width: '89%',\r\n  },\r\n  subEntryLocLoot: {\r\n    width: (Platform.OS === 'web') ? 228 : '89%',\r\n  },\r\n  lootRow: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  findBackground: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n  },\r\n  find: {\r\n    borderWidth: 1,\r\n    width: (Platform.OS === 'web') ? 228 : '50%',\r\n  },\r\n  entryText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 7.5,\r\n    textAlign: 'center',\r\n  },\r\n  lootText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n    marginLeft: (Platform.OS === 'web') ? 3 : 2,\r\n  },\r\n  locText: {\r\n    //fontFamily: 'BlueHighway',\r\n    //fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  locCount: {\r\n    fontWeight: 'bold',\r\n  },\r\n  locPick: {\r\n    fontStyle: 'italic',\r\n  },\r\n  locBox: {\r\n    textDecorationLine: 'underline',\r\n  },\r\n  locNoGet: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  secretTrigList: {\r\n    //width: (Platform.OS === 'web') ? 590 : '72%',\r\n  },\r\n  secretTrig: {\r\n    flexDirection: 'row',\r\n    flexGrow: 1,\r\n  },\r\n  secretTrigID: {\r\n    borderWidth: 1,\r\n    alignItems: 'center',\r\n    paddingHorizontal: 3,\r\n    //width: (Platform.OS === 'web') ? 140 : '27%',\r\n  },\r\n  secretTrigOne: {\r\n    borderBottomLeftRadius: 8,\r\n  },\r\n  secretTrigTop: {\r\n    borderTopLeftRadius: 8,\r\n    paddingBottom: (Platform.OS === 'web') ? 5 : 3,\r\n  },\r\n  secretTrigMid: {\r\n    paddingVertical: 8,\r\n  },\r\n  secretTrigBot: {\r\n    borderBottomLeftRadius: 8,\r\n    paddingTop: (Platform.OS === 'web') ? 5 : 3,\r\n    paddingBottom: (Platform.OS === 'web') ? 16 : 13,\r\n  },\r\n  secretNum: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  secretLoc: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    //width: (Platform.OS === 'web') ? 150 : '38%',\r\n  },\r\n  secretMethod: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n    //width: (Platform.OS === 'web') ? 300 : '35%',\r\n  },\r\n  secretText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  secretRewardList: {\r\n    //width: (Platform.OS === 'web') ? 175 : '28%',\r\n  },\r\n  secretRewardFlex: {\r\n    flexGrow: 100,\r\n  },\r\n  secretReward: {\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n  },\r\n  secretRewardText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  secretRewardOther: {\r\n    fontStyle: 'italic',\r\n  },\r\n  secretModal: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: (Platform.OS === 'web') ? 420 : 220,\r\n    height: (Platform.OS === 'web') ? 420 : 220,\r\n  },\r\n  waitModal: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 5,\r\n  },\r\n  modalView: {\r\n    backgroundColor: 'rgba(64,64,64,0.7)',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  totalBorder: {\r\n    borderTopWidth: 3,\r\n  },\r\n  totalView: {\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginBottom: 5,\r\n  },\r\n  carryView: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    margin: 5,\r\n  },\r\n  carryText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 12,\r\n  },\r\n  carryInput: {\r\n    borderWidth: 1,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    width: 50,\r\n    height: 22,\r\n    fontSize: 12,\r\n  },\r\n  spacedView: {\r\n    marginVertical: (Platform.OS === 'web') ? 8 : 5,\r\n  },\r\n  tableHeader: {\r\n    flexDirection: 'row',\r\n  },\r\n  tableHeadBox: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: (Platform.OS === 'web') ? 100 : 70,\r\n    padding: 2,\r\n  },\r\n  tableHeadText: {\r\n    color: 'white',\r\n    fontSize: (Platform.OS === 'web') ? 13 : 8,\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  tableRowStart: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    padding: (Platform.OS === 'web') ? 4 : 2,\r\n  },\r\n  sizeRowStart: {\r\n    width: (Platform.OS === 'web') ? 100 : 70,\r\n  },\r\n  tableRowBox: {\r\n    //backgroundColor: 'lightgray',\r\n    borderWidth: 1,\r\n    //justifyContent: 'center',\r\n    //alignItems: 'flex-end',\r\n    width: (Platform.OS === 'web') ? 100 : 66,\r\n  },\r\n  tableRowText: {\r\n    fontSize: (Platform.OS === 'web') ? 13 : 8,\r\n    textAlign: 'right',\r\n  },\r\n  emptyRowBox: {\r\n    width: (Platform.OS === 'web') ? 100 : 66,\r\n  },\r\n  pocketRowBox: {\r\n    width: (Platform.OS === 'web') ? 60 : 40,\r\n  },\r\n  totalBackground: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: (Platform.OS === 'web') ? 4 : 2,\r\n  },\r\n  filters: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  filterButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    //minWidth: 105,\r\n    minHeight: 27,\r\n  },\r\n  filterTextFalse: {\r\n    color: 'white',\r\n  },\r\n  filterTextMode: {\r\n    //fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  filterAreaBox: {\r\n    borderRadius: 5,\r\n    //width: (Platform.OS === 'web') ? 425 : '80%',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterAreaDropdown: {\r\n    borderRadius: 5,\r\n    //width: (Platform.OS === 'web') ? 425 : '80%',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterAreaListItem: {\r\n    alignItems: 'center',\r\n    marginHorizontal: -5,\r\n    height: 30,\r\n  },\r\n  filterAreaListText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 10,\r\n  },\r\n  filterAreaBadge: {\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n    margin: -5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  filterAreaBadgeText: {\r\n    fontSize: 10,\r\n  },\r\n  allButton: {\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    width: 80,\r\n  },\r\n  imgStyle: {\r\n    marginTop: (Platform.OS === 'web') ? 4 : 2,\r\n    width: (Platform.OS === 'web') ? 64 : 40,\r\n    height: (Platform.OS === 'web') ? 64 : 40,\r\n  },\r\n  imgLootIcon: {\r\n    width: (Platform.OS === 'web') ? 15 : 10,\r\n    height: (Platform.OS === 'web') ? 15 : 10,\r\n  },\r\n  imgLootIconBig: {\r\n    width: (Platform.OS === 'web') ? 18 : 14,\r\n    height: (Platform.OS === 'web') ? 18 : 14,\r\n  },\r\n  imgSecret: {\r\n    //width: (Platform.OS === 'web') ? 128 : 70,\r\n    //height: (Platform.OS === 'web') ? 128 : 70,\r\n  },\r\n  imgSecretBig: {\r\n    width: (Platform.OS === 'web') ? 400 : 200,\r\n    height: (Platform.OS === 'web') ? 400 : 200,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport {\r\n  //NavigationContainer,\r\n  useNavigation,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\n//import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {\r\n  StyleSheet, Platform,\r\n  Image, //Alert,\r\n  Text, //TextInput,\r\n  //Button,\r\n  TouchableOpacity,\r\n  View, ScrollView,\r\n  PixelRatio,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n//import { useFonts } from 'expo-font';\r\n\r\n// Import functions and components from other files.\r\nimport * as Loot from \"./Loot\";\r\n\r\n// Import contexts here.\r\nimport {\r\n  FoundContext, CarryoverContext, FilterContext, SettingContext\r\n} from \"./Context\";\r\n\r\n// Add mission lootlists here.\r\nconst myList = {\r\n  \"t0_test\": require('./lists/t0_practice.json'), // App Test\r\n  \"t0_select\": require('./lists/t0_select.json'), // Select Test\r\n  \"t0_template12\": require('./lists/t0_template12.json'), // Template 1/2\r\n\r\n  // THIEF: THE DARK PROJECT\r\n  \"t1_training\": require('./lists/t1_training.json'), // A Keeper's Training\r\n  \"t1_bafford\": require('./lists/t1_bafford.json'), // Lord Bafford's Manor\r\n  \"t1_cragscleft\": require('./lists/t1_cragscleft.json'), // Break from Cragscleft Prison\r\n  \"t1_bonehoard\": require('./lists/t1_bonehoard.json'), // Down in the Bonehoard\r\n  \"t1_assassins\": require('./lists/t1_assassins.json'), // Assassins\r\n  \"t1_guild\": require('./lists/t1_guild.json'), // Thieves' Guild\r\n  \"t1_sword\": require('./lists/t1_sword.json'), // The Sword\r\n  \"t1_haunted\": require('./lists/t1_haunted.json'), // The Haunted Cathedral\r\n  \"t1_towers\": require('./lists/t1_towers.json'), // The Mage Towers\r\n  \"t1_lost\": require('./lists/t1_lost.json'), // The Lost City\r\n  //\"t1_song\": require('./lists/t1_song.json'), // Song of the Caverns\r\n  //\"t1_undercover\": require('./lists/t1_undercover.json'), // Undercover\r\n  //\"t1_return\": require('./lists/t1_return.json'), // Return to the Cathedral\r\n  //\"t1_escape\": require('./lists/t1_escape.json'), // Escape!\r\n  //\"t1_bedfellows\": require('./lists/t1_bedfellows.json'), // Strange Bedfellows\r\n  //\"t1_maw\": require('./lists/t1_maw.json'), // Into the Maw of Chaos\r\n  //\"t1_blooper\": require('./lists/t1_blooper.json'), // Blooper Reel\r\n\r\n  // THIEF II: THE METAL AGE\r\n  \"t2_interference\": require('./lists/t2_interference.json'), // Running Interference\r\n  \"t2_shipping\": require('./lists/t2_shipping.json'), // Shipping ... and Receiving\r\n  \"t2_framed\": require('./lists/t2_framed.json'), // Framed\r\n  \"t2_ambush\": require('./lists/t2_ambush.json'), // Ambush\r\n  \"t2_eavesdropping\": require('./lists/t2_eavesdropping.json'), // Eavesdropping\r\n  \"t2_bank\": require('./lists/t2_bank.json'), // First City Bank and Trust\r\n  \"t2_blackmail\": require('./lists/t2_blackmail.json'), // Blackmail\r\n  \"t2_courier\": require('./lists/t2_courier.json'), // Trace the Courier\r\n  \"t2_blood\": require('./lists/t2_blood.json'), // Trail of Blood\r\n  \"t2_party\": require('./lists/t2_party.json'), // Life of the Party\r\n  //\"t2_cargo\": require('./lists/t2_cargo.json'), // Precious Cargo\r\n  //\"t2_kidnap\": require('./lists/t2_kidnap.json'), // Kidnap\r\n  //\"t2_casing\": require('./lists/t2_casing.json'), // Casing the Joint\r\n  //\"t2_masks\": require('./lists/t2_masks.json'), // Masks\r\n  //\"t2_soulforge\": require('./lists/t2_soulforge.json'), // Sabotage at Soulforge\r\n  \"t2_guest\": require('./lists/t2_guest.json'), // The Unwelcome Guest\r\n\r\n  // Fan Missions\r\n  \"fm_lampfire\": require('./lists/fm_lampfire.json'), // Autumn in Lampfire Hills\r\n  \"fm_burrickhead\": require('./lists/fm_burrickhead.json'), // The Burrick's Head Inn\r\n  \"fm_spirit_resurrection\": require('./lists/fm_spirit_resurrection.json'), // Cult of the Resurrection\r\n  \"fm_ashton_escape\": require('./lists/fm_ashton_escape.json'), // Escape!\r\n  \"fm_agenda\": require('./lists/fm_agenda.json'), // Hidden Agenda\r\n  \"fm_maelstrom\": require('./lists/fm_maelstrom.json'), // Into the Maelstrom\r\n  \"fm_spirit_manse\": require('./lists/fm_spirit_manse.json'), // The Inverted Manse\r\n  \"fm_forces_invitation\": require('./lists/fm_forces_invitation.json'), // Mysterious Invitation\r\n  \"fm_ashton_stroll\": require('./lists/fm_ashton_stroll.json'), // A Night's Stroll\r\n  \"fm_christmas\": require('./lists/fm_christmas.json'), // The Night Before Christmas\r\n  \"fm_ashton_revenge\": require('./lists/fm_ashton_revenge.json'), // Revenge\r\n  \"fm_cottage\": require('./lists/fm_cottage.json'), // Rose Cottage\r\n  \"fm_seventh_act2\": require('./lists/fm_seventh_act2.json'), // The Seventh Crystal - Act 2\r\n  \"fm_seventh_act3\": require('./lists/fm_seventh_act3.json'), // The Seventh Crystal - Act 3\r\n  \"fm_holiday2004\": require('./lists/fm_holiday2004.json'), // A Thief's Holiday 2004\r\n  \"fm_highway\": require('./lists/fm_highway.json'), // Thieves' Highway\r\n  \"fm_vault\": require('./lists/fm_vault.json'), // Through No Vault of My Own\r\n  \"fm_forces_ultima\": require('./lists/fm_forces_ultima.json'), // Ultima Ratio\r\n  \"fm_unbidden\": require('./lists/fm_unbidden.json'), // Unbidden Guest\r\n  \"fm_united\": require('./lists/fm_united.json'), // United Bank of Auldale\r\n  \"fm_ashton_visit\": require('./lists/fm_ashton_visit.json'), // A Visit to Lord Ashton's\r\n  \"fm_links\": require('./lists/fm_links.json'), // Weak Links\r\n};\r\n\r\n// Add mission screenshots here.\r\nconst myScreens = {\r\n  // T1: A Keeper's Training\r\n  'MIS_t1_training_A': require('./assets/screens/t1_training_A.png'),\r\n  'MIS_t1_training_B': require('./assets/screens/t1_training_B.png'),\r\n  // T1: Lord Bafford's Manor\r\n  'MIS_t1_bafford_A': require('./assets/screens/t1_bafford_A.png'),\r\n  'MIS_t1_bafford_B': require('./assets/screens/t1_bafford_B.png'),\r\n  // T1: Break from Cragscleft Prison\r\n  'MIS_t1_cragscleft_A': require('./assets/screens/t1_cragscleft_A.png'),\r\n  'MIS_t1_cragscleft_B': require('./assets/screens/t1_cragscleft_B.png'),\r\n  // T1: Down in the Bonehoard\r\n  'MIS_t1_bonehoard_A': require('./assets/screens/t1_bonehoard_A.png'),\r\n  'MIS_t1_bonehoard_B': require('./assets/screens/t1_bonehoard_B.png'),\r\n  // T1: Assassins\r\n  'MIS_t1_assassins_A': require('./assets/screens/t1_assassins_A.png'),\r\n  'MIS_t1_assassins_B': require('./assets/screens/t1_assassins_B.png'),\r\n  // T1: Thieves' Guild\r\n  'MIS_t1_guild_A': require('./assets/screens/t1_guild_A.png'),\r\n  'MIS_t1_guild_B': require('./assets/screens/t1_guild_B.png'),\r\n  // T1: The Sword\r\n  'MIS_t1_sword_A': require('./assets/screens/t1_sword_A.png'),\r\n  'MIS_t1_sword_B': require('./assets/screens/t1_sword_B.png'),\r\n  // T1: The Haunted Cathedral\r\n  'MIS_t1_haunted_A': require('./assets/screens/t1_haunted_A.png'),\r\n  'MIS_t1_haunted_B': require('./assets/screens/t1_haunted_B.png'),\r\n  // T1: The Mage Towers\r\n  'MIS_t1_towers_A': require('./assets/screens/t1_towers_A.png'),\r\n  'MIS_t1_towers_B': require('./assets/screens/t1_towers_B.png'),\r\n  // T1: The Lost City\r\n  'MIS_t1_lost_A': require('./assets/screens/t1_lost_A.png'),\r\n  'MIS_t1_lost_B': require('./assets/screens/t1_lost_B.png'),\r\n  // T1: Song of the Caverns\r\n  //'MIS_t1_song_A': require('./assets/screens/t1_song_A.png'),\r\n  //'MIS_t1_song_B': require('./assets/screens/t1_song_B.png'),\r\n  // T1: Undercover\r\n  //'MIS_t1_undercover_A': require('./assets/screens/t1_undercover_A.png'),\r\n  //'MIS_t1_undercover_B': require('./assets/screens/t1_undercover_B.png'),\r\n  // T1: Return to the Cathedral\r\n  //'MIS_t1_return_A': require('./assets/screens/t1_return_A.png'),\r\n  //'MIS_t1_return_B': require('./assets/screens/t1_return_B.png'),\r\n  // T1: Escape!\r\n  //'MIS_t1_escape_A': require('./assets/screens/t1_escape_A.png'),\r\n  //'MIS_t1_escape_B': require('./assets/screens/t1_escape_B.png'),\r\n  // T1: Strange Bedfellows\r\n  //'MIS_t1_bedfellows_A': require('./assets/screens/t1_bedfellows_A.png'),\r\n  //'MIS_t1_bedfellows_B': require('./assets/screens/t1_bedfellows_B.png'),\r\n  // T1: Into the Maw of Chaos\r\n  //'MIS_t1_maw_A': require('./assets/screens/t1_maw_A.png'),\r\n  //'MIS_t1_maw_B': require('./assets/screens/t1_maw_B.png'),\r\n  // T1: Blooper Reel\r\n  //'MIS_t1_blooper_A': require('./assets/screens/t1_blooper_A.png'),\r\n  //'MIS_t1_blooper_B': require('./assets/screens/t1_blooper_B.png'),\r\n\r\n  // T2: Running Interference\r\n  'MIS_t2_interference_A': require('./assets/screens/t2_interference_A.png'),\r\n  'MIS_t2_interference_B': require('./assets/screens/t2_interference_B.png'),\r\n  // T2: Shipping ... and Receiving\r\n  'MIS_t2_shipping_A': require('./assets/screens/t2_shipping_A.png'),\r\n  'MIS_t2_shipping_B': require('./assets/screens/t2_shipping_B.png'),\r\n  // T2: Framed\r\n  'MIS_t2_framed_A': require('./assets/screens/t2_framed_A.png'),\r\n  'MIS_t2_framed_B': require('./assets/screens/t2_framed_B.png'),\r\n  // T2: Ambush\r\n  'MIS_t2_ambush_A': require('./assets/screens/t2_ambush_A.png'),\r\n  'MIS_t2_ambush_B': require('./assets/screens/t2_ambush_B.png'),\r\n  // T2: Eavesdropping\r\n  'MIS_t2_eavesdropping_A': require('./assets/screens/t2_eavesdropping_A.png'),\r\n  'MIS_t2_eavesdropping_B': require('./assets/screens/t2_eavesdropping_B.png'),\r\n  // T2: First City Bank and Trust\r\n  'MIS_t2_bank_A': require('./assets/screens/t2_bank_A.png'),\r\n  'MIS_t2_bank_B': require('./assets/screens/t2_bank_B.png'),\r\n  // T2: Blackmail\r\n  'MIS_t2_blackmail_A': require('./assets/screens/t2_blackmail_A.png'),\r\n  'MIS_t2_blackmail_B': require('./assets/screens/t2_blackmail_B.png'),\r\n  // T2: Trace the Courier\r\n  'MIS_t2_courier_A': require('./assets/screens/t2_courier_A.png'),\r\n  'MIS_t2_courier_B': require('./assets/screens/t2_courier_B.png'),\r\n  // T2: Trail of Blood\r\n  'MIS_t2_blood_A': require('./assets/screens/t2_blood_A.png'),\r\n  'MIS_t2_blood_B': require('./assets/screens/t2_blood_B.png'),\r\n  // T2: Life of the Party\r\n  'MIS_t2_party_A': require('./assets/screens/t2_party_A.png'),\r\n  'MIS_t2_party_B': require('./assets/screens/t2_party_B.png'),\r\n  // T2: Precious Cargo\r\n  //'MIS_t2_cargo_A': require('./assets/screens/t2_cargo_A.png'),\r\n  //'MIS_t2_cargo_B': require('./assets/screens/t2_cargo_B.png'),\r\n  // T2: Kidnap\r\n  //'MIS_t2_kidnap_A': require('./assets/screens/t2_kidnap_A.png'),\r\n  //'MIS_t2_kidnap_B': require('./assets/screens/t2_kidnap_B.png'),\r\n  // T2: Casing the Joint\r\n  //'MIS_t2_casing_A': require('./assets/screens/t2_casing_A.png'),\r\n  //'MIS_t2_casing_B': require('./assets/screens/t2_casing_B.png'),\r\n  // T2: Masks\r\n  //'MIS_t2_masks_A': require('./assets/screens/t2_masks_A.png'),\r\n  //'MIS_t2_masks_B': require('./assets/screens/t2_masks_B.png'),\r\n  // T2: Sabotage at Soulforge\r\n  //'MIS_t2_soulforge_A': require('./assets/screens/t2_soulforge_A.png'),\r\n  //'MIS_t2_soulforge_B': require('./assets/screens/t2_soulforge_B.png'),\r\n  // T2: The Unwelcome Guest (Demo)\r\n  //'MIS_t2_guest_A': require('./assets/screens/t2_guest_A.png'),\r\n  //'MIS_t2_guest_B': require('./assets/screens/t2_guest_B.png'),\r\n\r\n  // FM: Autumn in Lampfire Hills\r\n  'MIS_fm_lampfire_A': require('./assets/screens/fm_lampfire_A.png'),\r\n  'MIS_fm_lampfire_B': require('./assets/screens/fm_lampfire_B.png'),\r\n  // FM: The Burrick's Head Inn\r\n  'MIS_fm_burrickhead_A': require('./assets/screens/fm_burrickhead_A.png'),\r\n  'MIS_fm_burrickhead_B': require('./assets/screens/fm_burrickhead_B.png'),\r\n  // FM: Cult of the Resurrection\r\n  'MIS_fm_spirit_resurrection_A': require('./assets/screens/fm_spirit_resurrection_A.png'),\r\n  'MIS_fm_spirit_resurrection_B': require('./assets/screens/fm_spirit_resurrection_B.png'),\r\n  // FM: Escape!\r\n  'MIS_fm_ashton_escape_A': require('./assets/screens/fm_ashton_escape_A.png'),\r\n  'MIS_fm_ashton_escape_B': require('./assets/screens/fm_ashton_escape_B.png'),\r\n  // FM: Hidden Agenda\r\n  'MIS_fm_agenda_A': require('./assets/screens/fm_agenda_A.png'),\r\n  'MIS_fm_agenda_B': require('./assets/screens/fm_agenda_B.png'),\r\n  // FM: Into the Maelstrom\r\n  'MIS_fm_maelstrom_A': require('./assets/screens/fm_maelstrom_A.png'),\r\n  'MIS_fm_maelstrom_B': require('./assets/screens/fm_maelstrom_B.png'),\r\n  // FM: The Inverted Manse\r\n  'MIS_fm_spirit_manse_A': require('./assets/screens/fm_spirit_manse_A.png'),\r\n  'MIS_fm_spirit_manse_B': require('./assets/screens/fm_spirit_manse_B.png'),\r\n  // FM: Mysterious Invitation\r\n  'MIS_fm_forces_invitation_A': require('./assets/screens/fm_forces_invitation_A.png'),\r\n  'MIS_fm_forces_invitation_B': require('./assets/screens/fm_forces_invitation_B.png'),\r\n  // FM: The Night Before Christmas\r\n  'MIS_fm_christmas_A': require('./assets/screens/fm_christmas_A.png'),\r\n  'MIS_fm_christmas_B': require('./assets/screens/fm_christmas_B.png'),\r\n  // FM: A Night's Stroll\r\n  'MIS_fm_ashton_stroll_A': require('./assets/screens/fm_ashton_stroll_A.png'),\r\n  'MIS_fm_ashton_stroll_B': require('./assets/screens/fm_ashton_stroll_B.png'),\r\n  // FM: Revenge\r\n  'MIS_fm_ashton_revenge_A': require('./assets/screens/fm_ashton_revenge_A.png'),\r\n  'MIS_fm_ashton_revenge_B': require('./assets/screens/fm_ashton_revenge_B.png'),\r\n  // FM: Rose Cottage\r\n  'MIS_fm_cottage_A': require('./assets/screens/fm_cottage_A.png'),\r\n  'MIS_fm_cottage_B': require('./assets/screens/fm_cottage_B.png'),\r\n  // FM: The Seventh Crystal - Act 2\r\n  'MIS_fm_seventh_act2_A': require('./assets/screens/fm_seventh_act2_A.png'),\r\n  'MIS_fm_seventh_act2_B': require('./assets/screens/fm_seventh_act2_B.png'),\r\n  // FM: The Seventh Crystal - Act 3\r\n  'MIS_fm_seventh_act3_A': require('./assets/screens/fm_seventh_act3_A.png'),\r\n  'MIS_fm_seventh_act3_B': require('./assets/screens/fm_seventh_act3_B.png'),\r\n  // FM: A Thief's Holiday 2004\r\n  'MIS_fm_holiday2004_A': require('./assets/screens/fm_holiday2004_A.png'),\r\n  'MIS_fm_holiday2004_B': require('./assets/screens/fm_holiday2004_B.png'),\r\n  // FM: Thieves' Highway\r\n  'MIS_fm_highway_A': require('./assets/screens/fm_highway_A.png'),\r\n  'MIS_fm_highway_B': require('./assets/screens/fm_highway_B.png'),\r\n  // FM: Through No Vault of My Own\r\n  'MIS_fm_vault_A': require('./assets/screens/fm_vault_A.png'),\r\n  'MIS_fm_vault_B': require('./assets/screens/fm_vault_B.png'),\r\n  // FM: Ultima Ratio\r\n  'MIS_fm_forces_ultima_A': require('./assets/screens/fm_forces_ultima_A.png'),\r\n  'MIS_fm_forces_ultima_B': require('./assets/screens/fm_forces_ultima_B.png'),\r\n  // FM: Unbidden Guest\r\n  'MIS_fm_unbidden_A': require('./assets/screens/fm_unbidden_A.png'),\r\n  'MIS_fm_unbidden_B': require('./assets/screens/fm_unbidden_B.png'),\r\n  // FM: United Bank of Auldale\r\n  'MIS_fm_united_A': require('./assets/screens/fm_united_A.png'),\r\n  'MIS_fm_united_B': require('./assets/screens/fm_united_B.png'),\r\n  // FM: A Visit to Lord Ashton's\r\n  'MIS_fm_ashton_visit_A': require('./assets/screens/fm_ashton_visit_A.png'),\r\n  'MIS_fm_ashton_visit_B': require('./assets/screens/fm_ashton_visit_B.png'),\r\n  // FM: Weak Links\r\n  'MIS_fm_links_A': require('./assets/screens/fm_links_A.png'),\r\n  'MIS_fm_links_B': require('./assets/screens/fm_links_B.png'),\r\n};\r\n\r\n// Add arrow images here.\r\nconst arrowLight = require('./assets/arrow_light.png');\r\n//const arrowLightSmall = require('./assets/arrow_light_small.png');\r\nconst arrowDark = require('./assets/arrow_dark.png');\r\n//const arrowDarkSmall = require('./assets/arrow_dark_small.png');\r\n\r\n// Add item images here.\r\nconst myImages = {\r\n  // -- LOOT (1 & 2) --\r\n  'IMG_Purse': require('./assets/items12/purse.png'),\r\n  'IMG_CopperCoinStack': require('./assets/items12/coppercoinstack.png'),\r\n  'IMG_SilverCoinStack': require('./assets/items12/silvercoinstack.png'),\r\n  'IMG_GoldCoinStack': require('./assets/items12/goldcoinstack.png'),\r\n  'IMG_Coin': require('./assets/items12/coin.png'),\r\n  'IMG_LuckyCoins': require('./assets/items12/luckycoins.png'),\r\n  'IMG_GoldRing': require('./assets/items12/goldring.png'),\r\n  'IMG_WeddingRings': require('./assets/items12/weddingrings.png'),\r\n  'IMG_GemRing': require('./assets/items12/gemring.png'),\r\n  'IMG_SignetRing': require('./assets/items12/signetring.png'),\r\n  'IMG_SilverBracelet': require('./assets/items12/silverbracelet.png'),\r\n  'IMG_SerpentyleTorc': require('./assets/items12/serpentyletorc.png'),\r\n  'IMG_Necklace': require('./assets/items12/necklace.png'),\r\n  'IMG_Medallion': require('./assets/items12/medallion.png'),\r\n  'IMG_PurpleMedallion': require('./assets/items12/purplemedallion.png'),\r\n  'IMG_Tiara': require('./assets/items12/tiara.png'),\r\n  'IMG_AddonizioCrystal': require('./assets/items12/addoniziocrystal.png'),\r\n  'IMG_Gemstone': require('./assets/items12/gemstone.png'),\r\n  'IMG_MysticsSoul': require('./assets/items12/mysticssoul.png'),\r\n  'IMG_MysticsHeart': require('./assets/items12/mysticsheart.png'),\r\n  'IMG_PrecursorGem': require('./assets/items12/precursorgem.png'),\r\n  'IMG_PrecursorJar_Small': require('./assets/items12/precursorjar_small.png'),\r\n  'IMG_PrecursorJar_Tall': require('./assets/items12/precursorjar_tall.png'),\r\n  'IMG_PrecursorJar_Pointed': require('./assets/items12/precursorjar_pointed.png'),\r\n  'IMG_PrecursorCanopicJar': require('./assets/items12/precursorcanopicjar.png'),\r\n  'IMG_PrecursorTapestry': require('./assets/items12/precursortapestry.png'),\r\n  'IMG_PrecursorMask_Bare': require('./assets/items12/precursormask_bare.png'),\r\n  'IMG_PrecursorMask_Fading': require('./assets/items12/precursormask_fading.png'),\r\n  'IMG_PrecursorMask_Green': require('./assets/items12/precursormask_green.png'),\r\n  'IMG_PrecursorMask_Brass': require('./assets/items12/precursormask_brass.png'),\r\n  'IMG_DecorativeMask_Demon': require('./assets/items12/decorativemask_demon.png'),\r\n  'IMG_DecorativeMask_Monster': require('./assets/items12/decorativemask_monster.png'),\r\n  'IMG_DecorativeMask_Bugaku': require('./assets/items12/decorativemask_bugaku.png'),\r\n  'IMG_DecorativeMask_Noh': require('./assets/items12/decorativemask_noh.png'),\r\n  'IMG_DecorativeMask_Inuit': require('./assets/items12/decorativemask_inuit.png'),\r\n  'IMG_DecorativeMask_White': require('./assets/items12/decorativemask_white.png'),\r\n  'IMG_TreebeastMask': require('./assets/items12/treebeastmask.png'),\r\n  'IMG_Statuette_Nobleman': require('./assets/items12/statuette_nobleman.png'),\r\n  'IMG_Statuette_Noblewoman': require('./assets/items12/statuette_noblewoman.png'),\r\n  'IMG_Statuette_Monk': require('./assets/items12/statuette_monk.png'),\r\n  'IMG_Statuette_Nun': require('./assets/items12/statuette_nun.png'),\r\n  'IMG_Statuette_Mage': require('./assets/items12/statuette_mage.png'),\r\n  'IMG_Statuette_Muse': require('./assets/items12/statuette_muse.png'),\r\n  'IMG_MechanistStatuette': require('./assets/items12/mechaniststatuette.png'),\r\n  'IMG_GoldHammer': require('./assets/items12/goldhammer.png'),\r\n  'IMG_CollectionPlate': require('./assets/items12/collectionplate.png'),\r\n  'IMG_GoldPlate': require('./assets/items12/goldplate.png'),\r\n  'IMG_DecorativePlate_Pink': require('./assets/items12/decorativeplate_pink.png'),\r\n  'IMG_DecorativePlate_Red': require('./assets/items12/decorativeplate_red.png'),\r\n  'IMG_DecorativePlate_Orange': require('./assets/items12/decorativeplate_orange.png'),\r\n  'IMG_DecorativePlate_Gold': require('./assets/items12/decorativeplate_gold.png'),\r\n  'IMG_DecorativePlate_Aqua': require('./assets/items12/decorativeplate_aqua.png'),\r\n  'IMG_DecorativePlate_Blue': require('./assets/items12/decorativeplate_blue.png'),\r\n  'IMG_SpiceBag': require('./assets/items12/spicebag.png'),\r\n  'IMG_RareSpiceBag': require('./assets/items12/rarespicebag.png'),\r\n  'IMG_FineWine': require('./assets/items12/finewine.png'),\r\n  'IMG_RareWine': require('./assets/items12/rarewine.png'),\r\n  'IMG_GoldGoblet': require('./assets/items12/goldgoblet.png'),\r\n  'IMG_PurpleGoblet': require('./assets/items12/purplegoblet.png'),\r\n  'IMG_GoldVase': require('./assets/items12/goldvase.png'),\r\n  'IMG_IndigoVase': require('./assets/items12/indigovase.png'),\r\n  'IMG_PurpleVase': require('./assets/items12/purplevase.png'),\r\n  'IMG_GreenVase': require('./assets/items12/greenvase.png'),\r\n  'IMG_SapphireVase': require('./assets/items12/sapphirevase.png'),\r\n  'IMG_GoldCandlestick': require('./assets/items12/goldcandlestick.png'),\r\n  'IMG_GoldGlasses': require('./assets/items12/goldglasses.png'),\r\n  'IMG_OperaGlasses': require('./assets/items12/operaglasses.png'),\r\n  'IMG_SilverFirePoker': require('./assets/items12/silverfirepoker.png'),\r\n  'IMG_JeweledDagger': require('./assets/items12/jeweleddagger.png'),\r\n  'IMG_JeweledSword': require('./assets/items12/jeweledsword.png'),\r\n  'IMG_DiamondDrillbit': require('./assets/items12/diamonddrillbit.png'),\r\n  'IMG_GoldGear': require('./assets/items12/goldgear.png'),\r\n  'IMG_SilverFlute': require('./assets/items12/silverflute.png'),\r\n  'IMG_WaxCylinder': require('./assets/items12/waxcylinder.png'),\r\n  'IMG_GoldDice': require('./assets/items12/golddice.png'),\r\n  'IMG_GoldBook': require('./assets/items12/goldbook.png'),\r\n  'IMG_SilverNugget': require('./assets/items12/silvernugget.png'),\r\n  'IMG_GoldNugget': require('./assets/items12/goldnugget.png'),\r\n\r\n  // -- ITEMS (1 & 2) --\r\n  'IMG_Sword': require('./assets/items12/sword.png'),\r\n  'IMG_ConstantinesSword': require('./assets/items12/constantinessword.png'),\r\n  'IMG_Blackjack': require('./assets/items12/blackjack.png'),\r\n  'IMG_BroadheadArrow': require('./assets/items12/broadheadarrow.png'),\r\n  'IMG_WaterArrow': require('./assets/items12/waterarrow.png'),\r\n  'IMG_HolyWaterArrow': require('./assets/items12/holywaterarrow.png'),\r\n  'IMG_FireArrow': require('./assets/items12/firearrow.png'),\r\n  'IMG_MossArrow': require('./assets/items12/mossarrow.png'),\r\n  'IMG_GasArrow_TDP': require('./assets/items12/gasarrow_tdp.png'),\r\n  'IMG_GasArrow_TMA': require('./assets/items12/gasarrow_tma.png'),\r\n  'IMG_RopeArrow': require('./assets/items12/ropearrow.png'),\r\n  'IMG_VineArrow': require('./assets/items12/vinearrow.png'),\r\n  'IMG_NoisemakerArrow': require('./assets/items12/noisemakerarrow.png'),\r\n  'IMG_WaterCrystal': require('./assets/items12/watercrystal.png'),\r\n  'IMG_FireCrystal': require('./assets/items12/firecrystal.png'),\r\n  'IMG_EarthCrystal': require('./assets/items12/earthcrystal.png'),\r\n  'IMG_AirCrystal': require('./assets/items12/aircrystal.png'),\r\n  'IMG_FlashBomb': require('./assets/items12/flashbomb.png'),\r\n  'IMG_Mine': require('./assets/items12/mine.png'),\r\n  'IMG_GasMine': require('./assets/items12/gasmine.png'),\r\n  'IMG_FlashMine': require('./assets/items12/flashmine.png'),\r\n  'IMG_ExplosiveCharge': require('./assets/items12/explosivecharge.png'),\r\n  'IMG_HealingPotion': require('./assets/items12/healingpotion.png'),\r\n  'IMG_SpeedPotion': require('./assets/items12/speedpotion.png'),\r\n  'IMG_BreathPotion': require('./assets/items12/breathpotion.png'),\r\n  'IMG_InvisibilityPotion': require('./assets/items12/invisibilitypotion.png'),\r\n  'IMG_SlowfallPotion': require('./assets/items12/slowfallpotion.png'),\r\n  'IMG_HolyWaterVial': require('./assets/items12/holywatervial.png'),\r\n  'IMG_Footlocker': require('./assets/items12/footlocker.png'),\r\n  'IMG_Chest_Blue': require('./assets/items12/chest_blue.png'),\r\n  'IMG_Chest_Precursor': require('./assets/items12/chest_precursor.png'),\r\n  'IMG_CoinBox': require('./assets/items12/coinbox.png'),\r\n  'IMG_Strongbox': require('./assets/items12/strongbox.png'),\r\n  'IMG_Safe': require('./assets/items12/safe.png'),\r\n  'IMG_Lockpick_Square': require('./assets/items12/lockpick_square.png'),\r\n  'IMG_Lockpick_Triangle': require('./assets/items12/lockpick_triangle.png'),\r\n  'IMG_Key_Gold': require('./assets/items12/key_gold.png'),\r\n  'IMG_Key_Silver': require('./assets/items12/key_silver.png'),\r\n  'IMG_Key_Black': require('./assets/items12/key_black.png'),\r\n  'IMG_Key_Yellow': require('./assets/items12/key_yellow.png'),\r\n  'IMG_Key_Blue': require('./assets/items12/key_blue.png'),\r\n  'IMG_Key_Red': require('./assets/items12/key_red.png'),\r\n  'IMG_Key_Orange': require('./assets/items12/key_orange.png'),\r\n  'IMG_Keyring': require('./assets/items12/keyring.png'),\r\n  'IMG_MageKey_Water': require('./assets/items12/magekey_water.png'),\r\n  'IMG_MageKey_Earth': require('./assets/items12/magekey_earth.png'),\r\n  'IMG_MageKey_Air': require('./assets/items12/magekey_air.png'),\r\n  'IMG_MageKey_Fire': require('./assets/items12/magekey_fire.png'),\r\n  'IMG_MageKey_Treasure': require('./assets/items12/magekey_treasure.png'),\r\n  'IMG_PortalKey': require('./assets/items12/portalkey.png'),\r\n  'IMG_GearKey_Metal': require('./assets/items12/gearkey_metal.png'),\r\n  'IMG_GearKey_Silver': require('./assets/items12/gearkey_silver.png'),\r\n  'IMG_GearKey_Bronze': require('./assets/items12/gearkey_bronze.png'),\r\n  'IMG_Candle': require('./assets/items12/candle.png'),\r\n  'IMG_Flare': require('./assets/items12/flare.png'),\r\n  'IMG_Compass': require('./assets/items12/compass.png'),\r\n  'IMG_ScoutingOrb': require('./assets/items12/scoutingorb.png'),\r\n  'IMG_Birdcall': require('./assets/items12/birdcall.png'),\r\n  'IMG_FrogbeastEgg': require('./assets/items12/frogbeastegg.png'),\r\n  'IMG_Loaf': require('./assets/items12/loaf.png'),\r\n  'IMG_Carrot': require('./assets/items12/carrot.png'),\r\n  'IMG_Cucumber': require('./assets/items12/cucumber.png'),\r\n  'IMG_Apple': require('./assets/items12/apple.png'),\r\n  'IMG_Fruit': require('./assets/items12/fruit.png'),\r\n  'IMG_Cheese': require('./assets/items12/cheese.png'),\r\n  'IMG_DeerLeg': require('./assets/items12/deerleg.png'),\r\n  'IMG_Letter': require('./assets/items12/letter.png'),\r\n  'IMG_CrumpledPaper': require('./assets/items12/crumpledpaper.png'),\r\n  'IMG_Playbill': require('./assets/items12/playbill.png'),\r\n  'IMG_CrumpledPlaybill': require('./assets/items12/crumpledplaybill.png'),\r\n  'IMG_UnrolledScroll': require('./assets/items12/unrolledscroll.png'),\r\n  'IMG_RolledScroll': require('./assets/items12/rolledscroll.png'),\r\n  'IMG_Papyrus': require('./assets/items12/papyrus.png'),\r\n  'IMG_PrecursorScroll_Flat': require('./assets/items12/precursorscroll_flat.png'),\r\n  'IMG_PrecursorScroll_Round': require('./assets/items12/precursorscroll_round.png'),\r\n  'IMG_Blueprints': require('./assets/items12/blueprints.png'),\r\n  'IMG_Book_Green': require('./assets/items12/book_green.png'),\r\n  'IMG_Book_Red': require('./assets/items12/book_red.png'),\r\n  'IMG_Book_Purple': require('./assets/items12/book_purple.png'),\r\n  'IMG_Book_Hammerite': require('./assets/items12/book_hammerite.png'),\r\n  'IMG_Book_Mechanist': require('./assets/items12/book_mechanist.png'),\r\n  'IMG_Book_Pagan': require('./assets/items12/book_pagan.png'),\r\n  'IMG_Book_Keeper': require('./assets/items12/book_keeper.png'),\r\n  'IMG_Book_Ash': require('./assets/items12/book_ash.png'),\r\n  'IMG_Handkerchief': require('./assets/items12/handkerchief.png'),\r\n  'IMG_Flute': require('./assets/items12/flute.png'),\r\n  'IMG_Dewdrop': require('./assets/items12/dewdrop.png'),\r\n  'IMG_Lever': require('./assets/items12/lever.png'),\r\n  'IMG_ValveKnob': require('./assets/items12/valveknob.png'),\r\n  'IMG_WheelPeg': require('./assets/items12/wheelpeg.png'),\r\n  'IMG_Mixture': require('./assets/items12/mixture.png'),\r\n  'IMG_SteelPlate': require('./assets/items12/steelplate.png'),\r\n  'IMG_IronChassis': require('./assets/items12/ironchassis.png'),\r\n  'IMG_Gauge': require('./assets/items12/gauge.png'),\r\n  'IMG_SpringWiring': require('./assets/items12/springwiring.png'),\r\n  'IMG_BantamNode': require('./assets/items12/bantamnode.png'),\r\n  'IMG_MineBulb': require('./assets/items12/minebulb.png'),\r\n  'IMG_FluxSpheroid': require('./assets/items12/fluxspheroid.png'),\r\n  'IMG_RegulatingRound': require('./assets/items12/regulatinground.png'),\r\n  'IMG_HolyHammer': require('./assets/items12/holyhammer.png'),\r\n  'IMG_HolySymbol': require('./assets/items12/holysymbol.png'),\r\n  'IMG_BlessedHolySymbol': require('./assets/items12/blessedholysymbol.png'),\r\n  'IMG_Multimold_Hammer': require('./assets/items12/multimold_hammer.png'),\r\n  'IMG_Multimold_Symbol': require('./assets/items12/multimold_symbol.png'),\r\n  'IMG_Multimold_Key': require('./assets/items12/multimold_key.png'),\r\n  'IMG_Multimold_Hilt': require('./assets/items12/multimold_hilt.png'),\r\n  'IMG_Multimold_Gear': require('./assets/items12/multimold_gear.png'),\r\n  'IMG_Multimold_Knob': require('./assets/items12/multimold_knob.png'),\r\n  'IMG_Multimold_Lever': require('./assets/items12/multimold_lever.png'),\r\n  'IMG_RosaryBeads': require('./assets/items12/rosarybeads.png'),\r\n  'IMG_BuildersChisel': require('./assets/items12/builderschisel.png'),\r\n  'IMG_PuttyKnife': require('./assets/items12/puttyknife.png'),\r\n  'IMG_WaxImpression': require('./assets/items12/waximpression.png'),\r\n  'IMG_Phonograph': require('./assets/items12/phonograph.png'),\r\n  'IMG_RustGasContainer': require('./assets/items12/rustgascontainer.png'),\r\n  'IMG_SignalBolt': require('./assets/items12/signalbolt.png'),\r\n  'IMG_Stage1Piece': require('./assets/items12/stage1piece.png'),\r\n  'IMG_Stage2Piece': require('./assets/items12/stage2piece.png'),\r\n  'IMG_Stage3Piece': require('./assets/items12/stage3piece.png'),\r\n  'IMG_GuidingBeacon': require('./assets/items12/guidingbeacon.png'),\r\n  'IMG_ShippingLabel': require('./assets/items12/shippinglabel.png'),\r\n  'IMG_Cuckoo': require('./assets/items12/cuckoo.png'),\r\n  'IMG_SilverScepter': require('./assets/items12/silverscepter.png'),\r\n  'IMG_HornOfQuintus': require('./assets/items12/hornofquintus.png'),\r\n  'IMG_NavigationGlobe': require('./assets/items12/navigationglobe.png'),\r\n  'IMG_Painting_Truart': require('./assets/items12/painting_truart.png'),\r\n  'IMG_Painting_Abduction': require('./assets/items12/painting_abduction.png'),\r\n  'IMG_Painting_Lachrymae': require('./assets/items12/painting_lachrymae.png'),\r\n  'IMG_Painting_Comparisons': require('./assets/items12/painting_comparisons.png'),\r\n  'IMG_Painting_Pheasant': require('./assets/items12/painting_pheasant.png'),\r\n  'IMG_Painting_Margaret': require('./assets/items12/painting_margaret.png'),\r\n  'IMG_Painting_Lizotte1': require('./assets/items12/painting_lizotte1.png'),\r\n  'IMG_Painting_Lizotte2': require('./assets/items12/painting_lizotte2.png'),\r\n  'IMG_PrecursorMask_Sun': require('./assets/items12/precursormask_sun.png'),\r\n  'IMG_PrecursorMask_Wood': require('./assets/items12/precursormask_wood.png'),\r\n  'IMG_Cultivator': require('./assets/items12/cultivator.png'),\r\n  'IMG_HandOfGlory': require('./assets/items12/handofglory.png'),\r\n  'IMG_GoldenBone_Skull': require('./assets/items12/goldenbone_skull.png'),\r\n  'IMG_GoldenBone_RightArm': require('./assets/items12/goldenbone_rightarm.png'),\r\n  'IMG_GoldenBone_LeftArm': require('./assets/items12/goldenbone_leftarm.png'),\r\n  'IMG_GoldenBone_RightLeg': require('./assets/items12/goldenbone_rightleg.png'),\r\n  'IMG_GoldenBone_LeftLeg': require('./assets/items12/goldenbone_leftleg.png'),\r\n  'IMG_KeeperMedallion': require('./assets/items12/keepermedallion.png'),\r\n  'IMG_RubyStone': require('./assets/items12/rubystone.png'),\r\n  'IMG_TheEye': require('./assets/items12/theeye.png'),\r\n  'IMG_TalismanOfEarth': require('./assets/items12/talismanofearth.png'),\r\n  'IMG_TalismanOfFire': require('./assets/items12/talismanoffire.png'),\r\n  'IMG_TalismanOfWater': require('./assets/items12/talismanofwater.png'),\r\n  'IMG_TalismanOfAir': require('./assets/items12/talismanofair.png'),\r\n\r\n  // -- JUNK (1 & 2) --\r\n  'IMG_NormalCrate': require('./assets/items12/normalcrate.png'),\r\n  'IMG_OldCrate': require('./assets/items12/oldcrate.png'),\r\n  'IMG_ToolCrate': require('./assets/items12/toolcrate.png'),\r\n  'IMG_WoodenSpoon': require('./assets/items12/woodenspoon.png'),\r\n  'IMG_Knife': require('./assets/items12/knife.png'),\r\n  'IMG_Cleaver': require('./assets/items12/cleaver.png'),\r\n  'IMG_WoodenBowl': require('./assets/items12/woodenbowl.png'),\r\n  'IMG_MetalBowl': require('./assets/items12/metalbowl.png'),\r\n  'IMG_MetalPlate': require('./assets/items12/metalplate.png'),\r\n  'IMG_PorcelainPlate': require('./assets/items12/porcelainplate.png'),\r\n  'IMG_OrnatePlate': require('./assets/items12/ornateplate.png'),\r\n  'IMG_MetalTray': require('./assets/items12/metaltray.png'),\r\n  'IMG_WoodenGoblet': require('./assets/items12/woodengoblet.png'),\r\n  'IMG_MetalGoblet': require('./assets/items12/metalgoblet.png'),\r\n  'IMG_GreenBottle': require('./assets/items12/greenbottle.png'),\r\n  'IMG_GrayBottle': require('./assets/items12/graybottle.png'),\r\n  'IMG_SetOfBottles': require('./assets/items12/setofbottles.png'),\r\n  'IMG_Skillet': require('./assets/items12/skillet.png'),\r\n  'IMG_Saucepan': require('./assets/items12/saucepan.png'),\r\n  'IMG_CookingPot': require('./assets/items12/cookingpot.png'),\r\n  'IMG_Canister_Flour': require('./assets/items12/canister_flour.png'),\r\n  'IMG_Canister_Sugar': require('./assets/items12/canister_sugar.png'),\r\n  'IMG_Canister_Salt': require('./assets/items12/canister_salt.png'),\r\n  'IMG_Canister_UnmarkedLarge': require('./assets/items12/canister_unmarkedlarge.png'),\r\n  'IMG_Canister_UnmarkedSmall': require('./assets/items12/canister_unmarkedsmall.png'),\r\n  'IMG_MetalBucket': require('./assets/items12/metalbucket.png'),\r\n  'IMG_BrownHerbs': require('./assets/items12/brownherbs.png'),\r\n  'IMG_GreenHerbs': require('./assets/items12/greenherbs.png'),\r\n  'IMG_Barrel': require('./assets/items12/barrel.png'),\r\n  'IMG_PowderKeg': require('./assets/items12/powderkeg.png'),\r\n  'IMG_Dress': require('./assets/items12/dress.png'),\r\n  'IMG_HairBrush': require('./assets/items12/hairbrush.png'),\r\n  'IMG_HandMirror': require('./assets/items12/handmirror.png'),\r\n  'IMG_ReadingGlasses': require('./assets/items12/readingglasses.png'),\r\n  'IMG_Bedroll': require('./assets/items12/bedroll.png'),\r\n  'IMG_DeckOfCards': require('./assets/items12/deckofcards.png'),\r\n  'IMG_PairOfDice': require('./assets/items12/pairofdice.png'),\r\n  'IMG_Basketball': require('./assets/items12/basketball.png'),\r\n  'IMG_PottedPlant': require('./assets/items12/pottedplant.png'),\r\n  'IMG_LeafyPlant': require('./assets/items12/leafyplant.png'),\r\n  'IMG_Vase': require('./assets/items12/vase.png'),\r\n  'IMG_DecorativeVase_Neck': require('./assets/items12/decorativevase_neck.png'),\r\n  'IMG_DecorativeVase_Wide': require('./assets/items12/decorativevase_wide.png'),\r\n  'IMG_Banner_Globe': require('./assets/items12/banner_globe.png'),\r\n  'IMG_Rowboat': require('./assets/items12/rowboat.png'),\r\n  'IMG_Anchor': require('./assets/items12/anchor.png'),\r\n  'IMG_NavigatorsCompass': require('./assets/items12/navigatorscompass.png'),\r\n  'IMG_ChartCompass': require('./assets/items12/chartcompass.png'),\r\n  'IMG_Sextant': require('./assets/items12/sextant.png'),\r\n  'IMG_Spade': require('./assets/items12/spade.png'),\r\n  'IMG_Pick': require('./assets/items12/pick.png'),\r\n  'IMG_DrillingMachine': require('./assets/items12/drillingmachine.png'),\r\n  'IMG_LeverHandle': require('./assets/items12/leverhandle.png'),\r\n  'IMG_UpDownSwitch': require('./assets/items12/updownswitch.png'),\r\n  'IMG_Doorknob': require('./assets/items12/doorknob.png'),\r\n  'IMG_BrokenArrow': require('./assets/items12/brokenarrow.png'),\r\n  'IMG_SwordHilt': require('./assets/items12/swordhilt.png'),\r\n  'IMG_Warhammer': require('./assets/items12/warhammer.png'),\r\n  'IMG_SmallHammer': require('./assets/items12/smallhammer.png'),\r\n  'IMG_StoneHammer': require('./assets/items12/stonehammer.png'),\r\n  'IMG_AncientHammer': require('./assets/items12/ancienthammer.png'),\r\n  'IMG_MechanistMace': require('./assets/items12/mechanistmace.png'),\r\n  'IMG_Rubble': require('./assets/items12/rubble.png'),\r\n  'IMG_Boulder': require('./assets/items12/boulder.png'),\r\n  'IMG_StatueFragment_Head': require('./assets/items12/statuefragment_head.png'),\r\n  'IMG_StatueFragment_RightTorso': require('./assets/items12/statuefragment_righttorso.png'),\r\n  'IMG_StatueFragment_LeftTorso': require('./assets/items12/statuefragment_lefttorso.png'),\r\n  'IMG_CthulhuStatue': require('./assets/items12/cthulhustatue.png'),\r\n  'IMG_FrozenFish': require('./assets/items12/frozenfish.png'),\r\n  'IMG_Rat': require('./assets/items12/rat.png'),\r\n  'IMG_DeadBurrick': require('./assets/items12/deadburrick.png'),\r\n  'IMG_SewerSpider': require('./assets/items12/sewerspider.png'),\r\n  'IMG_MonkeyHead': require('./assets/items12/monkeyhead.png'),\r\n  'IMG_HammeriteZombieHead': require('./assets/items12/hammeritezombiehead.png'),\r\n  'IMG_HammeriteZombieTorso': require('./assets/items12/hammeritezombietorso.png'),\r\n  'IMG_HammeriteZombieArm': require('./assets/items12/hammeritezombiearm.png'),\r\n  'IMG_HammeriteZombieWaist': require('./assets/items12/hammeritezombiewaist.png'),\r\n  'IMG_HammeriteZombieLeg': require('./assets/items12/hammeritezombieleg.png'),\r\n  'IMG_Skull': require('./assets/items12/skull.png'),\r\n  'IMG_Ribcage': require('./assets/items12/ribcage.png'),\r\n  'IMG_SkeletalArm': require('./assets/items12/skeletalarm.png'),\r\n  'IMG_Tibia': require('./assets/items12/tibia.png'),\r\n  'IMG_WoodenBoard': require('./assets/items12/woodenboard.png'),\r\n  'IMG_Nightstand': require('./assets/items12/nightstand.png'),\r\n  'IMG_Gear': require('./assets/items12/gear.png'),\r\n  'IMG_LaboratoryEquipment': require('./assets/items12/laboratoryequipment.png'),\r\n  'IMG_BunsenBurner': require('./assets/items12/bunsenburner.png'),\r\n  'IMG_CrookedPole': require('./assets/items12/crookedpole.png'),\r\n  'IMG_GlassTools': require('./assets/items12/glasstools.png'),\r\n  'IMG_Broom': require('./assets/items12/broom.png'),\r\n  'IMG_PaperTray': require('./assets/items12/papertray.png'),\r\n  'IMG_Lantern': require('./assets/items12/lantern.png'),\r\n  'IMG_Floodlight': require('./assets/items12/floodlight.png'),\r\n  'IMG_JunkWax': require('./assets/items12/junkwax.png'),\r\n  'IMG_DivingHelmet': require('./assets/items12/divinghelmet.png'),\r\n  'IMG_Scarecrow': require('./assets/items12/scarecrow.png'),\r\n\r\n  // -- LOOT (FMs) --\r\n  'IMG_Purse_NV': require('./assets/itemsFM/purse_nv.png'),\r\n  'IMG_CopperCoinStack_NV': require('./assets/itemsFM/coppercoinstack_nv.png'),\r\n  'IMG_GoldCoinStack_NV': require('./assets/itemsFM/goldcoinstack_nv.png'),\r\n  'IMG_GoldRing_EP': require('./assets/itemsFM/goldring_ep.png'),\r\n  'IMG_GemRing_NV': require('./assets/itemsFM/gemring_nv.png'),\r\n  'IMG_GoldBracelet': require('./assets/itemsFM/goldbracelet.png'),\r\n  'IMG_Locket': require('./assets/itemsFM/locket.png'),\r\n  'IMG_Tiara_NV': require('./assets/itemsFM/tiara_nv.png'),\r\n  'IMG_Gemstone_NV': require('./assets/itemsFM/gemstone_nv.png'),\r\n  'IMG_MindStone': require('./assets/itemsFM/mindstone.png'),\r\n  'IMG_VoidStone': require('./assets/itemsFM/voidstone.png'),\r\n  'IMG_FleshStone': require('./assets/itemsFM/fleshstone.png'),\r\n  'IMG_PrecursorJar_Small_Alt3': require('./assets/itemsFM/precursorjar_small_alt3.png'),\r\n  'IMG_PrecursorJar_Small_Alt4': require('./assets/itemsFM/precursorjar_small_alt4.png'),\r\n  'IMG_PrecursorJar_Small_Alt5': require('./assets/itemsFM/precursorjar_small_alt5.png'),\r\n  'IMG_PrecursorJar_Tall_Alt3': require('./assets/itemsFM/precursorjar_tall_alt3.png'),\r\n  'IMG_PrecursorJar_Tall_Alt4': require('./assets/itemsFM/precursorjar_tall_alt4.png'),\r\n  'IMG_PrecursorJar_Tall_Alt5': require('./assets/itemsFM/precursorjar_tall_alt5.png'),\r\n  'IMG_GoldHammer_NV': require('./assets/itemsFM/goldhammer_nv.png'),\r\n  'IMG_GoldPlate_NV': require('./assets/itemsFM/goldplate_nv.png'),\r\n  'IMG_CeramicPlate_BlueDragon': require('./assets/itemsFM/ceramicplate_bluedragon.png'),\r\n  'IMG_CeramicPlate_GreenDragon': require('./assets/itemsFM/ceramicplate_greendragon.png'),\r\n  'IMG_CeramicPlate_Horses': require('./assets/itemsFM/ceramicplate_horses.png'),\r\n  'IMG_CeramicPlate_Loon': require('./assets/itemsFM/ceramicplate_loon.png'),\r\n  'IMG_FineWine_NV': require('./assets/itemsFM/finewine_nv.png'),\r\n  'IMG_BlueBottle': require('./assets/itemsFM/bluebottle.png'),\r\n  'IMG_GlassChalice': require('./assets/itemsFM/glasschalice.png'),\r\n  'IMG_GoldGoblet_NV': require('./assets/itemsFM/goldgoblet_nv.png'),\r\n  'IMG_PurpleGoblet_NV': require('./assets/itemsFM/purplegoblet_nv.png'),\r\n  'IMG_GoldVase_NV': require('./assets/itemsFM/goldvase_nv.png'),\r\n  'IMG_IndigoVase_NV': require('./assets/itemsFM/indigovase_nv.png'),\r\n  'IMG_PurpleVase_NV': require('./assets/itemsFM/purplevase_nv.png'),\r\n  'IMG_GreenVase_NV': require('./assets/itemsFM/greenvase_nv.png'),\r\n  'IMG_RubyCrystalVase': require('./assets/itemsFM/rubycrystalvase.png'),\r\n  'IMG_GoldCandlestick_NV': require('./assets/itemsFM/goldcandlestick_nv.png'),\r\n  'IMG_GoldCandelabrum_NV': require('./assets/itemsFM/goldcandelabrum_nv.png'),\r\n  'IMG_CigaretteBox': require('./assets/itemsFM/cigarettebox.png'),\r\n  'IMG_Vial': require('./assets/itemsFM/vial.png'),\r\n  'IMG_MagnifyingLens': require('./assets/itemsFM/magnifyinglens.png'),\r\n  'IMG_SilverComb': require('./assets/itemsFM/silvercomb.png'),\r\n  'IMG_JeweledDagger_Alt1': require('./assets/itemsFM/jeweleddagger_alt1.png'),\r\n  'IMG_Painting_Highway1': require('./assets/itemsFM/painting_highway1.png'),\r\n  'IMG_Painting_Highway2': require('./assets/itemsFM/painting_highway2.png'),\r\n  'IMG_GoldInkwell': require('./assets/itemsFM/goldinkwell.png'),\r\n  'IMG_Globe': require('./assets/itemsFM/globe.png'),\r\n  'IMG_AntiqueClock': require('./assets/itemsFM/antiqueclock.png'),\r\n  'IMG_CuckooClock': require('./assets/itemsFM/cuckooclock.png'),\r\n  'IMG_PocketWatch': require('./assets/itemsFM/pocketwatch.png'),\r\n  'IMG_SilverNugget_NV': require('./assets/itemsFM/silvernugget_nv.png'),\r\n  'IMG_GoldNugget_NV': require('./assets/itemsFM/goldnugget_nv.png'),\r\n  'IMG_GoldAnkh': require('./assets/itemsFM/goldankh.png'),\r\n  'IMG_GoldTrophy': require('./assets/itemsFM/goldtrophy.png'),\r\n  'IMG_JewelryBox': require('./assets/itemsFM/jewelrybox.png'),\r\n  'IMG_OrbAndCross_Green': require('./assets/itemsFM/orbandcross_green.png'),\r\n\r\n  // -- ITEMS (FMs) --\r\n  'IMG_Sword_NV': require('./assets/itemsFM/sword_nv.png'),\r\n  'IMG_ConstantinesSword_NV': require('./assets/itemsFM/constantinessword_nv.png'),\r\n  'IMG_SaintEdgarsSword': require('./assets/itemsFM/saintedgarssword.png'),\r\n  'IMG_WarGauntlet': require('./assets/itemsFM/wargauntlet.png'),\r\n  'IMG_RazorHeadArrow': require('./assets/itemsFM/razorheadarrow.png'),\r\n  'IMG_HolyWaterArrow_Alt1': require('./assets/itemsFM/holywaterarrow_alt1.png'),\r\n  'IMG_ExplosiveHeadArrow': require('./assets/itemsFM/explosiveheadarrow.png'),\r\n  'IMG_MudArrow': require('./assets/itemsFM/mudarrow.png'),\r\n  'IMG_WindArrow': require('./assets/itemsFM/windarrow.png'),\r\n  'IMG_MudCrystal': require('./assets/itemsFM/mudcrystal.png'),\r\n  'IMG_WindCrystal': require('./assets/itemsFM/windcrystal.png'),\r\n  'IMG_AcidBomb': require('./assets/itemsFM/acidbomb.png'),\r\n  'IMG_ExplosiveCharge_Alt1': require('./assets/itemsFM/explosivecharge_alt1.png'),\r\n  'IMG_BallisticMissile': require('./assets/itemsFM/ballisticmissile.png'),\r\n  'IMG_HealingPotion_NV': require('./assets/itemsFM/healingpotion_nv.png'),\r\n  'IMG_SpeedPotion_NV': require('./assets/itemsFM/speedpotion_nv.png'),\r\n  'IMG_BreathPotion_NV': require('./assets/itemsFM/breathpotion_nv.png'),\r\n  'IMG_BreathPotion_Alt1': require('./assets/itemsFM/breathpotion_alt1.png'),\r\n  'IMG_PotionOfWeaponsbane': require('./assets/itemsFM/potionofweaponsbane.png'),\r\n  'IMG_PotionOfLifebreath': require('./assets/itemsFM/potionoflifebreath.png'),\r\n  'IMG_PotionOfTheFirewalker': require('./assets/itemsFM/potionofthefirewalker.png'),\r\n  'IMG_CarafeOfMulledWine': require('./assets/itemsFM/carafeofmulledwine.png'),\r\n  'IMG_VialOfUnholyFluid': require('./assets/itemsFM/vialofunholyfluid.png'),\r\n  'IMG_Hairpin': require('./assets/itemsFM/hairpin.png'),\r\n  'IMG_Key_RC_Gold': require('./assets/itemsFM/key_rc_gold.png'),\r\n  'IMG_Key_RC_Silver': require('./assets/itemsFM/key_rc_silver.png'),\r\n  'IMG_MoonblackCandle': require('./assets/itemsFM/moonblackcandle.png'),\r\n  'IMG_Lantern_Alt1': require('./assets/itemsFM/lantern_alt1.png'),\r\n  'IMG_Lantern_Alt2': require('./assets/itemsFM/lantern_alt2.png'),\r\n  'IMG_UVLamp': require('./assets/itemsFM/uvlamp.png'),\r\n  'IMG_StaffOfAssizi': require('./assets/itemsFM/staffofassizi.png'),\r\n  'IMG_FirstAidKit': require('./assets/itemsFM/firstaidkit.png'),\r\n  'IMG_Shield_Red': require('./assets/itemsFM/shield_red.png'),\r\n  'IMG_Shield_Yellow': require('./assets/itemsFM/shield_yellow.png'),\r\n  'IMG_Feather': require('./assets/itemsFM/feather.png'),\r\n  'IMG_Matchbox': require('./assets/itemsFM/matchbox.png'),\r\n  'IMG_Crowbar': require('./assets/itemsFM/crowbar.png'),\r\n  'IMG_OrnateKnife': require('./assets/itemsFM/ornateknife.png'),\r\n  'IMG_Pizza': require('./assets/itemsFM/pizza.png'),\r\n  'IMG_Cabbage': require('./assets/itemsFM/cabbage.png'),\r\n  'IMG_Cabbage_Alt1': require('./assets/itemsFM/cabbage_alt1.png'),\r\n  'IMG_GarlicCloves': require('./assets/itemsFM/garliccloves.png'),\r\n  'IMG_Apple_NV': require('./assets/itemsFM/apple_nv.png'),\r\n  'IMG_Cheese_Alt1': require('./assets/itemsFM/cheese_alt1.png'),\r\n  'IMG_Cheese_Alt2': require('./assets/itemsFM/cheese_alt2.png'),\r\n  'IMG_Sausage': require('./assets/itemsFM/sausage.png'),\r\n  'IMG_Sausage_Alt1': require('./assets/itemsFM/sausage_alt1.png'),\r\n  'IMG_GreenFish': require('./assets/itemsFM/greenfish.png'),\r\n  'IMG_Sushi_Green': require('./assets/itemsFM/sushi_green.png'),\r\n  'IMG_Steak': require('./assets/itemsFM/steak.png'),\r\n  'IMG_Chips': require('./assets/itemsFM/chips.png'),\r\n  'IMG_ChristmasCookie': require('./assets/itemsFM/christmascookie.png'),\r\n  'IMG_Book_Green_EP': require('./assets/itemsFM/book_green_ep.png'),\r\n  'IMG_SeventhBookOfVision': require('./assets/itemsFM/seventhbookofvision.png'),\r\n  'IMG_TShirt': require('./assets/itemsFM/tshirt.png'),\r\n  'IMG_Victrola_Alt1': require('./assets/itemsFM/victrola_alt1.png'),\r\n  'IMG_Record': require('./assets/itemsFM/record.png'),\r\n  'IMG_TarotCard_01': require('./assets/itemsFM/tarotcard_1.png'),\r\n  'IMG_TarotCard_02': require('./assets/itemsFM/tarotcard_2.png'),\r\n  'IMG_TarotCard_03': require('./assets/itemsFM/tarotcard_3.png'),\r\n  'IMG_TarotCard_04': require('./assets/itemsFM/tarotcard_4.png'),\r\n  'IMG_TarotCard_05': require('./assets/itemsFM/tarotcard_5.png'),\r\n  'IMG_TarotCard_06': require('./assets/itemsFM/tarotcard_6.png'),\r\n  'IMG_TarotCard_07': require('./assets/itemsFM/tarotcard_7.png'),\r\n  'IMG_TarotCard_08': require('./assets/itemsFM/tarotcard_8.png'),\r\n  'IMG_TarotCard_09': require('./assets/itemsFM/tarotcard_9.png'),\r\n  'IMG_TarotCard_10': require('./assets/itemsFM/tarotcard_10.png'),\r\n  'IMG_TarotCard_11': require('./assets/itemsFM/tarotcard_11.png'),\r\n  'IMG_TarotCard_12': require('./assets/itemsFM/tarotcard_12.png'),\r\n  'IMG_TarotCard_13': require('./assets/itemsFM/tarotcard_13.png'),\r\n  'IMG_TarotCard_14': require('./assets/itemsFM/tarotcard_14.png'),\r\n  'IMG_TarotCard_15': require('./assets/itemsFM/tarotcard_15.png'),\r\n  'IMG_TarotCard_16': require('./assets/itemsFM/tarotcard_16.png'),\r\n  'IMG_TarotCard_17': require('./assets/itemsFM/tarotcard_17.png'),\r\n  'IMG_TarotCard_18': require('./assets/itemsFM/tarotcard_18.png'),\r\n  'IMG_TarotCard_19': require('./assets/itemsFM/tarotcard_19.png'),\r\n  'IMG_TarotCard_20': require('./assets/itemsFM/tarotcard_20.png'),\r\n  'IMG_Dewdrop_Alt2': require('./assets/itemsFM/dewdrop_alt2.png'),\r\n  'IMG_TeddyBear': require('./assets/itemsFM/teddybear.png'),\r\n  'IMG_TeddyBear_Alt1': require('./assets/itemsFM/teddybear_alt1.png'),\r\n  'IMG_ToyBall': require('./assets/itemsFM/toyball.png'),\r\n  'IMG_Planchette': require('./assets/itemsFM/planchette.png'),\r\n  'IMG_GuardianHead_Mind': require('./assets/itemsFM/guardianhead_mind.png'),\r\n  'IMG_GuardianHead_Void': require('./assets/itemsFM/guardianhead_void.png'),\r\n  'IMG_GuardianHead_Flesh': require('./assets/itemsFM/guardianhead_flesh.png'),\r\n  'IMG_ThiefGold': require('./assets/itemsFM/thiefgold.png'),\r\n  'IMG_Purse_Alt1': require('./assets/itemsFM/purse_alt1.png'),\r\n  'IMG_Battery': require('./assets/itemsFM/battery.png'),\r\n  'IMG_CallingCard': require('./assets/itemsFM/callingcard.png'),\r\n  'IMG_Snowball': require('./assets/itemsFM/snowball.png'),\r\n  'IMG_NavigationGlobe_Alt1': require('./assets/itemsFM/navigationglobe_alt1.png'),\r\n  'IMG_Painting_Holiday1': require('./assets/itemsFM/painting_holiday1.png'),\r\n  'IMG_Painting_Holiday2': require('./assets/itemsFM/painting_holiday2.png'),\r\n  'IMG_Painting_Holiday3': require('./assets/itemsFM/painting_holiday3.png'),\r\n  'IMG_Painting_Holiday4': require('./assets/itemsFM/painting_holiday4.png'),\r\n  'IMG_Painting_Holiday5': require('./assets/itemsFM/painting_holiday5.png'),\r\n  'IMG_Painting_Holiday6': require('./assets/itemsFM/painting_holiday6.png'),\r\n  'IMG_KingsCrown_Alt1': require('./assets/itemsFM/kingscrown_alt1.png'),\r\n  'IMG_Bloodtear': require('./assets/itemsFM/bloodtear.png'),\r\n  'IMG_Iceheart': require('./assets/itemsFM/iceheart.png'),\r\n  'IMG_Sunspark': require('./assets/itemsFM/sunspark.png'),\r\n  'IMG_LargeGemstone_Diamond': require('./assets/itemsFM/largegemstone_diamond.png'),\r\n  'IMG_LargeGemstone_Ruby': require('./assets/itemsFM/largegemstone_ruby.png'),\r\n  'IMG_LargeGemstone_Sapphire': require('./assets/itemsFM/largegemstone_sapphire.png'),\r\n  'IMG_LargeGemstone_Emerald': require('./assets/itemsFM/largegemstone_emerald.png'),\r\n  'IMG_LargeGemstone_Amethyst': require('./assets/itemsFM/largegemstone_amethyst.png'),\r\n\r\n  // -- JUNK (FMs) --\r\n  'IMG_NormalCrate_NV': require('./assets/itemsFM/normalcrate_nv.png'),\r\n  'IMG_OldCrate_NV': require('./assets/itemsFM/oldcrate_nv.png'),\r\n  'IMG_MetalBowl_EP': require('./assets/itemsFM/metalbowl_ep.png'),\r\n  'IMG_MetalTray_EP': require('./assets/itemsFM/metaltray_ep.png'),\r\n  'IMG_WoodenGoblet_EP': require('./assets/itemsFM/woodengoblet_ep.png'),\r\n  'IMG_MetalGoblet_EP': require('./assets/itemsFM/metalgoblet_ep.png'),\r\n  'IMG_Mug': require('./assets/itemsFM/mug.png'),\r\n  'IMG_GreenBottle_NV': require('./assets/itemsFM/greenbottle_nv.png'),\r\n  'IMG_GrayBottle_EP': require('./assets/itemsFM/graybottle_ep.png'),\r\n  'IMG_ChampagneBottle': require('./assets/itemsFM/champagnebottle.png'),\r\n  'IMG_LiquorBottle': require('./assets/itemsFM/liquorbottle.png'),\r\n  'IMG_VodkaBottle': require('./assets/itemsFM/vodkabottle.png'),\r\n  'IMG_OrangeJuiceBottle': require('./assets/itemsFM/orangejuicebottle.png'),\r\n  'IMG_Basket': require('./assets/itemsFM/basket.png'),\r\n  'IMG_WoodenBucket': require('./assets/itemsFM/woodenbucket.png'),\r\n  'IMG_BucketOfWater': require('./assets/itemsFM/bucketofwater.png'),\r\n  'IMG_BabyBlock': require('./assets/itemsFM/babyblock.png'),\r\n  'IMG_BabyBall': require('./assets/itemsFM/babyball.png'),\r\n  'IMG_Cactus': require('./assets/itemsFM/cactus.png'),\r\n  'IMG_Vase_NV': require('./assets/itemsFM/vase_nv.png'),\r\n  'IMG_RedJar': require('./assets/itemsFM/redjar.png'),\r\n  'IMG_Warhammer_NV': require('./assets/itemsFM/warhammer_nv.png'),\r\n  'IMG_Brick': require('./assets/itemsFM/brick.png'),\r\n  'IMG_Scissors': require('./assets/itemsFM/scissors.png'),\r\n  'IMG_Handsaw': require('./assets/itemsFM/handsaw.png'),\r\n  'IMG_Hourglass': require('./assets/itemsFM/hourglass.png'),\r\n};\r\n\r\n// Add secret images here.\r\nconst mySecrets = {\r\n  // T2: Running Interference\r\n  'SEC_t2_interference_01': require('./assets/secrets/t2_interference_01.png'),\r\n  'SEC_t2_interference_02': require('./assets/secrets/t2_interference_02.png'),\r\n  'SEC_t2_interference_03': require('./assets/secrets/t2_interference_03.png'),\r\n  // T2: Shipping ... and Receiving\r\n  'SEC_t2_shipping_01': require('./assets/secrets/t2_shipping_01.png'),\r\n  'SEC_t2_shipping_02': require('./assets/secrets/t2_shipping_02.png'),\r\n  'SEC_t2_shipping_03': require('./assets/secrets/t2_shipping_03.png'),\r\n  'SEC_t2_shipping_04': require('./assets/secrets/t2_shipping_04.png'),\r\n  'SEC_t2_shipping_05': require('./assets/secrets/t2_shipping_05.png'),\r\n  'SEC_t2_shipping_06a': require('./assets/secrets/t2_shipping_06a.png'),\r\n  'SEC_t2_shipping_06b': require('./assets/secrets/t2_shipping_06b.png'),\r\n  'SEC_t2_shipping_07': require('./assets/secrets/t2_shipping_07.png'),\r\n  'SEC_t2_shipping_08': require('./assets/secrets/t2_shipping_08.png'),\r\n  'SEC_t2_shipping_09': require('./assets/secrets/t2_shipping_09.png'),\r\n  'SEC_t2_shipping_10': require('./assets/secrets/t2_shipping_10.png'),\r\n  'SEC_t2_shipping_11': require('./assets/secrets/t2_shipping_11.png'),\r\n  'SEC_t2_shipping_12': require('./assets/secrets/t2_shipping_12.png'),\r\n  'SEC_t2_shipping_13': require('./assets/secrets/t2_shipping_13.png'),\r\n  'SEC_t2_shipping_14': require('./assets/secrets/t2_shipping_14.png'),\r\n  // T2: Framed\r\n  'SEC_t2_framed_01a': require('./assets/secrets/t2_framed_01a.png'),\r\n  'SEC_t2_framed_01b': require('./assets/secrets/t2_framed_01b.png'),\r\n  'SEC_t2_framed_02a': require('./assets/secrets/t2_framed_02a.png'),\r\n  'SEC_t2_framed_02b': require('./assets/secrets/t2_framed_02b.png'),\r\n  'SEC_t2_framed_03': require('./assets/secrets/t2_framed_03.png'),\r\n  'SEC_t2_framed_04': require('./assets/secrets/t2_framed_04.png'),\r\n  'SEC_t2_framed_05a': require('./assets/secrets/t2_framed_05a.png'),\r\n  'SEC_t2_framed_05b': require('./assets/secrets/t2_framed_05b.png'),\r\n  'SEC_t2_framed_06a': require('./assets/secrets/t2_framed_06a.png'),\r\n  'SEC_t2_framed_06b': require('./assets/secrets/t2_framed_06b.png'),\r\n  'SEC_t2_framed_07a': require('./assets/secrets/t2_framed_07a.png'),\r\n  'SEC_t2_framed_07b': require('./assets/secrets/t2_framed_07b.png'),\r\n  'SEC_t2_framed_08a': require('./assets/secrets/t2_framed_08a.png'),\r\n  'SEC_t2_framed_08b': require('./assets/secrets/t2_framed_08b.png'),\r\n  'SEC_t2_framed_09a': require('./assets/secrets/t2_framed_09a.png'),\r\n  'SEC_t2_framed_09b': require('./assets/secrets/t2_framed_09b.png'),\r\n  // T2: Eavesdropping\r\n  'SEC_t2_eavesdropping_01': require('./assets/secrets/t2_eavesdropping_01.png'),\r\n  // T2: First City Bank and Trust\r\n  'SEC_t2_bank_01': require('./assets/secrets/t2_bank_01.png'),\r\n  'SEC_t2_bank_02': require('./assets/secrets/t2_bank_02.png'),\r\n  // T2: Blackmail\r\n  'SEC_t2_blackmail_01': require('./assets/secrets/t2_blackmail_01.png'),\r\n  'SEC_t2_blackmail_02': require('./assets/secrets/t2_blackmail_02.png'),\r\n  'SEC_t2_blackmail_03a': require('./assets/secrets/t2_blackmail_03a.png'),\r\n  'SEC_t2_blackmail_03b': require('./assets/secrets/t2_blackmail_03b.png'),\r\n  'SEC_t2_blackmail_04': require('./assets/secrets/t2_blackmail_04.png'),\r\n  'SEC_t2_blackmail_05a': require('./assets/secrets/t2_blackmail_05a.png'),\r\n  'SEC_t2_blackmail_05b': require('./assets/secrets/t2_blackmail_05b.png'),\r\n  'SEC_t2_blackmail_06': require('./assets/secrets/t2_blackmail_06.png'),\r\n  // T2: Trace the Courier\r\n  'SEC_t2_courier_01a': require('./assets/secrets/t2_courier_01a.png'),\r\n  'SEC_t2_courier_01b': require('./assets/secrets/t2_courier_01b.png'),\r\n  // T2: Life of the Party\r\n  'SEC_t2_party_01': require('./assets/secrets/t2_party_01.png'),\r\n  'SEC_t2_party_02': require('./assets/secrets/t2_party_02.png'),\r\n  'SEC_t2_party_03': require('./assets/secrets/t2_party_03.png'),\r\n  'SEC_t2_party_04': require('./assets/secrets/t2_party_04.png'),\r\n  'SEC_t2_party_05': require('./assets/secrets/t2_party_05.png'),\r\n  'SEC_t2_party_06': require('./assets/secrets/t2_party_06.png'),\r\n  'SEC_t2_party_07': require('./assets/secrets/t2_party_07.png'),\r\n  // T2: Precious Cargo\r\n  'SEC_t2_cargo_01': require('./assets/secrets/t2_cargo_01.png'),\r\n  // T2: Kidnap\r\n  'SEC_t2_kidnap_01': require('./assets/secrets/t2_kidnap_01.png'),\r\n  // T2: Casing the Joint\r\n  'SEC_t2_casing_01a': require('./assets/secrets/t2_casing_01a.png'),\r\n  'SEC_t2_casing_01b': require('./assets/secrets/t2_casing_01b.png'),\r\n  'SEC_t2_casing_02a': require('./assets/secrets/t2_casing_02a.png'),\r\n  'SEC_t2_casing_02b': require('./assets/secrets/t2_casing_02b.png'),\r\n  'SEC_t2_casing_03': require('./assets/secrets/t2_casing_03.png'),\r\n  'SEC_t2_casing_04a': require('./assets/secrets/t2_casing_04a.png'),\r\n  'SEC_t2_casing_04b': require('./assets/secrets/t2_casing_04b.png'),\r\n  'SEC_t2_casing_04c': require('./assets/secrets/t2_casing_04c.png'),\r\n  'SEC_t2_casing_04d': require('./assets/secrets/t2_casing_04d.png'),\r\n  'SEC_t2_casing_04e': require('./assets/secrets/t2_casing_04e.png'),\r\n  'SEC_t2_casing_05a': require('./assets/secrets/t2_casing_05a.png'),\r\n  'SEC_t2_casing_05b': require('./assets/secrets/t2_casing_05b.png'),\r\n  'SEC_t2_casing_05c': require('./assets/secrets/t2_casing_05c.png'),\r\n  'SEC_t2_casing_05d': require('./assets/secrets/t2_casing_05d.png'),\r\n  'SEC_t2_casing_05e': require('./assets/secrets/t2_casing_05e.png'),\r\n  'SEC_t2_casing_06a': require('./assets/secrets/t2_casing_06a.png'),\r\n  'SEC_t2_casing_06b': require('./assets/secrets/t2_casing_06b.png'),\r\n  'SEC_t2_casing_07a': require('./assets/secrets/t2_casing_07a.png'),\r\n  'SEC_t2_casing_07b': require('./assets/secrets/t2_casing_07b.png'),\r\n  'SEC_t2_casing_07c': require('./assets/secrets/t2_casing_07c.png'),\r\n  'SEC_t2_casing_07d': require('./assets/secrets/t2_casing_07d.png'),\r\n  'SEC_t2_casing_08': require('./assets/secrets/t2_casing_08.png'),\r\n  'SEC_t2_casing_09a': require('./assets/secrets/t2_casing_09a.png'),\r\n  'SEC_t2_casing_09b': require('./assets/secrets/t2_casing_09b.png'),\r\n  // T2: Masks\r\n  'SEC_t2_masks_01a': require('./assets/secrets/t2_masks_01a.png'),\r\n  'SEC_t2_masks_01b': require('./assets/secrets/t2_masks_01b.png'),\r\n  'SEC_t2_masks_02a': require('./assets/secrets/t2_masks_02a.png'),\r\n  'SEC_t2_masks_02b': require('./assets/secrets/t2_masks_02b.png'),\r\n  'SEC_t2_masks_03': require('./assets/secrets/t2_masks_03.png'),\r\n  'SEC_t2_masks_04a': require('./assets/secrets/t2_masks_04a.png'),\r\n  'SEC_t2_masks_04b': require('./assets/secrets/t2_masks_04b.png'),\r\n  'SEC_t2_masks_04c': require('./assets/secrets/t2_masks_04c.png'),\r\n  'SEC_t2_masks_04d': require('./assets/secrets/t2_masks_04d.png'),\r\n  'SEC_t2_masks_04e': require('./assets/secrets/t2_masks_04e.png'),\r\n  'SEC_t2_masks_05a': require('./assets/secrets/t2_masks_05a.png'),\r\n  'SEC_t2_masks_05b': require('./assets/secrets/t2_masks_05b.png'),\r\n  'SEC_t2_masks_05c': require('./assets/secrets/t2_masks_05c.png'),\r\n  'SEC_t2_masks_05d': require('./assets/secrets/t2_masks_05d.png'),\r\n  'SEC_t2_masks_05e': require('./assets/secrets/t2_masks_05e.png'),\r\n  'SEC_t2_masks_06a': require('./assets/secrets/t2_masks_06a.png'),\r\n  'SEC_t2_masks_06b': require('./assets/secrets/t2_masks_06b.png'),\r\n  'SEC_t2_masks_07a': require('./assets/secrets/t2_masks_07a.png'),\r\n  'SEC_t2_masks_07b': require('./assets/secrets/t2_masks_07b.png'),\r\n  'SEC_t2_masks_07c': require('./assets/secrets/t2_masks_07c.png'),\r\n  'SEC_t2_masks_07d': require('./assets/secrets/t2_masks_07d.png'),\r\n  'SEC_t2_masks_08': require('./assets/secrets/t2_masks_08.png'),\r\n  'SEC_t2_masks_09a': require('./assets/secrets/t2_masks_09a.png'),\r\n  'SEC_t2_masks_09b': require('./assets/secrets/t2_masks_09b.png'),\r\n  'SEC_t2_masks_10a': require('./assets/secrets/t2_masks_10a.png'),\r\n  'SEC_t2_masks_10b': require('./assets/secrets/t2_masks_10b.png'),\r\n  'SEC_t2_masks_11a': require('./assets/secrets/t2_masks_11a.png'),\r\n  'SEC_t2_masks_11b': require('./assets/secrets/t2_masks_11b.png'),\r\n  'SEC_t2_masks_12a': require('./assets/secrets/t2_masks_12a.png'),\r\n  'SEC_t2_masks_12b': require('./assets/secrets/t2_masks_12b.png'),\r\n  // T2: Sabotage at Soulforge\r\n  'SEC_t2_soulforge_01': require('./assets/secrets/t2_soulforge_01.png'),\r\n  'SEC_t2_soulforge_02': require('./assets/secrets/t2_soulforge_02.png'),\r\n  'SEC_t2_soulforge_03': require('./assets/secrets/t2_soulforge_03.png'),\r\n  'SEC_t2_soulforge_04': require('./assets/secrets/t2_soulforge_04.png'),\r\n  // T2: The Unwelcome Guest (Demo)\r\n  'SEC_t2_guest_01': require('./assets/secrets/t2_guest_01.png'),\r\n  'SEC_t2_guest_02': require('./assets/secrets/t2_guest_02.png'),\r\n  'SEC_t2_guest_03': require('./assets/secrets/t2_guest_03.png'),\r\n  'SEC_t2_guest_04': require('./assets/secrets/t2_guest_04.png'),\r\n\r\n  // FM: The Burrick's Head Inn\r\n  'SEC_fm_burrickhead_01': require('./assets/secrets/fm_burrickhead_01.png'),\r\n  'SEC_fm_burrickhead_02': require('./assets/secrets/fm_burrickhead_02.png'),\r\n  'SEC_fm_burrickhead_03': require('./assets/secrets/fm_burrickhead_03.png'),\r\n  'SEC_fm_burrickhead_04': require('./assets/secrets/fm_burrickhead_04.png'),\r\n  // FM: Escape!\r\n  'SEC_fm_ashton_escape_01': require('./assets/secrets/fm_ashton_escape_01.png'),\r\n  'SEC_fm_ashton_escape_02': require('./assets/secrets/fm_ashton_escape_02.png'),\r\n  'SEC_fm_ashton_escape_03': require('./assets/secrets/fm_ashton_escape_03.png'),\r\n  // FM: Hidden Agenda\r\n  'SEC_fm_agenda_01': require('./assets/secrets/fm_agenda_01.png'),\r\n  'SEC_fm_agenda_02': require('./assets/secrets/fm_agenda_02.png'),\r\n  'SEC_fm_agenda_03': require('./assets/secrets/fm_agenda_03.png'),\r\n  'SEC_fm_agenda_04': require('./assets/secrets/fm_agenda_04.png'),\r\n  // FM: Into the Maelstrom\r\n  'SEC_fm_maelstrom_01': require('./assets/secrets/fm_maelstrom_01.png'),\r\n  'SEC_fm_maelstrom_02': require('./assets/secrets/fm_maelstrom_02.png'),\r\n  'SEC_fm_maelstrom_03': require('./assets/secrets/fm_maelstrom_03.png'),\r\n  // FM: The Inverted Manse\r\n  'SEC_fm_spirit_manse_01': require('./assets/secrets/fm_spirit_manse_01.png'),\r\n  // FM: The Night Before Christmas\r\n  'SEC_fm_christmas_01': require('./assets/secrets/fm_christmas_01.png'),\r\n  // FM: A Night's Stroll\r\n  'SEC_fm_ashton_stroll_01': require('./assets/secrets/fm_ashton_stroll_01.png'),\r\n  'SEC_fm_ashton_stroll_02': require('./assets/secrets/fm_ashton_stroll_02.png'),\r\n  'SEC_fm_ashton_stroll_03': require('./assets/secrets/fm_ashton_stroll_03.png'),\r\n  'SEC_fm_ashton_stroll_04': require('./assets/secrets/fm_ashton_stroll_04.png'),\r\n  'SEC_fm_ashton_stroll_05': require('./assets/secrets/fm_ashton_stroll_05.png'),\r\n  'SEC_fm_ashton_stroll_06': require('./assets/secrets/fm_ashton_stroll_06.png'),\r\n  // FM: Revenge\r\n  'SEC_fm_ashton_revenge_01': require('./assets/secrets/fm_ashton_revenge_01.png'),\r\n  'SEC_fm_ashton_revenge_02': require('./assets/secrets/fm_ashton_revenge_02.png'),\r\n  'SEC_fm_ashton_revenge_03': require('./assets/secrets/fm_ashton_revenge_03.png'),\r\n  'SEC_fm_ashton_revenge_04': require('./assets/secrets/fm_ashton_revenge_04.png'),\r\n  'SEC_fm_ashton_revenge_05': require('./assets/secrets/fm_ashton_revenge_05.png'),\r\n  // FM: Thieves' Highway\r\n  'SEC_fm_highway_01': require('./assets/secrets/fm_highway_01.png'),\r\n  'SEC_fm_highway_02': require('./assets/secrets/fm_highway_02.png'),\r\n  'SEC_fm_highway_03': require('./assets/secrets/fm_highway_03.png'),\r\n  'SEC_fm_highway_04': require('./assets/secrets/fm_highway_04.png'),\r\n  'SEC_fm_highway_05': require('./assets/secrets/fm_highway_05.png'),\r\n  // FM: Through No Vault of My Own\r\n  'SEC_fm_vault_01': require('./assets/secrets/fm_vault_01.png'),\r\n  // FM: Ultima Ratio\r\n  'SEC_fm_forces_ultima_01': require('./assets/secrets/fm_forces_ultima_01.png'),\r\n  'SEC_fm_forces_ultima_02': require('./assets/secrets/fm_forces_ultima_02.png'),\r\n  'SEC_fm_forces_ultima_03': require('./assets/secrets/fm_forces_ultima_03.png'),\r\n  'SEC_fm_forces_ultima_04': require('./assets/secrets/fm_forces_ultima_04.png'),\r\n  'SEC_fm_forces_ultima_05': require('./assets/secrets/fm_forces_ultima_05.png'),\r\n  'SEC_fm_forces_ultima_06': require('./assets/secrets/fm_forces_ultima_06.png'),\r\n  'SEC_fm_forces_ultima_07': require('./assets/secrets/fm_forces_ultima_07.png'),\r\n  'SEC_fm_forces_ultima_08': require('./assets/secrets/fm_forces_ultima_08.png'),\r\n  'SEC_fm_forces_ultima_09': require('./assets/secrets/fm_forces_ultima_09.png'),\r\n  // FM: United Bank of Auldale\r\n  'SEC_fm_united_01': require('./assets/secrets/fm_united_01.png'),\r\n  // FM: A Visit to Lord Ashton's\r\n  'SEC_fm_ashton_visit_01': require('./assets/secrets/fm_ashton_visit_01.png'),\r\n  'SEC_fm_ashton_visit_02': require('./assets/secrets/fm_ashton_visit_02.png'),\r\n  'SEC_fm_ashton_visit_03': require('./assets/secrets/fm_ashton_visit_03.png'),\r\n  'SEC_fm_ashton_visit_04': require('./assets/secrets/fm_ashton_visit_04.png'),\r\n  'SEC_fm_ashton_visit_05': require('./assets/secrets/fm_ashton_visit_05.png'),\r\n  'SEC_fm_ashton_visit_06': require('./assets/secrets/fm_ashton_visit_06.png'),\r\n  'SEC_fm_ashton_visit_07': require('./assets/secrets/fm_ashton_visit_07.png'),\r\n  'SEC_fm_ashton_visit_08': require('./assets/secrets/fm_ashton_visit_08.png'),\r\n  // FM: Weak Links\r\n  'SEC_fm_links_01': require('./assets/secrets/fm_links_01.png'),\r\n  'SEC_fm_links_02': require('./assets/secrets/fm_links_02.png'),\r\n  'SEC_fm_links_03a': require('./assets/secrets/fm_links_03a.png'),\r\n  'SEC_fm_links_03b': require('./assets/secrets/fm_links_03b.png'),\r\n  'SEC_fm_links_04': require('./assets/secrets/fm_links_04.png'),\r\n};\r\n// ^^ Will these be too slow with too many lootlists and images??\r\n\r\n\r\n/* **************** */\r\n/*   LOOTLIST VIEW  */\r\n/* **************** */\r\n// Custom view component of a mission's lists of loot, items, etc.\r\nexport function LootlistView({missionName, carriedLoot}) {\r\n  // Access navigation object from inside component.\r\n  const navigation = useNavigation();\r\n\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // AccumLoot: tracks the values of loot selected by the user.\r\n  // Each nested array is for Normal, Hard, & Expert difficulty.\r\n  // Each index in an array is for gold, gems, goods, and total.\r\n  // Store as a Ref instead of a State to avoid unneeded re-renders.\r\n  const accumLoot = React.useRef([[0,0,0,0], [0,0,0,0], [0,0,0,0]]);\r\n\r\n  // AccumPocket: tracks the pickpockets selected by the user.\r\n  // Each index in the array is for Normal, Hard, & Expert difficulty.\r\n  // Store as a Ref instead of a State to avoid unneeded re-renders.\r\n  const accumPocket = React.useRef([0,0,0]);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme,\r\n        getDefaultDiffN, setDefaultDiffN,\r\n        getDefaultDiffH, setDefaultDiffH,\r\n        getDefaultDiffX, setDefaultDiffX,\r\n        getShowListLoot, setShowListLoot,\r\n        getShowListItem, setShowListItem,\r\n        getShowListJunk, setShowListJunk,\r\n        getShowListSec, setShowListSec} =\r\n    React.useContext(SettingContext);\r\n\r\n  // CarryLoot: tracks loot carried over from the previous mission.\r\n  // Only used if lootlist's 'carryLoot' is set to 'true'.\r\n  const [getCarryLoot, setCarryLoot] = React.useState('');\r\n\r\n  // CarryFound: tracks if carryover loot has been found.\r\n  const [getCarryFound, setCarryFound] = React.useState(false);\r\n\r\n  // FilterDiff: tracks booleans for difficulty filters.\r\n  // True = show items only available on this difficulty.\r\n  // False = hide items only available on this difficulty.\r\n  const [getFilterDiffN, setFilterDiffN] = React.useState(getDefaultDiffN);\r\n  const [getFilterDiffH, setFilterDiffH] = React.useState(getDefaultDiffH);\r\n  const [getFilterDiffX, setFilterDiffX] = React.useState(getDefaultDiffX);\r\n\r\n  // FilterMode: tracks booleans for game mode filters.\r\n  // True = show items only available on this game mode.\r\n  // False = hide items only available on this game mode.\r\n  const [getFilterModeA, setFilterModeA] = React.useState(true);\r\n  const [getFilterModeB, setFilterModeB] = React.useState(true);\r\n  const [getFilterModeC, setFilterModeC] = React.useState(true);\r\n\r\n  // FilterLoot: tracks booleans for loot filters.\r\n  // True = show loot items with this value type.\r\n  // False = hide loot items with this value type.\r\n  const [getFilterLootGold, setFilterLootGold] = React.useState(true);\r\n  const [getFilterLootGems, setFilterLootGems] = React.useState(true);\r\n  const [getFilterLootGoods, setFilterLootGoods] = React.useState(true);\r\n\r\n  // FilterOnly: tracks booleans for miscellaneous filters.\r\n  // True = exclude items that don't fit this category.\r\n  // False = include items that don't fit this category.\r\n  const [getFilterOnlyObj, setFilterOnlyObj] = React.useState(false);\r\n  const [getFilterOnlyPick, setFilterOnlyPick] = React.useState(false);\r\n  const [getFilterOnlySec, setFilterOnlySec] = React.useState(false);\r\n\r\n  // FilterArea: tracks list of selections for area filter.\r\n  // When in use, hides any items not found in selected areas.\r\n  const [getFilterArea, setFilterArea] = React.useState([]);\r\n\r\n  // LinkedFind: tracks if items and secrets are found simultaneously.\r\n  // Used to trigger multiple items/secrets at the same time.\r\n  const [getLinkedFind, setLinkedFind] = React.useState([]);\r\n\r\n  // LootCount: stores whether this mission has loot, and what types.\r\n  // Used to determine whether to show the loot type filters.\r\n  const goldCount =\r\n    ( myList[missionName].totals &&\r\n      myList[missionName].totals[0][0] === 0 &&\r\n      myList[missionName].totals[1][0] === 0 &&\r\n      myList[missionName].totals[2][0] === 0 ) ? false : true;\r\n  const gemsCount =\r\n    ( myList[missionName].totals &&\r\n      myList[missionName].totals[0][1] === 0 &&\r\n      myList[missionName].totals[1][1] === 0 &&\r\n      myList[missionName].totals[2][1] === 0 ) ? false : true;\r\n  const goodsCount =\r\n    ( myList[missionName].totals &&\r\n      myList[missionName].totals[0][2] === 0 &&\r\n      myList[missionName].totals[1][2] === 0 &&\r\n      myList[missionName].totals[2][2] === 0 ) ? false : true;\r\n  const lootCount =\r\n    ( myList[missionName].totals && myList[missionName].loot )\r\n    ? true : false;\r\n\r\n  // Store number of secrets in the mission.\r\n  // Used to determine whether to show the Secrets Only filter.\r\n  const secretCount =\r\n    (myList[missionName].secrets && myList[missionName].secrets.length)\r\n    ? myList[missionName].secrets.length : 0;\r\n\r\n  // Read data from device storage.\r\n  const readFoundLoot = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(\r\n        `@myloot_${myList[missionName].title}`\r\n      );\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        //setFoundLoot(parseArray);\r\n        accumLoot.current = parseArray;\r\n        //alert(`Loaded myloot_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read loot array.');\r\n    }\r\n  };\r\n  const readFoundPocket = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(\r\n        `@mypocket_${myList[missionName].title}`\r\n      );\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        //setFoundPocket(parseArray);\r\n        accumPocket.current = parseArray;\r\n        //alert(`Loaded mypocket_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read pocket array.');\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readFoundLoot();\r\n    readFoundPocket();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    // Wrap component in providers to utilize context.\r\n    <FoundContext.Provider value={\r\n      {accumLoot, accumPocket}\r\n    }>\r\n      <CarryoverContext.Provider value={\r\n        {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound}\r\n      }>\r\n        <FilterContext.Provider value={\r\n          {getFilterDiffN, setFilterDiffN,\r\n          getFilterDiffH, setFilterDiffH,\r\n          getFilterDiffX, setFilterDiffX,\r\n          getFilterModeA, setFilterModeA,\r\n          getFilterModeB, setFilterModeB,\r\n          getFilterModeC, setFilterModeC,\r\n          getFilterLootGold, setFilterLootGold,\r\n          getFilterLootGems, setFilterLootGems,\r\n          getFilterLootGoods, setFilterLootGoods,\r\n          getFilterOnlyObj, setFilterOnlyObj,\r\n          getFilterOnlyPick, setFilterOnlyPick,\r\n          getFilterOnlySec, setFilterOnlySec,\r\n          getFilterArea, setFilterArea}\r\n        }>\r\n          <ScrollView style={{\r\n            flexGrow: (Platform.OS === 'web') ? 0 : 1,\r\n            height: (!myList[missionName].totals &&\r\n              !myList[missionName].pocketCount) ? '100%' :\r\n              (Platform.OS === 'web') ? height*0.66 : '75%'\r\n          }}>\r\n            <View style={[styles.listScreen, {\r\n              width: (width > 844) ? 844 : '100%'\r\n            }]}>\r\n              {/* Mission header (screens, author, etc). */}\r\n              <View style={styles.titleHeader}>\r\n                {/* Display mission title. */}\r\n                {myList[missionName].title &&\r\n                  <Text style={[\r\n                    styles.bigTitle,\r\n                    Platform.OS !== 'web' && {\r\n                      fontSize: width*0.058,\r\n                    },\r\n                    Platform.OS === 'web' && {\r\n                      fontSize: (width > 849) ? 40 : width*0.047,\r\n                    },\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {myList[missionName].title}\r\n                  </Text>\r\n                }\r\n                {/* Display mission author(s). */}\r\n                {myList[missionName].author &&\r\n                  <Text style={[\r\n                    styles.titleHeaderBy, {color: colors.text}\r\n                  ]}>\r\n                    {'by '}\r\n                    {myList[missionName].author.map((authKey, authIndex) => (\r\n                      <Text key={`author_${authIndex}`}>\r\n                        {/* Put an 'and' before the last author's name. */}\r\n                        {myList[missionName].author.length === 2 &&\r\n                        authIndex === myList[missionName].author.length - 1 &&\r\n                          ' and '\r\n                        }\r\n                        {myList[missionName].author.length > 2 &&\r\n                        authIndex === myList[missionName].author.length - 1 &&\r\n                          'and '\r\n                        }\r\n                        {/* Put the name of the author(s). */}\r\n                        <Text style={styles.titleHeaderName}>\r\n                          {authKey}\r\n                        </Text>\r\n                        {/* Put a comma between names (if > 2 authors). */}\r\n                        {myList[missionName].author.length > 2 &&\r\n                        authIndex !== myList[missionName].author.length - 1 &&\r\n                          ', '\r\n                        }\r\n                      </Text>\r\n                    ))}\r\n                  </Text>\r\n                }\r\n                {/* Display contest name, if applicable. */}\r\n                {myList[missionName].contest &&\r\n                  <Text style={[\r\n                    styles.titleHeaderBy, {color: colors.text}\r\n                  ]}>\r\n                    {'for the '}\r\n                    <Text style={styles.titleHeaderName}>\r\n                      {myList[missionName].contest}\r\n                    </Text>\r\n                  </Text>\r\n                }\r\n                {/* Display mission screenshots. */}\r\n                {myList[missionName].screens &&\r\n                  <View style={styles.imgHeaderView}>\r\n                    <Image\r\n                      source={myScreens[ myList[missionName].screens[0] ]}\r\n                      style={[styles.imgHeader, {\r\n                        height: (width > 849) ? 225 : width*0.265,\r\n                        width: (width > 849) ? 400 : width*0.475,\r\n                      }]}\r\n                    />\r\n                    <Image\r\n                      source={myScreens[ myList[missionName].screens[1] ]}\r\n                      style={[styles.imgHeader, {\r\n                        height: (width > 849) ? 225 : width*0.265,\r\n                        width: (width > 849) ? 400 : width*0.475,\r\n                      }]}\r\n                    />\r\n                  </View>\r\n                }\r\n                {/* Display release date & latest version. */}\r\n                {myList[missionName].firstRelease &&\r\n                  <Text style={[\r\n                    styles.titleHeaderDate, {color: colors.text}\r\n                  ]}>\r\n                    {`Initial release: ${myList[missionName].firstRelease}`}\r\n                  </Text>\r\n                }\r\n                {myList[missionName].latestVersion &&\r\n                  <Text style={[\r\n                    styles.titleHeaderDate, {color: colors.text}\r\n                  ]}>\r\n                    {`Latest version: ${myList[missionName].latestVersion}`}\r\n                  </Text>\r\n                }\r\n                {/* Display buttons to go to previous/next missions. */}\r\n                {(myList[missionName].goToPrev || myList[missionName].goToNext) &&\r\n                  <View\r\n                    style={styles.goToView}\r\n                  >\r\n                    {/* Empty space if no previous mission. */}\r\n                    {!myList[missionName].goToPrev &&\r\n                      <View style={styles.goPrevBlank}></View>\r\n                    }\r\n                    {/* Previous mission button. */}\r\n                    {myList[missionName].goToPrev &&\r\n                      <TouchableOpacity\r\n                        style={styles.goToArrow}\r\n                        // Set the lootlist screen with another mission.\r\n                        onPress={() => navigation.push('Lootlist', {\r\n                          missionTitle: myList[missionName].goToPrev,\r\n                        })}\r\n                      >\r\n                        <Image\r\n                          source={(getCurrentTheme == 'dark')\r\n                            ? arrowDark : arrowLight}\r\n                          style={styles.arrowLeft}\r\n                        />\r\n                        <View\r\n                          style={[\r\n                            styles.goToButton,\r\n                            styles.goPrevButton,\r\n                            {backgroundColor: colors.backLight,\r\n                            borderColor: colors.border}\r\n                          ]}\r\n                        >\r\n                          <Text style={[\r\n                            styles.goPrevText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`Previous\\nMission`}\r\n                          </Text>\r\n                        </View>\r\n                      </TouchableOpacity>\r\n                    }\r\n                    {/* Back to mission selection button. */}\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        styles.goToButton,\r\n                        styles.goPrevButton,\r\n                        styles.goNextButton,\r\n                        {backgroundColor: colors.backLight,\r\n                        borderColor: colors.border}\r\n                      ]}\r\n                      onPress={() => navigation.navigate('Start')}\r\n                    >\r\n                      <Text style={[\r\n                        styles.goBackText,\r\n                        {color: colors.text}\r\n                      ]}>\r\n                        {`Select\\nMission`}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    {/* Empty space if no next mission. */}\r\n                    {!myList[missionName].goToNext &&\r\n                      <View style={styles.goNextBlank}></View>\r\n                    }\r\n                    {/* Next mission button. */}\r\n                    {myList[missionName].goToNext &&\r\n                      <TouchableOpacity\r\n                        style={styles.goToArrow}\r\n                        // Set the lootlist screen with another mission.\r\n                        // Also, carry over the current loot total.\r\n                        onPress={() => navigation.push('Lootlist', {\r\n                          missionTitle: myList[missionName].goToNext,\r\n                          carryingLoot: accumLoot.current[2][3],\r\n                        })}\r\n                      >\r\n                        <View\r\n                          style={[\r\n                            styles.goToButton,\r\n                            styles.goNextButton,\r\n                            {backgroundColor: colors.backLight,\r\n                            borderColor: colors.border}\r\n                          ]}\r\n                        >\r\n                          <Text style={[\r\n                            styles.goNextText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`Next\\nMission`}\r\n                          </Text>\r\n                        </View>\r\n                        <Image\r\n                          source={(getCurrentTheme == 'dark')\r\n                            ? arrowDark : arrowLight}\r\n                          style={styles.arrowRight}\r\n                        />\r\n                      </TouchableOpacity>\r\n                    }\r\n                  </View>\r\n                }\r\n                {/*<Text>{`width: ${width}`}</Text>*/}\r\n              </View>\r\n              {/* Display buttons for filtering lists. */}\r\n              <Loot.FilterView\r\n                id={myList[missionName].id}\r\n                title={myList[missionName].title}\r\n                diffNames={myList[missionName].diffNames}\r\n                modeNames={myList[missionName].modeNames}\r\n                diffChanges={myList[missionName].diffChanges}\r\n                markObj={myList[missionName].markObj}\r\n                pocketCount={myList[missionName].pocketCount}\r\n                areas={myList[missionName].areas}\r\n                goldCount={goldCount}\r\n                gemsCount={gemsCount}\r\n                goodsCount={goodsCount}\r\n                lootCount={lootCount}\r\n                secretCount={secretCount}\r\n                getLinkedFind={getLinkedFind}\r\n                setLinkedFind={setLinkedFind}\r\n              />\r\n              {/* Notes section */}\r\n              {myList[missionName].notes &&\r\n                myList[missionName].notes[0].id !== 'null' &&\r\n                <>\r\n                  <SectionHeader headerName=\"Notes\"/>\r\n                  <View style={styles.noteView}>\r\n                    {/* Map out each entry in notes array. */}\r\n                    {myList[missionName].notes.map((noteKey, noteIndex) => (\r\n                      <View key={`note_${noteIndex}`}>\r\n                        {noteKey.show &&\r\n                          <Text style={[styles.noteText,\r\n                            {color: colors.text}]}\r\n                          >\r\n                            {noteKey.icon &&\r\n                              <>\r\n                                <Text style={styles.noteSymbol}>\r\n                                  {noteKey.icon}\r\n                                </Text>\r\n                                {': '}\r\n                              </>\r\n                            }\r\n                            {`${noteKey.desc}`}\r\n                          </Text>\r\n                        }\r\n                      </View>\r\n                    ))}\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Loot section. */}\r\n              {myList[missionName].loot && getShowListLoot &&\r\n                <>\r\n                  <SectionHeader headerName=\"Loot\"/>\r\n                  <View style={[\r\n                    Platform.OS !== 'web' && {width: '100%'},\r\n                    Platform.OS === 'web' && {\r\n                      width: /*(width > 1300) ? 1300 :\r\n                             (width > 1072) ? 1072 :*/\r\n                             (width > 844) ? 844 :\r\n                             (width > 616) ? 616 : 388\r\n                    }\r\n                  ]}>\r\n                    <View style={[\r\n                      styles.listHeader,\r\n                      {backgroundColor: colors.backDark,\r\n                      borderColor: colors.border}\r\n                    ]}>\r\n                      <Text style={styles.listHeaderText}>\r\n                        {' '}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={styles.listView}>\r\n                      {/* Map out each entry in loot array. */}\r\n                      {myList[missionName].loot.map((lootKey, lootIndex) => (\r\n                        <Loot.LootlistEntry\r\n                          key={`loot_${lootIndex}`}\r\n                          id={lootKey.id}\r\n                          title={myList[missionName].title}\r\n                          modeNames={myList[missionName].modeNames}\r\n                          areas={myList[missionName].areas}\r\n                          notes={myList[missionName].notes}\r\n                          name={lootKey.name}\r\n                          img={lootKey.img.map((imgKey, imgIndex) => {\r\n                            return myImages[imgKey];\r\n                          })}\r\n                          values={lootKey.values}\r\n                          getLinkedFind={getLinkedFind}\r\n                          setLinkedFind={setLinkedFind}\r\n                        />\r\n                      ))}\r\n                    </View>\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Item section. */}\r\n              {myList[missionName].items && getShowListItem &&\r\n                <>\r\n                  <SectionHeader headerName=\"Items\"/>\r\n                  <View style={[styles.listView,\r\n                    Platform.OS !== 'web' && {width: '90%'},\r\n                    Platform.OS === 'web' && {\r\n                      width: /*(width > 1240) ? 1240 :\r\n                             (width > 1012) ? 1012 :*/\r\n                             (width > 784) ? 784 :\r\n                             (width > 556) ? 556 : 328\r\n                    }\r\n                  ]}>\r\n                    {/* Map out each entry in item array. */}\r\n                    {myList[missionName].items.map((itemCatKey, itemCatIndex) => (\r\n                      <View key={`itemCat_${itemCatIndex}`}>\r\n                        <View style={[\r\n                          styles.listHeader,\r\n                          {backgroundColor: colors.backDark,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          <Text style={styles.listHeaderText}>\r\n                            {itemCatKey.category}\r\n                          </Text>\r\n                        </View>\r\n                        <View>\r\n                          {itemCatKey.catItems.map((itemKey, itemIndex) => (\r\n                            <Loot.LootlistEntry\r\n                              key={`item_${itemIndex}`}\r\n                              id={itemKey.id}\r\n                              title={myList[missionName].title}\r\n                              modeNames={myList[missionName].modeNames}\r\n                              areas={myList[missionName].areas}\r\n                              notes={myList[missionName].notes}\r\n                              name={itemKey.name}\r\n                              img={itemKey.img.map((imgKey, imgIndex) => {\r\n                                return myImages[imgKey];\r\n                              })}\r\n                              locations={itemKey.locations}\r\n                              getLinkedFind={getLinkedFind}\r\n                              setLinkedFind={setLinkedFind}\r\n                            />\r\n                          ))}\r\n                        </View>\r\n                      </View>\r\n                    ))}\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Junk section. */}\r\n              {myList[missionName].junk && getShowListJunk &&\r\n                <>\r\n                  <SectionHeader headerName=\"Junk\"/>\r\n                  <View style={[styles.listView,\r\n                    Platform.OS !== 'web' && {width: '90%'},\r\n                    Platform.OS === 'web' && {\r\n                      width: /*(width > 1240) ? 1240 :\r\n                             (width > 1012) ? 1012 :*/\r\n                             (width > 784) ? 784 :\r\n                             (width > 556) ? 556 : 328\r\n                    }\r\n                  ]}>\r\n                    {/* Map out each entry in junk array. */}\r\n                    {myList[missionName].junk.map((junkCatKey, junkCatIndex) => (\r\n                      <View key={`junkCat_${junkCatIndex}`}>\r\n                        <View style={[\r\n                          styles.listHeader,\r\n                          {backgroundColor: colors.backDark,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          <Text style={styles.listHeaderText}>\r\n                            {junkCatKey.category}\r\n                          </Text>\r\n                        </View>\r\n                        <View>\r\n                          {junkCatKey.catJunk.map((junkKey, junkIndex) => (\r\n                            <Loot.LootlistEntry\r\n                              key={`junk_${junkIndex}`}\r\n                              id={junkKey.id}\r\n                              title={myList[missionName].title}\r\n                              modeNames={myList[missionName].modeNames}\r\n                              areas={myList[missionName].areas}\r\n                              notes={myList[missionName].notes}\r\n                              name={junkKey.name}\r\n                              img={junkKey.img.map((imgKey, imgIndex) => {\r\n                                return myImages[imgKey];\r\n                              })}\r\n                              locations={junkKey.locations}\r\n                              getLinkedFind={getLinkedFind}\r\n                              setLinkedFind={setLinkedFind}\r\n                            />\r\n                          ))}\r\n                        </View>\r\n                      </View>\r\n                    ))}\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Secret section. */}\r\n              {myList[missionName].secrets && getShowListSec &&\r\n                <View style={[styles.listSecretView,\r\n                  Platform.OS !== 'web' && {width: '100%'},\r\n                  Platform.OS === 'web' && {\r\n                    width: (width > 784) ? 784 : '100%'\r\n                  }\r\n                ]}>\r\n                  <SectionHeader headerName=\"Secrets\"/>\r\n                  <View style={[\r\n                    styles.listHeader,\r\n                    {backgroundColor: colors.backDark,\r\n                    borderColor: colors.border}\r\n                  ]}>\r\n                    <Text style={styles.listHeaderText}>\r\n                      {' '}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.listView}>\r\n                    {/* Map out each entry in secrets array. */}\r\n                    {myList[missionName].secrets.map((secKey, secIndex) => (\r\n                      <Loot.SecretEntry\r\n                        key={`sec_${secIndex}`}\r\n                        id={secKey.id}\r\n                        areas={myList[missionName].areas}\r\n                        number={secKey.number}\r\n                        img={secKey.img.map((imgKey, imgIndex) => {\r\n                          return mySecrets[imgKey];\r\n                        })}\r\n                        triggers={secKey.triggers}\r\n                        rewards={secKey.rewards}\r\n                        getLinkedFind={getLinkedFind}\r\n                        setLinkedFind={setLinkedFind}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              }\r\n            </View>\r\n          </ScrollView>\r\n\r\n          {/* Display the mission's loot total(s). */}\r\n          <Loot.TotalsView\r\n            title={myList[missionName].title}\r\n            diffNames={myList[missionName].diffNames}\r\n            totals={myList[missionName].totals}\r\n            lootChanges={myList[missionName].lootChanges}\r\n            goal1={myList[missionName].goal1}\r\n            goal2={myList[missionName].goal2}\r\n            pocketCount={myList[missionName].pocketCount}\r\n            pocketChanges={myList[missionName].pocketChanges}\r\n            carryLoot={myList[missionName].carryLoot}\r\n            carriedLoot={carriedLoot}\r\n          />\r\n        </FilterContext.Provider>\r\n      </CarryoverContext.Provider>\r\n    </FoundContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*  SECTION HEADER  */\r\n/* **************** */\r\n// Custom text component showing a header for each list section.\r\n// The long strings of spaces are given a 'strikethrough' style.\r\nexport function SectionHeader(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <View style={styles.listTitleView}>\r\n      <Text style={[\r\n        styles.listTitleText,\r\n        Platform.OS !== 'web' && {\r\n          fontSize: 14,\r\n        },\r\n        Platform.OS === 'web' && {\r\n          fontSize: (width > 460) ? 18 : width*0.039,\r\n        },\r\n        {color: colors.text}\r\n      ]}>\r\n        <Text style={styles.listTitleLine}>\r\n          {(width > 631)\r\n            ? '                                        '\r\n            : '                              '\r\n          }\r\n        </Text>\r\n        {`  ${props.headerName}  `}\r\n        <Text style={styles.listTitleLine}>\r\n          {(width > 631)\r\n            ? '                                        '\r\n            : '                              '\r\n          }\r\n        </Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n// Define various styles here.\r\nconst styles = StyleSheet.create({\r\n  listScreen: {\r\n    //width: '100%',\r\n  },\r\n  listView: {\r\n    //width: '100%',\r\n    marginBottom: (Platform.OS === 'web') ? 10 : 5,\r\n  },\r\n  listItemView: {\r\n    //width: (Platform.OS === 'web') ? 784 : '90%',\r\n  },\r\n  listSecretView: {\r\n    width: (Platform.OS === 'web') ? 785 : '100%',\r\n  },\r\n  listHeader: {\r\n    borderWidth: 1,\r\n    borderTopLeftRadius: 8,\r\n    borderBottomLeftRadius: 8,\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\r\n    padding: 2,\r\n    paddingLeft: 6,\r\n  },\r\n  listHeaderText: {\r\n    color: 'white',\r\n    fontSize: (Platform.OS === 'web') ? 12 : 10,\r\n  },\r\n  listTitleView: {\r\n    alignItems: 'center',\r\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\r\n  },\r\n  listTitleText: {\r\n    //fontSize: (Platform.OS === 'web') ? 18 : 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  listTitleLine: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  titleHeader: {\r\n    alignItems: 'center',\r\n    marginVertical: 2,\r\n  },\r\n  bigTitle: {\r\n    fontFamily: 'Thief',\r\n    textAlign: 'center',\r\n    //fontSize: (Platform.OS === 'web') ? 40 : 24,\r\n    //fontSize: 30 / PixelRatio.getFontScale(),\r\n  },\r\n  titleHeaderBy: {\r\n    //fontSize: (Platform.OS === 'web') ? 24 : 14,\r\n    fontSize: 16 / PixelRatio.getFontScale(),\r\n  },\r\n  titleHeaderName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  titleHeaderDate: {\r\n    //fontSize: (Platform.OS === 'web') ? 16 : 10,\r\n    fontSize: 12 / PixelRatio.getFontScale(),\r\n  },\r\n  imgHeader: {\r\n    marginVertical: 5,\r\n  },\r\n  imgHeaderView: {\r\n    flexDirection: 'row',\r\n    columnGap: 10,\r\n  },\r\n  goToView: {\r\n    flexDirection: 'row',\r\n    columnGap: (Platform.OS === 'web') ? 120 : 60,\r\n  },\r\n  goToArrow: {\r\n    flexDirection: 'row',\r\n  },\r\n  goToButton: {\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    width: (Platform.OS === 'web') ? 65 : 55,\r\n  },\r\n  goPrevButton: {\r\n    borderRightWidth: 1,\r\n    borderTopRightRadius: 5,\r\n    borderBottomRightRadius: 5,\r\n  },\r\n  goPrevBlank: {\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    width: (Platform.OS === 'web') ? 85 : 72,\r\n  },\r\n  goPrevText: {\r\n    fontSize: (Platform.OS === 'web') ? 13 : 10,\r\n    textAlign: 'left',\r\n  },\r\n  goNextButton: {\r\n    borderLeftWidth: 1,\r\n    borderTopLeftRadius: 5,\r\n    borderBottomLeftRadius: 5,\r\n  },\r\n  goNextBlank: {\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    width: (Platform.OS === 'web') ? 85 : 72,\r\n  },\r\n  goNextText: {\r\n    fontSize: (Platform.OS === 'web') ? 13 : 10,\r\n    textAlign: 'right',\r\n  },\r\n  goBackText: {\r\n    fontSize: (Platform.OS === 'web') ? 13 : 10,\r\n    textAlign: 'center',\r\n  },\r\n  arrowLeft: {\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    marginRight: -0.5,\r\n    height: (Platform.OS === 'web') ? 42 : 34,\r\n    width: (Platform.OS === 'web') ? 21 : 17,\r\n  },\r\n  arrowRight: {\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    marginLeft: -0.5,\r\n    height: (Platform.OS === 'web') ? 42 : 34,\r\n    width: (Platform.OS === 'web') ? 21 : 17,\r\n    transform: [{rotateY: '180deg'}],\r\n  },\r\n  noteView: {\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginTop: 5,\r\n  },\r\n  noteText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 12,\r\n  },\r\n  noteSymbol: {\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n","//import 'react-native-gesture-handler';\nimport * as React from 'react';\n//import { Ionicons } from '@expo/vector-icons';\nimport {\n  NavigationContainer,\n  useNavigation,\n  //createNavigationContainerRef,\n  //stackActions,\n  //useIsFocused,\n  //useFocusEffect,\n  //getFocusedRouteNameFromRoute,\n  DefaultTheme,\n  DarkTheme,\n  useTheme,\n} from '@react-navigation/native';\n//import { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n//import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  createDrawerNavigator,\n  //useDrawerStatus,\n  //DrawerContentScrollView,\n  //DrawerItemList,\n  //DrawerItem,\n} from '@react-navigation/drawer';\nimport {\n  StyleSheet, Platform,\n  Image, //Alert,\n  Text, TextInput,\n  Button, //Pressable,\n  //TouchableHighlight,\n  TouchableOpacity,\n  //TouchableNativeFeedback,\n  //TouchableWithoutFeedback,\n  //FlatList, SectionList,\n  View, ScrollView,\n  // SafeAreaView,\n  // ActivityIndicator,\n  //StatusBar, BackHandler,\n  //Appearance,\n  PixelRatio,\n  useColorScheme,\n  //Linking,\n  useWindowDimensions,\n} from 'react-native';\n//import { AppearanceProvider, useColorScheme } from 'react-native-appearance';\n//import { Button } from 'react-native-paper';\n/*import {\n  SafeAreaProvider,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';*/\nimport * as Linking from 'expo-linking';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useFonts } from 'expo-font';\n\n// Import functions and components from other files.\nimport * as Lists from \"./Lists\";\n\n// Import contexts here.\nimport {SettingContext} from \"./Context\";\n\n// Add credits here.\nconst credits = require('./credits.json');\n\n// Add mission screenshots here.\nconst myScreens = {\n  // THIEF: THE DARK PROJECT\n  't1_training': require('./assets/screens/t1_training_A.png'), // A Keeper's Training\n  't1_bafford': require('./assets/screens/t1_bafford_A.png'), // Lord Bafford's Manor\n  't1_cragscleft': require('./assets/screens/t1_cragscleft_B.png'), // Break from Cragscleft Prison\n  't1_bonehoard': require('./assets/screens/t1_bonehoard_B.png'), // Down in the Bonehoard\n  't1_assassins': require('./assets/screens/t1_assassins_B.png'), // Assassins\n  't1_guild': require('./assets/screens/t1_guild_B.png'), // Thieves' Guild\n  't1_sword': require('./assets/screens/t1_sword_A.png'), // The Sword\n  't1_haunted': require('./assets/screens/t1_haunted_A.png'), // The Haunted Cathedral\n  't1_towers': require('./assets/screens/t1_towers_B.png'), // The Mage Towers\n  't1_lost': require('./assets/screens/t1_lost_A.png'), // The Lost City\n  //'t1_song': require('./assets/screens/t1_training_A.png'), // Song of the Caverns\n  //'t1_undercover': require('./assets/screens/t1_training_A.png'), // Undercover\n  //'t1_return': require('./assets/screens/t1_training_A.png'), // Return to the Cathedral\n  //'t1_escape': require('./assets/screens/t1_training_A.png'), // Escape!\n  //'t1_bedfellows': require('./assets/screens/t1_training_A.png'), // Strange Bedfellows\n  //'t1_maw': require('./assets/screens/t1_training_A.png'), // Into the Maw of Chaos\n  //'t1_blooper': require('./assets/screens/t1_training_A.png'), // Blooper Reel\n\n  // THIEF II: THE METAL AGE\n  't2_interference': require('./assets/screens/t2_interference_B.png'), // Running Interference\n  't2_shipping': require('./assets/screens/t2_shipping_A.png'), // Shipping ... and Receiving\n  't2_framed': require('./assets/screens/t2_framed_A.png'), // Framed\n  't2_ambush': require('./assets/screens/t2_ambush_B.png'), // Ambush\n  't2_eavesdropping': require('./assets/screens/t2_eavesdropping_B.png'), // Eavesdropping\n  't2_bank': require('./assets/screens/t2_bank_B.png'), // First City Bank and Trust\n  't2_blackmail': require('./assets/screens/t2_blackmail_B.png'), // Blackmail\n  't2_courier': require('./assets/screens/t2_courier_A.png'), // Trace the Courier\n  't2_blood': require('./assets/screens/t2_blood_A.png'), // Trail of Blood\n  't2_party': require('./assets/screens/t2_party_B.png'), // Life of the Party\n  //'t2_cargo': require('./assets/screens/t1_training_A.png'), // Precious Cargo\n  //'t2_kidnap': require('./assets/screens/t1_training_A.png'), // Kidnap\n  //'t2_casing': require('./assets/screens/t1_training_A.png'), // Casing the Joint\n  //'t2_masks': require('./assets/screens/t1_training_A.png'), // Masks\n  //'t2_soulforge': require('./assets/screens/t1_training_A.png'), // Sabotage at Soulforge\n  //'t2_guest': require('./assets/screens/t1_training_A.png'), // The Unwelcome Guest\n\n  // Fan Missions\n  'fm_lampfire': require('./assets/screens/fm_lampfire_B.png'), // Autumn in Lampfire Hills\n  'fm_burrickhead': require('./assets/screens/fm_burrickhead_A.png'), // The Burrick's Head Inn\n  'fm_spirit_resurrection': require('./assets/screens/fm_spirit_resurrection_B.png'), // Cult of the Resurrection\n  'fm_ashton_escape': require('./assets/screens/fm_ashton_escape_A.png'), // Escape!\n  'fm_agenda': require('./assets/screens/fm_agenda_A.png'), // Hidden Agenda\n  'fm_maelstrom': require('./assets/screens/fm_maelstrom_B.png'), // Into the Maelstrom\n  'fm_spirit_manse': require('./assets/screens/fm_spirit_manse_B.png'), // The Inverted Manse\n  'fm_forces_invitation': require('./assets/screens/fm_forces_invitation_A.png'), // Mysterious Invitation\n  'fm_christmas': require('./assets/screens/fm_christmas_A.png'), // The Night Before Christmas\n  'fm_ashton_stroll': require('./assets/screens/fm_ashton_stroll_B.png'), // A Night's Stroll\n  'fm_ashton_revenge': require('./assets/screens/fm_ashton_revenge_B.png'), // Revenge\n  'fm_cottage': require('./assets/screens/fm_cottage_A.png'), // Rose Cottage\n  'fm_seventh_act2': require('./assets/screens/fm_seventh_act2_A.png'), // The Seventh Crystal - Act 2\n  'fm_seventh_act3': require('./assets/screens/fm_seventh_act3_B.png'), // The Seventh Crystal - Act 3\n  'fm_holiday2004': require('./assets/screens/fm_holiday2004_B.png'), // A Thief's Holiday 2004\n  'fm_highway': require('./assets/screens/fm_highway_A.png'), // Thieves' Highway\n  'fm_vault': require('./assets/screens/fm_vault_B.png'), // Through No Vault of My Own\n  'fm_forces_ultima': require('./assets/screens/fm_forces_ultima_B.png'), // Ultima Ratio\n  'fm_unbidden': require('./assets/screens/fm_unbidden_A.png'), // Unbidden Guest\n  'fm_united': require('./assets/screens/fm_united_B.png'), // United Bank of Auldale\n  'fm_ashton_visit': require('./assets/screens/fm_ashton_visit_A.png'), // A Visit to Lord Ashton's\n  'fm_links': require('./assets/screens/fm_links_B.png'), // Weak Links\n};\n\n// REMINDER: Don't put comments inside return functions!\n// Unless they're inside a tag or surrounded by curly braces.\n\n// Create custom themes here.\nconst MyLightTheme = {\n  dark: false,\n  colors: {\n    ...DefaultTheme.colors,\n    textInvert: 'lightgray',\n    border: 'black',\n    backLight: 'lightgray',\n    backMed: 'darkgray',\n    backDark: 'gray',\n    findE: 'lime',\n    findM: 'aqua',\n    findH: 'plum',\n    found: 'gold',\n    locObj: 'dodgerblue',\n    locN: 'green',\n    locH: 'blue',\n    locX: 'purple',\n    locSecret: 'crimson',\n    inputArea: 'rgb(242,242,242)',\n    inputCheck: 'rgb(242,242,242)',\n    inputBorder: 'dimgray',\n    url: 'blue',\n  },\n}\n\nconst MyDarkTheme = {\n  dark: true,\n  colors: {\n    ...DarkTheme.colors,\n    primary: 'gold',\n    background: 'rgb(50,50,50)',\n    card: 'gray',\n    //text: 'white',\n    textInvert: 'rgb(170,170,170)',\n    border: 'rgb(140,140,140)',\n    backLight: 'dimgray',\n    backMed: 'rgb(85,85,85)',\n    backDark: 'rgb(70,70,70)',\n    findE: 'green',\n    findM: 'blue',\n    findH: 'purple',\n    found: 'olive',\n    locObj: 'skyblue',\n    locN: 'lime',\n    locH: 'aqua',\n    locX: 'rgb(220,180,220)',\n    locSecret: 'lightsalmon',\n    inputArea: 'rgb(85,85,85)',\n    inputCheck: 'dimgray',\n    inputBorder: 'gray',\n    url: 'aqua',\n  },\n}\n\n\n/* **************** */\n/*   GO TO MISSION  */\n/* **************** */\n// Custom button component to choose a mission's lootlist.\nfunction GoToMission({missionID, missionName}) {\n  // Access navigation object from inside component.\n  const navigation = useNavigation();\n\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.buttonMission,\n        Platform.OS !== 'web' && {\n          width: '46%',\n          height: width*0.64*0.46,\n        },\n        Platform.OS === 'web' && {\n          width: (width > 618) ? 280 : '45%',\n          height: (width > 618) ? 175 : width*0.6*0.45,\n        },\n        {backgroundColor: colors.backLight,\n        borderColor: colors.border}\n      ]}\n      // Pass mission's name as a parameter to lootlist screen.\n      onPress={() => navigation.navigate('Lootlist', {\n        missionTitle: missionID,\n      })}\n    >\n      {missionID &&\n        <Image\n          source={myScreens[missionID]}\n          style={[\n            styles.buttonImage,\n            Platform.OS !== 'web' && {\n              width: '95%',\n              height: width*0.64*0.38,\n            },\n            Platform.OS === 'web' && {\n              width: (width > 618) ? 270 : '94%',\n              height: (width > 618) ? 150 : width*0.6*0.38,\n            }\n          ]}\n        />\n      }\n      {/* Use backquotes to denote parameters in a string. */}\n      <Text style={[\n        styles.buttonText,\n        Platform.OS !== 'web' && {\n          fontSize: 11,\n        },\n        Platform.OS === 'web' && {\n          fontSize: (width > 618) ? 15 : width*0.024,\n        },\n        {color: colors.text}\n      ]}>\n        {`${missionName}`}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\n\n// Create screen navigators here.\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\n\n/* **************** */\n/*  THIEF 1 SCREEN  */\n/* **************** */\n// Screen for choosing a Thief 1 mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction Thief1Screen({ navigation }) {\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView style={{\n      height: (Platform.OS === 'web') ? height*0.99 : '100%'\n    }}>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief 1 Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t1_training\"\n            missionName=\"A Keeper's Training\"\n          />\n          <GoToMission\n            missionID=\"t1_bafford\"\n            missionName=\"Lord Bafford's Manor\"\n          />\n          <GoToMission\n            missionID=\"t1_cragscleft\"\n            missionName=\"Break from Cragscleft Prison\"\n          />\n          <GoToMission\n            missionID=\"t1_bonehoard\"\n            missionName=\"Down in the Bonehoard\"\n          />\n          <GoToMission\n            missionID=\"t1_assassins\"\n            missionName=\"Assassins\"\n          />\n          <GoToMission\n            missionID=\"t1_guild\"\n            missionName=\"Thieves' Guild\"\n          />\n          <GoToMission\n            missionID=\"t1_sword\"\n            missionName=\"The Sword\"\n          />\n          <GoToMission\n            missionID=\"t1_haunted\"\n            missionName=\"The Haunted Cathedral\"\n          />\n          <GoToMission\n            missionID=\"t1_towers\"\n            missionName=\"The Mage Towers\"\n          />\n          <GoToMission\n            missionID=\"t1_lost\"\n            missionName=\"The Lost City\"\n          />\n          {/*<GoToMission\n            missionID=\"t1_song\"\n            missionName=\"Song of the Caverns\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_undercover\"\n            missionName=\"Undercover\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_return\"\n            missionName=\"Return to the Cathedral\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_escape\"\n            missionName=\"Escape!\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_bedfellows\"\n            missionName=\"Bedfellows\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_maw\"\n            missionName=\"Into the Maw of Chaos\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_blooper\"\n            missionName=\"Blooper Reel\"\n          />*/}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  THIEF 2 SCREEN  */\n/* **************** */\n// Screen for choosing a Thief 2 mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction Thief2Screen({ navigation }) {\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView style={{\n      height: (Platform.OS === 'web') ? height*0.99 : '100%'\n    }}>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief 2 Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t2_interference\"\n            missionName=\"Running Interference\"\n          />\n          <GoToMission\n            missionID=\"t2_shipping\"\n            missionName=\"Shipping ... and Receiving\"\n          />\n          <GoToMission\n            missionID=\"t2_framed\"\n            missionName=\"Framed\"\n          />\n          <GoToMission\n            missionID=\"t2_ambush\"\n            missionName=\"Ambush\"\n          />\n          <GoToMission\n            missionID=\"t2_eavesdropping\"\n            missionName=\"Eavesdropping\"\n          />\n          <GoToMission\n            missionID=\"t2_bank\"\n            missionName=\"First City Bank and Trust\"\n          />\n          <GoToMission\n            missionID=\"t2_blackmail\"\n            missionName=\"Blackmail\"\n          />\n          <GoToMission\n            missionID=\"t2_courier\"\n            missionName=\"Trace the Courier\"\n          />\n          <GoToMission\n            missionID=\"t2_blood\"\n            missionName=\"Trail of Blood\"\n          />\n          <GoToMission\n            missionID=\"t2_party\"\n            missionName=\"Life of the Party\"\n          />\n          {/*<GoToMission\n            missionID=\"t2_cargo\"\n            missionName=\"Precious Cargo\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_kidnap\"\n            missionName=\"Kidnap\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_casing\"\n            missionName=\"Casing the Joint\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_masks\"\n            missionName=\"Masks\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_soulforge\"\n            missionName=\"Sabotage at Soulforge\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_guest\"\n            missionName=\"The Unwelcome Guest (Demo)\"\n          />*/}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  THIEF FM SCREEN */\n/* **************** */\n// Screen for choosing a Thief fan mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction ThiefFMScreen({ navigation }) {\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView style={{\n      height: (Platform.OS === 'web') ? height*0.99 : '100%'\n    }}>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief Fan Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          {/*<GoToMission\n            missionID=\"t0_test\"\n            missionName=\"App Test\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t0_select\"\n            missionName=\"Select Test\"\n          />*/}\n          <GoToMission\n            missionID=\"fm_lampfire\"\n            missionName=\"Autumn in Lampfire Hills\"\n          />\n          <GoToMission\n            missionID=\"fm_burrickhead\"\n            missionName=\"The Burrick's Head Inn\"\n          />\n          <GoToMission\n            missionID=\"fm_spirit_resurrection\"\n            missionName=\"Cult of the Resurrection\"\n          />\n          <GoToMission\n            missionID=\"fm_ashton_escape\"\n            missionName=\"Escape!\"\n          />\n          <GoToMission\n            missionID=\"fm_agenda\"\n            missionName=\"Hidden Agenda\"\n          />\n          <GoToMission\n            missionID=\"fm_maelstrom\"\n            missionName=\"Into the Maelstrom\"\n          />\n          <GoToMission\n            missionID=\"fm_spirit_manse\"\n            missionName=\"The Inverted Manse\"\n          />\n          <GoToMission\n            missionID=\"fm_forces_invitation\"\n            missionName=\"Mysterious Invitation\"\n          />\n          <GoToMission\n            missionID=\"fm_christmas\"\n            missionName=\"The Night Before Christmas\"\n          />\n          <GoToMission\n            missionID=\"fm_ashton_stroll\"\n            missionName=\"A Night's Stroll\"\n          />\n          <GoToMission\n            missionID=\"fm_ashton_revenge\"\n            missionName=\"Revenge\"\n          />\n          <GoToMission\n            missionID=\"fm_cottage\"\n            missionName=\"Rose Cottage\"\n          />\n          <GoToMission\n            missionID=\"fm_seventh_act2\"\n            missionName=\"The Seventh Crystal - Act 2\"\n          />\n          <GoToMission\n            missionID=\"fm_seventh_act3\"\n            missionName=\"The Seventh Crystal - Act 3\"\n          />\n          <GoToMission\n            missionID=\"fm_holiday2004\"\n            missionName=\"A Thief's Holiday 2004\"\n          />\n          <GoToMission\n            missionID=\"fm_highway\"\n            missionName=\"Thieves' Highway\"\n          />\n          <GoToMission\n            missionID=\"fm_vault\"\n            missionName=\"Through No Vault of My Own\"\n          />\n          <GoToMission\n            missionID=\"fm_forces_ultima\"\n            missionName=\"Ultima Ratio\"\n          />\n          <GoToMission\n            missionID=\"fm_unbidden\"\n            missionName=\"Unbidden Guest\"\n          />\n          <GoToMission\n            missionID=\"fm_united\"\n            missionName=\"United Bank of Auldale\"\n          />\n          <GoToMission\n            missionID=\"fm_ashton_visit\"\n            missionName=\"A Visit to Lord Ashton's\"\n          />\n          <GoToMission\n            missionID=\"fm_links\"\n            missionName=\"Weak Links\"\n          />\n          <GoToMission\n            missionID=\"t0_template12\"\n            missionName=\"Template 1/2\"\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  SETTINGS SCREEN */\n/* **************** */\n// Screen for changing app settings.\n// Contained in drawer navigator to separate from other screens.\nfunction SettingsScreen() {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  // Fetch global setting states from context.\n  const {getCurrentTheme, setCurrentTheme,\n    getDefaultGame, setDefaultGame,\n    getDefaultDiffN, setDefaultDiffN,\n    getDefaultDiffH, setDefaultDiffH,\n    getDefaultDiffX, setDefaultDiffX,\n    getShowListLoot, setShowListLoot,\n    getShowListItem, setShowListItem,\n    getShowListJunk, setShowListJunk,\n    getShowListSec, setShowListSec,\n    getSecSpoiler, setSecSpoiler} =\n    React.useContext(SettingContext);\n\n  // Variables for checkbox icon formatting.\n  const checkSize = 14;\n  const checkColorOn = getCurrentTheme === 'dark'\n    ? 'goldenrod' : 'olive';\n  const checkColorOff = getCurrentTheme === 'dark'\n    ? 'rgb(140,140,140)' : 'rgb(70,70,70)';\n\n  function updateTheme(newTheme) {\n    storeTheme(newTheme);\n    setCurrentTheme(newTheme);\n  };\n\n  function updateGame(newDefGame) {\n    storeGame(newDefGame);\n    setDefaultGame(newDefGame);\n  };\n\n  function updateDefDiff(toggleDiff) {\n    if (toggleDiff === \"default_normal\") {\n      storeDefDiff(toggleDiff, !getDefaultDiffN);\n      setDefaultDiffN(!getDefaultDiffN);\n    } else if (toggleDiff === \"default_hard\") {\n      storeDefDiff(toggleDiff, !getDefaultDiffH);\n      setDefaultDiffH(!getDefaultDiffH);\n    } else if (toggleDiff === \"default_expert\") {\n      storeDefDiff(toggleDiff, !getDefaultDiffX);\n      setDefaultDiffX(!getDefaultDiffX);\n    }\n  };\n\n  function updateShowList(toggleList) {\n    if (toggleList === \"list_loot\") {\n      storeShowList(toggleList, !getShowListLoot);\n      setShowListLoot(!getShowListLoot);\n    } else if (toggleList === \"list_item\") {\n      storeShowList(toggleList, !getShowListItem);\n      setShowListItem(!getShowListItem);\n    } else if (toggleList === \"list_junk\") {\n      storeShowList(toggleList, !getShowListJunk);\n      setShowListJunk(!getShowListJunk);\n    } else if (toggleList === \"list_secret\") {\n      storeShowList(toggleList, !getShowListSec);\n      setShowListSec(!getShowListSec);\n    }\n  };\n\n  function updateSpoiler(newSecSpoil) {\n    storeSpoiler(newSecSpoil);\n    setSecSpoiler(newSecSpoil);\n  };\n\n  // Send data to device storage.\n  const storeTheme = async (newTheme) => {\n    try {\n      // Convert setting's state to string.\n      //const jsonSetting = JSON.stringify(newTheme);\n      await AsyncStorage.setItem(`@setting_theme`, newTheme);\n      //alert(`Saved setting_theme as ${newTheme}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  const storeGame = async (newDefGame) => {\n    try {\n      // Convert setting's state to string.\n      //const jsonSetting = JSON.stringify(newDefGame);\n      await AsyncStorage.setItem(`@setting_game`, newDefGame);\n      //alert(`Saved setting_game as ${newDefGame}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  const storeDefDiff = async (toggleDiff, newDefDiff) => {\n    try {\n      // Convert setting's state to string.\n      const jsonSetting = JSON.stringify(newDefDiff);\n      await AsyncStorage.setItem(`@setting_${toggleDiff}`, jsonSetting);\n      //alert(`Saved setting_${toggleDiff} as ${jsonSetting}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  const storeShowList = async (toggleList, newShowList) => {\n    try {\n      // Convert setting's state to string.\n      const jsonSetting = JSON.stringify(newShowList);\n      await AsyncStorage.setItem(`@setting_${toggleList}`, jsonSetting);\n      //alert(`Saved setting_${toggleList} as ${jsonSetting}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  const storeSpoiler = async (newSecSpoil) => {\n    try {\n      // Convert setting's state to string.\n      //const jsonSetting = JSON.stringify(newSecSpoil);\n      await AsyncStorage.setItem(`@setting_spoiler`, newSecSpoil);\n      //alert(`Saved setting_spoiler as ${newSecSpoil}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <Text style={{color: colors.text}}>\n        Settings Screen\n      </Text>\n      <Text style={{color: colors.text}}>\n        WIP\n      </Text>\n\n      <Lists.SectionHeader headerName=\"Theme\"/>\n      <View style={styles.settingRow}>\n        {/* Theme setting: system default. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"default\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"default\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"default\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"default\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getCurrentTheme === \"default\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Default`}\n          </Text>\n        </TouchableOpacity>\n        {/* Theme setting: light. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"light\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"light\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"light\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"light\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getCurrentTheme === \"light\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Light`}\n          </Text>\n        </TouchableOpacity>\n        {/* Theme setting: dark. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"dark\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"dark\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"dark\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"dark\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getCurrentTheme === \"dark\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Dark`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n{/*      <View style={styles.settingRow}>\n        {/* Default game setting: Thief 1. */}\n{/*        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getDefaultGame !== \"TDP\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the default game screen.\n          onPress={() => updateGame(\"TDP\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n{/*          <Ionicons\n            name={getDefaultGame === \"TDP\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getDefaultGame === \"TDP\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getDefaultGame === \"TDP\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Thief 1`}\n          </Text>\n        </TouchableOpacity>\n        {/* Default game setting: Thief 2. */}\n{/*        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getDefaultGame !== \"TMA\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the default game screen.\n          onPress={() => updateGame(\"TMA\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n{/*          <Ionicons\n            name={getDefaultGame === \"TMA\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getDefaultGame === \"TMA\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getDefaultGame === \"TMA\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Thief 2`}\n          </Text>\n        </TouchableOpacity>\n        {/* Default game setting: Thief FMs. */}\n{/*        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getDefaultGame !== \"FMs\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the default game screen.\n          onPress={() => updateGame(\"FMs\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n{/*          <Ionicons\n            name={getDefaultGame === \"FMs\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getDefaultGame === \"FMs\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getDefaultGame === \"FMs\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Thief FMs`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n*/}\n      <Lists.SectionHeader headerName=\"Default Difficulty Filters\"/>\n      <View style={styles.settingRow}>\n        {/* DefDiff setting: normal difficulty. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getDefaultDiffN !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether this difficulty is on by default.\n          onPress={() => updateDefDiff(\"default_normal\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getDefaultDiffN === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getDefaultDiffN === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: colors.locN}\n          ]}>\n            {` Normal`}\n          </Text>\n        </TouchableOpacity>\n        {/* DefDiff setting: hard difficulty. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getDefaultDiffH !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether difficulty is on by default.\n          onPress={() => updateDefDiff(\"default_hard\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getDefaultDiffH === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getDefaultDiffH === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: colors.locH}\n          ]}>\n            {` Hard`}\n          </Text>\n        </TouchableOpacity>\n        {/* DefDiff setting: expert difficulty. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getDefaultDiffX !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether difficulty is on by default.\n          onPress={() => updateDefDiff(\"default_expert\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getDefaultDiffX === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getDefaultDiffX === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: colors.locX}\n          ]}>\n            {` Expert`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <Lists.SectionHeader headerName=\"Lootlist Sections\"/>\n      <View style={styles.settingRow}>\n        {/* ShowList setting: loot section. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getShowListLoot !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether this list section is shown.\n          onPress={() => updateShowList(\"list_loot\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getShowListLoot === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getShowListLoot === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getShowListLoot === true\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Loot`}\n          </Text>\n        </TouchableOpacity>\n        {/* ShowList setting: items section. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getShowListItem !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether this list section is shown.\n          onPress={() => updateShowList(\"list_item\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getShowListItem === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getShowListItem === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getShowListItem === true\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Items`}\n          </Text>\n        </TouchableOpacity>\n        {/* ShowList setting: junk section. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getShowListJunk !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether this list section is shown.\n          onPress={() => updateShowList(\"list_junk\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getShowListJunk === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getShowListJunk === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getShowListJunk === true\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Junk`}\n          </Text>\n        </TouchableOpacity>\n        {/* ShowList setting: secrets section. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getShowListSec !== true &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Toggle whether this list section is shown.\n          onPress={() => updateShowList(\"list_secret\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getShowListSec === true\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getShowListSec === true\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getShowListSec === true\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Secrets`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <Lists.SectionHeader headerName=\"Secret Spoiler Cover\"/>\n      <View style={styles.settingRow}>\n        {/* Spoiler setting: no spoiler cover. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getSecSpoiler !== \"none\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the spoiler cover being used.\n          onPress={() => updateSpoiler(\"none\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getSecSpoiler === \"none\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getSecSpoiler === \"none\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getSecSpoiler === \"none\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` None`}\n          </Text>\n        </TouchableOpacity>\n        {/* Spoiler setting: hide precise location. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getSecSpoiler !== \"partial\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the spoiler cover being used.\n          onPress={() => updateSpoiler(\"partial\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getSecSpoiler === \"partial\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getSecSpoiler === \"partial\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getSecSpoiler === \"partial\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Hide Location`}\n          </Text>\n        </TouchableOpacity>\n        {/* Spolier setting: hide entire location. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getSecSpoiler !== \"all\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the spoiler cover being used.\n          onPress={() => updateSpoiler(\"all\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getSecSpoiler === \"all\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getSecSpoiler === \"all\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={[\n            styles.settingButtonText,\n            {color: getSecSpoiler === \"all\"\n              ? colors.text : colors.textInvert}\n          ]}>\n            {` Hide All`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n    </View>\n  );\n}\n\n\n/* **************** */\n/*   ABOUT SCREEN   */\n/* **************** */\n// Screen for viewing changelog and credits.\n// Contained in drawer navigator to separate from other screens.\nfunction AboutScreen() {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        alignItems: 'center',\n      }}>\n      <Text style={[styles.creditText, {color: colors.text}]}>\n        App created by\n      </Text>\n      <Text style={[\n        styles.creditText, styles.locCount, {color: colors.text}\n      ]}>\n        Kevin Kolpack (Grandmauden)\n      </Text>\n\n      <View style={[styles.credit, styles.creditCenter]}>\n        <Text style={[styles.creditText, {color: colors.text}]}>\n          This app is not affiliated with and is not supported by\n        </Text>\n        <Text style={[styles.creditText, {color: colors.text}]}>\n          Looking Glass Studios, Ion Storm - Austin, Eidos Montréal,\n        </Text>\n        <Text style={[styles.creditText, {color: colors.text}]}>\n          Eidos Interactive, Square Enix, or Embracer Group.\n        </Text>\n      </View>\n\n      {/* API section */}\n      <Lists.SectionHeader headerName=\"APIs Used\"/>\n      <View style={styles.credit}>\n        {/* Map out each entry in API array. */}\n        {credits.api.map((apiKey, apiIndex) => (\n          <View\n            key={`api_${apiIndex}`}\n            style={styles.creditCenter}\n          >\n            <Text style={[\n              styles.creditText, styles.locCount, {color: colors.text}\n            ]}>\n              {`${apiKey.name}:`}\n            </Text>\n            <Text\n              style={[styles.url, {color: colors.url}]}\n              onPress={() => Linking.openURL(apiKey.link)}\n            >\n              {`${apiKey.link}`}\n            </Text>\n          </View>\n        ))}\n      </View>\n\n      {/* Special Thanks section */}\n      <Lists.SectionHeader headerName=\"Special Thanks\"/>\n      <View style={[styles.credit, styles.creditCenter]}>\n        {/* Map out each entry in special thanks array. */}\n        {credits.thanks.map((thankKey, thankIndex) => (\n          <View key={`thank_${thankIndex}`}>\n            <Text style={[styles.creditText, {color: colors.text}]}>\n              <Text style={styles.locCount}>\n                {`${thankKey.name}: `}\n              </Text>\n              {`${thankKey.reason}`}\n            </Text>\n          </View>\n        ))}\n      </View>\n\n      {/* Changelog section */}\n      <Lists.SectionHeader headerName=\"Changelog\"/>\n      <View>\n        {/* Map out each entry in changelog array. */}\n        {credits.changelog.map((logKey, logIndex) => (\n          <View key={`log_${logIndex}`}>\n            <View style={[styles.changelog, styles.creditCenter]}>\n              <Text style={[\n                styles.creditText, styles.locCount, {color: colors.text}\n              ]}>\n                {`${logKey.version}`}\n              </Text>\n              <Text style={[styles.creditText, {color: colors.text}]}>\n                {`${logKey.date}`}\n              </Text>\n            </View>\n            <View>\n              {logKey.changes.map((changeKey, changeIndex) => (\n                <View key={`change_${changeIndex}`}>\n                  <Text style={[styles.creditText, {color: colors.text}]}>\n                    {`• ${changeKey}`}\n                  </Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.creditCenter}>\n              <Text style={[styles.changeLine, {color: colors.text}]}>\n                {(Platform.OS === 'web')\n                  ? '                                                  '\n                  : '                                        '\n                }\n              </Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*    MAP SCREEN    */\n/* **************** */\n// Screen for viewing interactive map of The City.\n// Contained in drawer navigator to separate from other screens.\nfunction MapScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <Text>Map Screen</Text>\n      <Text>WIP</Text>\n    </View>\n  );\n}\n\n\n/* **************** */\n/*  MISSION SCREEN  */\n/* **************** */\n// Screen with nested tab navigator.\n// Contained in drawer navigator to separate from other screens.\n// Tabs won't appear in other drawer screens.\nfunction MissionScreen() {\n\n  // Fetch global setting states from context.\n  const {getDefaultGame, setDefaultGame} =\n    React.useContext(SettingContext);\n\n  return (\n    <Tab.Navigator\n      screenOptions={{headerShown: false}}\n      initialRouteName={\"TDP\"}\n      //initialRouteName={getDefaultGame}\n    >\n      <Tab.Screen\n        name=\"TDP\"\n        component={Thief1Screen}\n      />\n      <Tab.Screen\n        name=\"TMA\"\n        component={Thief2Screen}\n      />\n      <Tab.Screen\n        name=\"FMs\"\n        component={ThiefFMScreen}\n      />\n    </Tab.Navigator>\n  );\n}\n\n\n/* **************** */\n/*   START SCREEN   */\n/* **************** */\n// Screen with nested drawer navigator.\n// Contained in stack navigator to allow going back in stack.\n// Drawer won't appear in other stack screens.\n// Default screen when app is opened for the first time.\nfunction StartScreen() {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen\n        name=\"Lootlists\"\n        component={MissionScreen}\n        //options={{headerShown: false}}\n      />\n      {/*<Drawer.Screen\n        name=\"City Map\"\n        component={MapScreen}\n        //options={{headerShown: false}}\n      />*/}\n      <Drawer.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        //options={{headerShown: false}}\n      />\n      <Drawer.Screen\n        name=\"About\"\n        component={AboutScreen}\n        options={{title: \"About This App\"}}\n      />\n    </Drawer.Navigator>\n  );\n}\n\n\n/* **************** */\n/*  LOOTLIST SCREEN */\n/* **************** */\n// Screen for displaying mission lootlist.\n// Screen contents change depending on selected mission.\n// Contained in stack navigator to allow going back in stack.\n// 'route' allows screen to receive parameters.\nfunction LootlistScreen({ route }) {\n  const {missionTitle, carryingLoot} = route.params;\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <View style={{height: '100%'}}>\n      {/*<Text>missionTitle: {missionTitle}</Text>*/}\n      <Lists.LootlistView\n        missionName={missionTitle}\n        carriedLoot={carryingLoot}\n      />\n    </View>\n  );\n}\n\n\n/* **************** */\n/* NOT FOUND SCREEN */\n/* **************** */\n// Screen for displaying an Error 404 message.\n// Used in web browser in case of incorrect URL.\n// Contained in stack navigator to allow going back in stack.\n// 'route' allows screen to receive parameters.\nfunction NotFoundScreen({ route }) {\n  return (\n    <View>\n      <Text>ERROR 404!</Text>\n      {route.path &&\n        <Text>{`Nothing was found at \"${route.path}\"!`}</Text>\n      }\n      {!route.path &&\n        <Text>Nothing was found here!</Text>\n      }\n    </View>\n  );\n}\n\n\n// The root of the app.\nexport default function App() {\n  // Configure URL paths to match navigation routes here.\n  const config = {\n    screens: {\n      Start: {\n        screens: {\n          Lootlists: {\n            screens: {\n              TDP: 'select/thief_1',\n              TMA: 'select/thief_2',\n              FMs: 'select/thief_fm',\n            },\n          },\n          Settings: 'settings',\n          About: 'about',\n        },\n      },\n      Lootlist: 'list/:missionTitle',\n      NotFound: '*',\n    },\n  };\n\n  // Parse incoming deep links here.\n  const linking = {\n    // Prefixes allow for different schemes,\n    // whether the link comes from the client app or a standalone app.\n    // If using universal links, add domain to the prefixes list:\n    // prefixes: [Linking.createURL('/'), 'https://app.example.com'],\n    prefixes: [\n      Linking.createURL('/')\n    ],\n    config,\n  };\n\n  // Get the system's default color scheme.\n  const scheme = useColorScheme();\n\n  // Load custom fonts here.\n  const [fontsLoaded] = useFonts({\n    //'Batang': require('./assets/fonts/Batang.ttf'),\n    //'BlueHighway': require('./assets/fonts/bluehighway.ttf'),\n    'Thief': require('./assets/fonts/THIEF.ttf'),\n  });\n\n  // CurrentTheme: tracks the currently selected color theme.\n  const [getCurrentTheme, setCurrentTheme] = React.useState('default');\n\n  // DefaultGame: tracks which select screen to show upon app load.\n  const [getDefaultGame, setDefaultGame] = React.useState('');\n\n  // DefaultDiff: tracks which difficulty filters are on by default.\n  const [getDefaultDiffN, setDefaultDiffN] = React.useState(true);\n  const [getDefaultDiffH, setDefaultDiffH] = React.useState(true);\n  const [getDefaultDiffX, setDefaultDiffX] = React.useState(true);\n\n  // ShowList: tracks which list sections are currently selected.\n  const [getShowListLoot, setShowListLoot] = React.useState(true);\n  const [getShowListItem, setShowListItem] = React.useState(true);\n  const [getShowListJunk, setShowListJunk] = React.useState(true);\n  const [getShowListSec, setShowListSec] = React.useState(true);\n\n  // SecSpoiler: tracks how much of secret locations to hide.\n  const [getSecSpoiler, setSecSpoiler] = React.useState('none');\n\n  // Read settings from device storage.\n  const readAllSettings = async () => {\n    try {\n      // Use 'multiGet' to read multiple values at once.\n      //const jsonValues = await AsyncStorage.multiGet([`@setting_${id}`]);\n      const jsonValues = await AsyncStorage.multiGet(\n        [`@setting_theme`, `@setting_game`,\n        `@setting_default_normal`,\n        `@setting_default_hard`, `@setting_default_expert`,\n        `@setting_list_loot`, `@setting_list_item`,\n        `@setting_list_junk`, `@setting_list_secret`,\n        `@setting_spoiler`]\n      );\n      // [0] is 'setting_theme'\n      if (jsonValues[0][1] !== null) {\n        setCurrentTheme(jsonValues[0][1]);\n      }\n      // [1] is 'setting_game'\n      if (jsonValues[1][1] !== null) {\n        setDefaultGame(jsonValues[1][1]);\n        //alert(`Loaded ${getDefaultGame}`);\n      }\n      // [2] is 'setting_default_normal'\n      if (jsonValues[2][1] === \"false\") {\n        setDefaultDiffN(false);\n      } else {\n        setDefaultDiffN(true);\n      }\n      // [3] is 'setting_default_hard'\n      if (jsonValues[3][1] === \"false\") {\n        setDefaultDiffH(false);\n      } else {\n        setDefaultDiffH(true);\n      }\n      // [4] is 'setting_default_expert'\n      if (jsonValues[4][1] === \"false\") {\n        setDefaultDiffX(false);\n      } else {\n        setDefaultDiffX(true);\n      }\n      // [5] is 'setting_list_loot'\n      if (jsonValues[5][1] === \"false\") {\n        setShowListLoot(false);\n      } else {\n        setShowListLoot(true);\n      }\n      // [6] is 'setting_list_item'\n      if (jsonValues[6][1] === \"false\") {\n        setShowListItem(false);\n      } else {\n        setShowListItem(true);\n      }\n      // [7] is 'setting_list_junk'\n      if (jsonValues[7][1] === \"false\") {\n        setShowListJunk(false);\n      } else {\n        setShowListJunk(true);\n      }\n      // [8] is 'setting_list_secret'\n      if (jsonValues[8][1] === \"false\") {\n        setShowListSec(false);\n      } else {\n        setShowListSec(true);\n      }\n      // [9] is 'setting_spoiler'\n      if (jsonValues[9][1] !== null) {\n        setSecSpoiler(jsonValues[9][1]);\n      }\n      //alert(`Loaded settings as ${jsonValues}`);\n    } catch (e) {\n      // Error: Reading the data failed.\n      alert('Failed to read settings.');\n    }\n  };\n\n  React.useEffect(() => {\n    // When app renders, check its last saved settings.\n    readAllSettings();\n\n  }, []);\n\n  return (\n    // Wrap app root in providers to utilize context.\n    <SettingContext.Provider value={\n      {getCurrentTheme, setCurrentTheme,\n      getDefaultGame, setDefaultGame,\n      getDefaultDiffN, setDefaultDiffN,\n      getDefaultDiffH, setDefaultDiffH,\n      getDefaultDiffX, setDefaultDiffX,\n      getShowListLoot, setShowListLoot,\n      getShowListItem, setShowListItem,\n      getShowListJunk, setShowListJunk,\n      getShowListSec, setShowListSec,\n      getSecSpoiler, setSecSpoiler}\n    }>\n      {/* Wrap app root in 'NavigationContainer' to use screen navigation. */}\n      <NavigationContainer\n        linking={linking}\n        fallback={<Text>Loading...</Text>}\n        theme={getCurrentTheme === 'default' && scheme === 'dark'\n          ? MyDarkTheme\n          : getCurrentTheme === 'dark'\n            ? MyDarkTheme\n            : MyLightTheme}\n        //theme={scheme === 'dark' ? MyDarkTheme : DefaultTheme}\n        //theme={MyDarkTheme}\n      >\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Start\"\n            component={StartScreen}\n            options={{headerShown: false}}\n          />\n          <Stack.Screen\n            name=\"Lootlist\"\n            component={LootlistScreen}\n            options={{headerShown: (Platform.OS === 'web') ? false : true}}\n          />\n          <Stack.Screen\n            name=\"Not Found\"\n            component={NotFoundScreen}\n            //options={{headerShown: false}}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SettingContext.Provider>\n  );\n}\n\n\n// Define various styles here.\nconst styles = StyleSheet.create({\n  buttonPage: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonView: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignContent: 'space-around',\n    justifyContent: 'center',\n  },\n  buttonMission: {\n    backgroundColor: 'lightgray',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingTop: 2,\n    margin: (Platform.OS === 'web') ? 8 : 4,\n    //width: (Platform.OS === 'web') ? 280 : 190,\n    //height: (Platform.OS === 'web') ? 175 : 120,\n  },\n  buttonImage: {\n    //width: (Platform.OS === 'web') ? 270 : 180,\n    //height: (Platform.OS === 'web') ? 150 : 100,\n  },\n  buttonText: {\n    //fontSize: (Platform.OS === 'web') ? 15 : 11,\n    fontWeight: 'bold',\n  },\n  locText: {\n    //fontFamily: 'BlueHighway',\n    fontSize: 8,\n  },\n  locCount: {\n    fontWeight: 'bold',\n  },\n  locPick: {\n    fontStyle: 'italic',\n  },\n  locBox: {\n    textDecorationLine: 'underline',\n  },\n  locNoGet: {\n    textDecorationLine: 'line-through',\n  },\n  settingRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  settingButton: {\n    backgroundColor: 'lightgray',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginHorizontal: 5,\n    marginVertical: 5,\n    paddingHorizontal: 4,\n    paddingVertical: 2,\n    minWidth: 105,\n    minHeight: 27,\n  },\n  settingButtonFalse: {\n    backgroundColor: 'darkgray',\n  },\n  settingButtonText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  credit: {\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\n  },\n  creditCenter: {\n    alignItems: 'center',\n  },\n  creditText: {\n    fontSize: (Platform.OS === 'web') ? 14 : 12,\n  },\n  changelog: {\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\n    marginBottom: (Platform.OS === 'web') ? 8 : 6,\n  },\n  changeLine: {\n    textDecorationLine: 'underline',\n  },\n  url: {\n    fontSize: (Platform.OS === 'web') ? 14 : 11,\n    textDecorationLine: 'underline',\n    marginBottom: 4,\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [579], () => (__webpack_require__(46271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["FoundContext","createContext","CarryoverContext","FilterContext","SettingContext","iconGold","require","iconGems","iconGoods","bgDefaultLight","bgDefaultDark","bgEasyLight","bgEasyDark","bgMediumLight","bgMediumDark","bgHardLight","bgHardDark","bgFoundLight","bgFoundLightS","bgFoundLightT","bgFoundDark","bgFoundDarkS","bgFoundDarkT","LootlistEntry","props","_useWindowDimensions","useWindowDimensions","width","height","colors","useTheme","_React$useContext","React","getCarryLoot","setCarryLoot","_jsxs","View","style","styles","listEntry","children","nameEntry","backgroundColor","backMed","borderColor","border","values","nameEntryLoot","img","length","_jsx","Image","source","imgStyle","ImageSwitch","Text","entryText","color","text","name","subEntry","subEntryLoot","map","valueKey","index1","Platform","OS","locations","subEntryLPV_Web","subEntryLocsPerValue","subEntryValue","value","lootRow","imgLootIcon","lootText","carryValue","subEntryLoc","subEntryLocLoot","locKey","index2","FindMe","id","title","modeNames","areas","notes","findSimple","findArea","findNarrow","findExact","findObj","findCount","findCountRecipe","findCountBox","findCountMode","findCountActual","findRecipe","findBox","findPick","findSecret","findUnable","findNote","findLink","loadout","price","getLinkedFind","setLinkedFind","index3","carryover","_props$id","_props$title","_props$findCount","_props$findCountRecip","_props$findCountBox","_props$findCountMode","_props$findUnable","_props$setLinkedFind","_useWindowDimensions2","_React$useState","_React$useState2","_slicedToArray","getSimpleColor","setSimpleColor","_React$useState3","_React$useState4","getIsFound","setIsFound","_React$useContext2","accumLoot","accumPocket","_React$useContext3","setCarryFound","getCarryFound","_React$useContext4","getFilterDiffN","getFilterDiffH","setFilterDiffN","getFilterDiffX","setFilterDiffH","getFilterModeA","setFilterDiffX","getFilterModeB","setFilterModeA","getFilterModeC","setFilterModeB","getFilterLootGold","setFilterModeC","getFilterLootGems","setFilterLootGold","getFilterLootGoods","setFilterLootGems","getFilterOnlyObj","setFilterLootGoods","getFilterOnlyPick","setFilterOnlyObj","getFilterOnlySec","setFilterOnlyPick","getFilterArea","setFilterOnlySec","_React$useContext5","setFilterArea","getCurrentTheme","getSecSpoiler","setCurrentTheme","storeIsFound","setSecSpoiler","_ref","_asyncToGenerator","newToggle","jsonToggle","JSON","stringify","AsyncStorage","setItem","e","alert","_x","apply","arguments","storeFoundLoot","_ref2","addFoundLoot","jsonLoot","_x2","storeFoundPocket","_ref3","addFoundPocket","jsonPocket","_x3","readIsFound","_ref4","jsonValue","getItem","parseValue","parse","simpleColorSwitch","activateMe","newFound","toggleMe","current","foundDiffKey","i","foundValueKey","j","newValue","foundLinkKey","k","allKey","l","pocketDiffKey","p","pocketLinkKey","q","Math","min","_toConsumableArray","type","toggle","toggleSwitch","linkKey","linkIndex","_Fragment","max","includes","TouchableOpacity","find","backLight","onPress","ImageBackground","resizeMode","findBackground","FindMeArea","FindMePrecise","locText","fontSize","locSecret","locNoGet","_useWindowDimensions3","_React$useState5","_React$useState6","getDiffExclude","setDiffExclude","fontWeight","locObj","locN","locH","locX","secret","FindMeCount","_useWindowDimensions4","locBox","locPick","locCount","delimiter","icon","_props$modeNames2","_props$findCount2","_props$findCountMode2","_props$findCountActua2","_props$findBox2","_props$findPick2","_props$carryover2","_React$useState7","_React$useState8","getDiffChange","setDiffChange","_React$useState9","_React$useState10","getModeChange","setModeChange","_React$useState11","_React$useState12","getActlChange","setActlChange","_React$useState13","_React$useState14","getDiffStack","setDiffStack","_React$useState15","_React$useState16","getModeStack","setModeStack","_React$useState17","_React$useState18","getActlStack","setActlStack","SecretEntry","_useWindowDimensions5","_React$useState19","_React$useState20","getSecFound","setSecFound","_React$useState21","_React$useState22","getShowModal","setShowModal","_React$useContext6","_React$useContext7","storeSecFound","_ref5","newSecFound","jsonSecret","_x4","readSecFound","_ref6","parseSecret","triggerMe","triggerSwitch","secretTrigList","triggers","trigKey","trigIndex","secretTrig","secretTrigID","secretTrigOne","secretTrigTop","secretTrigMid","secretTrigBot","secretNum","number","TouchableWithoutFeedback","imgSecret","Modal","animationType","transparent","visible","onRequestClose","modalView","activeOpacity","onPressOut","secretModal","imgSecretBig","secretLoc","findDiff","secretMethod","secretText","method","secretRewardList","rewards","rewKey","rewIndex","secretRewardFlex","secretReward","rewardRoute","secretRewardText","secretRewardOther","routeKey","routeIndex","rewardLoot","rewardItem","rewardOther","_React$useState23","_React$useState24","getImageIndex","setImageIndex","imageID","setInterval","clearInterval","TotalsView","_useWindowDimensions6","_React$useContext8","_React$useContext9","_React$useContext10","_React$useState25","_React$useState26","getFoundLoot","setFoundLoot","_React$useState27","_React$useState28","getFoundPocket","setFoundPocket","_React$useState29","_React$useState30","getShareNH","setShareNH","_React$useState31","_React$useState32","getShareHX","setShareHX","_React$useState33","_React$useState34","getShareNX","setShareNX","_React$useState35","_React$useState36","getGoalNH","setGoalNH","_React$useState37","_React$useState38","getGoalHX","setGoalHX","_React$useState39","_React$useState40","getGoalNX","setGoalNX","_React$useState41","_React$useState42","getPocketNH","setPocketNH","_React$useState43","_React$useState44","getPocketHX","setPocketHX","_React$useState45","_React$useState46","getPocketNX","setPocketNX","totals","lootChanges","goal1","total","gold","gems","goods","goal2","pocketCount","pocketChanges","carriedLoot","toString","updateMe","totalBorder","ScrollView","flexGrow","contentContainerStyle","totalView","carryLoot","carryView","carryText","TextInput","carryInput","inputBorder","inputMode","maxLength","onChangeText","over","replace","onlyNumeric","defaultValue","spacedView","tableHeader","tableHeadBox","sizeRowStart","backDark","tableHeadText","outerKey","a","tableRow","tableRowStart","tableRowText","diffNames","innerKey","b","tableRowBox","totalBackground","parseInt","found","info","goalKey","g","GoalView","goalLoot","totalLoot","foundLoot","pocketRowBox","pickKey","c","_useWindowDimensions7","_React$useContext11","emptyRowBox","round","FilterView","_useWindowDimensions8","_React$useState47","_React$useState48","_React$useContext12","_React$useContext13","_React$useContext14","checkSize","checkColorOn","checkColorOff","removeStored","_ref7","invKeys","push","multiRemove","removeItem","allButton","waitModal","filters","diffChanges","filterRow","filterButton","minWidth","Ionicons","size","filterTextMode","textInvert","lootCount","goldCount","imgLootIconBig","gemsCount","goodsCount","markObj","secretCount","MultipleSelectList","boxStyles","filterAreaBox","inputArea","checkBoxStyles","inputCheck","inputStyles","labelStyles","dropdownStyles","filterAreaDropdown","dropdownItemStyles","filterAreaListItem","dropdownTextStyles","filterAreaListText","badgeStyles","filterAreaBadge","badgeTextStyles","filterAreaBadgeText","data","save","setSelected","area","placeholder","label","StyleSheet","create","flexDirection","marginHorizontal","alignItems","borderWidth","borderTopLeftRadius","borderBottomLeftRadius","flex","minHeight","justifyContent","paddingLeft","flexWrap","alignContent","padding","textAlign","marginLeft","fontStyle","textDecorationLine","paddingHorizontal","paddingBottom","paddingVertical","paddingTop","borderRadius","borderTopWidth","marginBottom","margin","paddingRight","marginVertical","filterTextFalse","marginTop","myList","myScreens","arrowLight","arrowDark","myImages","mySecrets","LootlistView","missionName","navigation","useNavigation","getDefaultDiffN","getDefaultDiffH","setDefaultDiffN","getDefaultDiffX","setDefaultDiffH","getShowListLoot","setDefaultDiffX","getShowListItem","setShowListLoot","getShowListJunk","setShowListItem","getShowListSec","setShowListJunk","setShowListSec","loot","secrets","readFoundLoot","jsonArray","parseArray","readFoundPocket","Provider","listScreen","titleHeader","bigTitle","author","titleHeaderBy","authKey","authIndex","titleHeaderName","contest","screens","imgHeaderView","imgHeader","firstRelease","titleHeaderDate","latestVersion","goToPrev","goToNext","goToView","goPrevBlank","goToArrow","missionTitle","arrowLeft","goToButton","goPrevButton","goPrevText","goNextButton","navigate","goBackText","goNextBlank","carryingLoot","goNextText","arrowRight","Loot","SectionHeader","headerName","noteView","noteKey","noteIndex","show","noteText","noteSymbol","desc","listHeader","listHeaderText","listView","lootKey","lootIndex","imgKey","imgIndex","items","itemCatKey","itemCatIndex","category","catItems","itemKey","itemIndex","junk","junkCatKey","junkCatIndex","catJunk","junkKey","junkIndex","listSecretView","secKey","secIndex","listTitleView","listTitleText","listTitleLine","listItemView","fontFamily","PixelRatio","getFontScale","columnGap","borderBottomWidth","borderRightWidth","borderTopRightRadius","borderBottomRightRadius","borderLeftWidth","marginRight","transform","rotateY","credits","MyLightTheme","dark","_objectSpread","DefaultTheme","findE","findM","findH","url","MyDarkTheme","DarkTheme","primary","background","card","GoToMission","missionID","buttonMission","buttonImage","buttonText","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","Drawer","createDrawerNavigator","Thief1Screen","buttonPage","buttonView","Thief2Screen","ThiefFMScreen","SettingsScreen","getDefaultGame","setDefaultGame","updateTheme","newTheme","storeTheme","updateDefDiff","toggleDiff","storeDefDiff","updateShowList","toggleList","storeShowList","updateSpoiler","newSecSpoil","storeSpoiler","newDefGame","newDefDiff","jsonSetting","_ref8","newShowList","_x5","_x6","_ref9","_x7","Lists","settingRow","settingButton","settingButtonText","AboutScreen","creditText","credit","creditCenter","api","apiKey","apiIndex","Linking","openURL","link","thanks","thankKey","thankIndex","reason","changelog","logKey","logIndex","version","date","changes","changeKey","changeIndex","changeLine","MissionScreen","Navigator","screenOptions","headerShown","initialRouteName","Screen","component","StartScreen","options","LootlistScreen","_ref10","_route$params","route","params","NotFoundScreen","_ref11","path","App","linking","prefixes","createURL","config","Start","Lootlists","TDP","TMA","FMs","Settings","About","Lootlist","NotFound","scheme","useColorScheme","_useFonts","useFonts","readAllSettings","_ref12","jsonValues","multiGet","NavigationContainer","fallback","theme","settingButtonFalse","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}