{"version":3,"file":"static/js/main.bed4487c.js","mappings":"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","sources":["Context.js","Loot.js","Lists.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {createContext} from 'react';\r\n\r\n// Create contexts so components can pass data to any children.\r\nexport const FoundContext = createContext();\r\nexport const CarryoverContext = createContext();\r\nexport const FilterContext = createContext();\r\nexport const SettingContext = createContext();\r\n","import * as React from 'react';\r\nimport {\r\n  //NavigationContainer,\r\n  //useNavigation,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\n//import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {\r\n  StyleSheet,\r\n  Platform,\r\n  Image,\r\n  Text, TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View, //ScrollView,\r\n  Modal,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MultipleSelectList } from 'react-native-dropdown-select-list';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\n//import { useFonts } from 'expo-font';\r\n\r\n// Import contexts here.\r\nimport {\r\n  FoundContext, CarryoverContext, FilterContext, SettingContext\r\n} from \"./Context\";\r\n\r\n// Add icon images here.\r\nconst iconGold = require('./assets/icon_gold.png');\r\nconst iconGems = require('./assets/icon_gems.png');\r\nconst iconGoods = require('./assets/icon_goods.png');\r\n\r\n\r\n/* **************** */\r\n/*  LOOTLIST ENTRY  */\r\n/* **************** */\r\n// Custom view component of a unique item and all its locations.\r\nexport function LootlistEntry(props) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch CarryLoot state from context.\r\n  const {getCarryLoot, setCarryLoot} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  /*function passingTest() {\r\n    alert('Test success.');\r\n  };*/\r\n\r\n  return (\r\n    <View style={styles.listEntry}>\r\n      <View style={[\r\n        styles.nameEntry,\r\n        {backgroundColor: colors.backMed,\r\n        borderColor: colors.border},\r\n        props.values && styles.nameEntryLoot\r\n      ]}>\r\n        {/* Item's image goes here. */}\r\n        {props.img.length === 1 &&\r\n          <Image\r\n            source={props.img[0]}\r\n            style={styles.imgStyle}\r\n          />\r\n        }\r\n        {/* If the item has several varieties,\r\n            switch between the images every few seconds. */}\r\n        {props.img.length > 1 &&\r\n          <ImageSwitch\r\n            img={props.img}\r\n          />\r\n        }\r\n        <Text style={[styles.entryText, {color: colors.text}]}>\r\n          {props.name}\r\n        </Text>\r\n      </View>\r\n      <View style={[\r\n        styles.subEntry, props.values && styles.subEntryLoot\r\n      ]}>\r\n        {/* For loot,\r\n            map out each entry in loot value sub-array. */}\r\n        {props.values && props.values.map((valueKey, index1) => (\r\n          <View\r\n            key={valueKey.id}\r\n            style={[\r\n              (Platform.OS === 'web' && valueKey.locations.length > 3)\r\n              ? styles.subEntryLPV_Web\r\n              : styles.subEntryLocsPerValue\r\n            ]}\r\n          >\r\n            <View style={[\r\n              styles.subEntryValue,\r\n              {backgroundColor: colors.backMed,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              {/* Loot item's value goes here. */}\r\n              {valueKey.value && valueKey.value[0] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[0]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.value && valueKey.value[1] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[1]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.value && valueKey.value[2] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[2]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {/* Variable values for carryover loot. */}\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[0] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[1] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[2] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {/* Edge case for loot with value of 0. */}\r\n              {valueKey.value && !valueKey.carryValue &&\r\n                valueKey.value[0] === 0 &&\r\n                valueKey.value[1] === 0 &&\r\n                valueKey.value[2] === 0 &&\r\n                <Text style={[styles.lootText, {color: colors.text}]}>\r\n                  0\r\n                </Text>\r\n              }\r\n            </View>\r\n            <View style={[styles.subEntryLoc, styles.subEntryLocLoot]}>\r\n              {/* Map out each entry in loot location sub-sub-array. */}\r\n              {valueKey.locations.map((locKey, index2) => (\r\n                <FindMe\r\n                  key={locKey.id}\r\n                  id={locKey.id}\r\n                  title={props.title}\r\n                  modeNames={props.modeNames}\r\n                  areas={props.areas}\r\n                  notes={props.notes}\r\n                  value={valueKey.value}\r\n                  carryValue={valueKey.carryValue}\r\n                  findSimple={locKey.findSimple}\r\n                  findArea={locKey.findArea}\r\n                  findNarrow={locKey.findNarrow}\r\n                  findExact={locKey.findExact}\r\n                  findObj={locKey.findObj}\r\n                  findCount={locKey.findCount}\r\n                  findCountRecipe={locKey.findCountRecipe}\r\n                  findCountBox={locKey.findCountBox}\r\n                  findCountMode={locKey.findCountMode}\r\n                  findCountActual={locKey.findCountActual}\r\n                  findRecipe={locKey.findRecipe}\r\n                  findBox={locKey.findBox}\r\n                  findPick={locKey.findPick}\r\n                  findSecret={locKey.findSecret}\r\n                  findUnable={locKey.findUnable}\r\n                  findNote={locKey.findNote}\r\n                  findLink={locKey.findLink}\r\n                  loadout={locKey.loadout}\r\n                  price={locKey.price}\r\n                  getLinkedFind={props.getLinkedFind}\r\n                  setLinkedFind={props.setLinkedFind}\r\n                  //passingTest={() => passingTest()}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ))}\r\n        {/* For items and junk,\r\n            map out each entry in location sub-array. */}\r\n        {props.locations &&\r\n          <View style={styles.subEntryLoc}>\r\n            {props.locations.map((locKey, index3) => (\r\n              <FindMe\r\n                key={locKey.id}\r\n                id={locKey.id}\r\n                title={props.title}\r\n                modeNames={props.modeNames}\r\n                areas={props.areas}\r\n                notes={props.notes}\r\n                findSimple={locKey.findSimple}\r\n                findArea={locKey.findArea}\r\n                findNarrow={locKey.findNarrow}\r\n                findExact={locKey.findExact}\r\n                findObj={locKey.findObj}\r\n                findCount={locKey.findCount}\r\n                findCountRecipe={locKey.findCountRecipe}\r\n                findCountBox={locKey.findCountBox}\r\n                findCountMode={locKey.findCountMode}\r\n                findCountActual={locKey.findCountActual}\r\n                findRecipe={locKey.findRecipe}\r\n                findBox={locKey.findBox}\r\n                findPick={locKey.findPick}\r\n                findSecret={locKey.findSecret}\r\n                findUnable={locKey.findUnable}\r\n                findNote={locKey.findNote}\r\n                findLink={locKey.findLink}\r\n                loadout={locKey.loadout}\r\n                price={locKey.price}\r\n                getLinkedFind={props.getLinkedFind}\r\n                setLinkedFind={props.setLinkedFind}\r\n              />\r\n            ))}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*      FIND ME     */\r\n/* **************** */\r\n// Custom view component of a precise location of a given item.\r\nfunction FindMe(props) {\r\n  // Use defaults to avoid errors if some props are undefined.\r\n  const {\r\n    id = '',\r\n    title = '',\r\n    modeNames = [{'name': '', 'icon': ''}],\r\n    areas = [{'key': '1', 'value': ''}],\r\n    notes = [{'delimiter': '', 'icon': ''}],\r\n    value = [0,0,0],\r\n    carryValue = [0,0,0],\r\n    findSimple = '',\r\n    findArea = 0,\r\n    findNarrow = '',\r\n    findExact = '',\r\n    findObj = false,\r\n    findCount = [1,1,1],\r\n    findCountRecipe = [1,1,1],\r\n    findCountBox = [1,1,1],\r\n    findCountMode = [-1,-1,-1],\r\n    findCountActual = [-1,-1,-1],\r\n    findRecipe = ' ',\r\n    findBox = false,\r\n    findPick = false,\r\n    findSecret = false,\r\n    findUnable = false,\r\n    findNote = 0,\r\n    findLink = [],\r\n    loadout = '',\r\n    price = 0,\r\n    getLinkedFind = getLinkedFind,\r\n    setLinkedFind = setLinkedFind,\r\n    //passingTest = passingTest,\r\n  } = props;\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // IsFound: tracks if this item is selected as 'found'.\r\n  // Used to change location's background color & update loot totals.\r\n  const [getIsFound, setIsFound] = React.useState(false);\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} =\r\n    React.useContext(FoundContext);\r\n\r\n  // Fetch CarryLoot and CarryFound states from context.\r\n  const {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  // Fetch FilterDiff, FilterMode, FilterLoot, and FilterArea states\r\n  // from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX,\r\n        getFilterModeA, setFilterModeA,\r\n        getFilterModeB, setFilterModeB,\r\n        getFilterModeC, setFilterModeC,\r\n        getFilterLootGold, setFilterLootGold,\r\n        getFilterLootGems, setFilterLootGems,\r\n        getFilterLootGoods, setFilterLootGoods,\r\n        getFilterArea, setFilterArea} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Save & read item's 'found'/'not found' data in device storage.\r\n  // This allows user's selections to persist,\r\n  // whether they navigate to another screen or close the app.\r\n  // This is a promise-based method, using the 'async await' syntax\r\n  // with a 'try-catch' block.\r\n  // Use the item's ID to ensure each data has a unique identifier.\r\n\r\n  // Send data to device storage.\r\n  const storeIsFound = async (newToggle) => {\r\n    try {\r\n      // Convert item's state from boolean to string.\r\n      const jsonToggle = JSON.stringify(newToggle);\r\n      await AsyncStorage.setItem(`@inventory_${id}`, jsonToggle);\r\n      //alert(`Saved inventory_${props.id} as ${jsonToggle}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save value.');\r\n    }\r\n  };\r\n\r\n  const storeFoundLoot = async (addFoundLoot) => {\r\n    try {\r\n      // Convert item's state from array to string.\r\n      const jsonLoot = JSON.stringify(addFoundLoot);\r\n      await AsyncStorage.setItem(`@myloot_${title}`, jsonLoot);\r\n      //alert(`Saved myloot_${myList[missionName].title} as ${jsonLoot}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save array.');\r\n    }\r\n  };\r\n\r\n  const storeFoundPocket = async (addFoundPocket) => {\r\n    try {\r\n      // Convert item's state from array to string.\r\n      const jsonPocket = JSON.stringify(addFoundPocket);\r\n      await AsyncStorage.setItem(`@mypocket_${title}`, jsonPocket);\r\n      //alert(`Saved mypocket_${myList[missionName].title} as ${jsonPocket}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save array.');\r\n    }\r\n  };\r\n\r\n  // Read data from device storage.\r\n  const readIsFound = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(`@inventory_${id}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseValue = JSON.parse(jsonValue);\r\n      if (parseValue !== null) {\r\n        setIsFound(parseValue);\r\n        //alert(`Loaded inventory_${id} as ${jsonValue}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read value.');\r\n    }\r\n  };\r\n\r\n  function activateMe() {\r\n    let newFound = toggleMe(\"opposite\");\r\n\r\n    // Increment found loot per difficulty.\r\n    const addFoundLoot = accumLoot.current.map((foundDiffKey, i) => {\r\n      return foundDiffKey.map((foundValueKey, j) => {\r\n        // Increment gold, gems, & goods.\r\n        if (j < 3 && props.value) {\r\n          // If newly selected, add...\r\n          if (newFound) {\r\n            // ...the value of this loot...\r\n            let newValue = foundValueKey += (\r\n              props.value[j] *\r\n              findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n            );\r\n            // ...and the value of any linked loot.\r\n            if (findLink) {\r\n              findLink.map((foundLinkKey, k) => {\r\n                return newValue += (\r\n                  foundLinkKey.value[j] * foundLinkKey.findCount[i]\r\n                );\r\n              });\r\n            }\r\n            return newValue;\r\n          // If newly deselected, subtract...\r\n          } else {\r\n            // ...the value of this loot...\r\n            let newValue = foundValueKey -= (\r\n              props.value[j] *\r\n              findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n            );\r\n            // ...and the value of any linked loot.\r\n            if (findLink) {\r\n              findLink.map((foundLinkKey, k) => {\r\n                return newValue -= (\r\n                  foundLinkKey.value[j] * foundLinkKey.findCount[i]\r\n                );\r\n              });\r\n            }\r\n            return newValue;\r\n          }\r\n        // Increment total loot.\r\n        } else if (j === 3 && props.value) {\r\n          // If newly selected, add...\r\n          if (newFound) {\r\n            // ...the value of this loot...\r\n            let newValue = foundValueKey += (\r\n              (props.value[0] + props.value[1] + props.value[2]) *\r\n              findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n            );\r\n            // ...and the value of any linked loot.\r\n            if (findLink) {\r\n              findLink.map((allKey, l) => {\r\n                return newValue += (\r\n                  (allKey.value[0] + allKey.value[1] + allKey.value[2]) *\r\n                  allKey.findCount[i]\r\n                );\r\n              });\r\n            }\r\n            return newValue;\r\n          // If newly deselected, subtract...\r\n          } else {\r\n            // ...the value of this loot...\r\n            let newValue = foundValueKey -= (\r\n              (props.value[0] + props.value[1] + props.value[2]) *\r\n              findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n            );\r\n            // ...and the value of any linked loot.\r\n            if (findLink) {\r\n              findLink.map((allKey, l) => {\r\n                return newValue -= (\r\n                  (allKey.value[0] + allKey.value[1] + allKey.value[2]) *\r\n                  allKey.findCount[i]\r\n                );\r\n              });\r\n            }\r\n            return newValue;\r\n          }\r\n        };\r\n      });\r\n    });\r\n    if (props.value && !props.carryValue) {\r\n      //setFoundLoot(addFoundLoot);\r\n      accumLoot.current = addFoundLoot;\r\n      storeFoundLoot(addFoundLoot);\r\n    }\r\n\r\n    // Increment found pickpockets per difficulty.\r\n    const addFoundPocket = accumPocket.current.map((pocketDiffKey, p) => {\r\n      // If newly selected, add...\r\n      if (newFound) {\r\n        // ...one pickpocket...\r\n        if (props.findCountBox && props.findCountBox[p] > 0) {\r\n          pocketDiffKey += 1;\r\n        }\r\n        // ...and another for every linked pickpocket.\r\n        if (props.findLink && props.findLink.length > 0) {\r\n          props.findLink.map((pocketLinkKey, q) => {\r\n            if (pocketLinkKey.findPick &&\r\n              pocketLinkKey.findCount[p] > 0) {\r\n              pocketDiffKey += 1;\r\n            };\r\n          });\r\n        }\r\n        return pocketDiffKey;\r\n      // If newly deselected, subtract...\r\n      } else {\r\n        // ...one pickpocket...\r\n        if (props.findCountBox && props.findCountBox[p] > 0) {\r\n          pocketDiffKey -= 1;\r\n        }\r\n        // ...and another for every linked pickpocket.\r\n        if (props.findLink && props.findLink.length > 0) {\r\n          props.findLink.map((pocketLinkKey, q) => {\r\n            if (pocketLinkKey.findPick &&\r\n              pocketLinkKey.findCount[p] > 0) {\r\n              pocketDiffKey -= 1;\r\n            };\r\n          });\r\n        }\r\n        return pocketDiffKey;\r\n      }\r\n    });\r\n    if (props.findPick) {\r\n      //setFoundPocket(addFoundPocket);\r\n      accumPocket.current = addFoundPocket;\r\n      storeFoundPocket(addFoundPocket);\r\n    }\r\n\r\n    // Toggle whether carryover loot is 'found' or 'not found'.\r\n    if (newFound &&\r\n      props.carryValue && Math.min(...props.carryValue) === -1) {\r\n      setCarryFound(true);\r\n    } else if (\r\n      props.carryValue && Math.min(...props.carryValue) === -1) {\r\n      setCarryFound(false);\r\n    }\r\n\r\n    // Toggle any linked items.\r\n    if (props.findLink) {\r\n      setLinkedFind(props.findLink);\r\n    }\r\n\r\n  };\r\n\r\n  function toggleMe(type) {\r\n    let newToggle = true;\r\n    // If this item is not part of the starting inventory,\r\n    // toggle between 'found' and 'not found'.\r\n    if (!props.loadout || props.loadout !== \"start\") {\r\n      newToggle = toggleSwitch(getIsFound, type);\r\n    };\r\n\r\n    storeIsFound(newToggle);\r\n    setIsFound(newToggle);\r\n    return newToggle;\r\n  }\r\n\r\n  // Switch statement to set item as 'found' / 'not found'.\r\n  function toggleSwitch(toggle, type) {\r\n    switch(type) {\r\n      // 'On' sets this item as 'found'.\r\n      case \"on\":\r\n        return true;\r\n      // 'Off' sets this item as 'not found'.\r\n      case \"off\":\r\n        return false;\r\n      // 'Opposite' inverts this item's status.\r\n      case \"opposite\":\r\n        return !toggle;\r\n      // If no case specified, don't change item's status.\r\n      default:\r\n        return toggle;\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readIsFound();\r\n\r\n    // Select this item by default if it's in the starting inventory.\r\n    if (props.loadout && props.loadout === \"start\") {\r\n      activateMe();\r\n    };\r\n\r\n    if (props.getLinkedFind) {\r\n      // If 'Clear All' button has been pressed,\r\n      // toggle this item as 'not found'.\r\n      if (props.getLinkedFind === \"reset\") {\r\n        toggleMe(\"off\");\r\n        setLinkedFind();\r\n      // If another item is selected that's linked to this item,\r\n      // toggle this item as 'found' or 'not found', as well.\r\n      } else {\r\n        props.getLinkedFind.map((linkKey, linkIndex) => {\r\n          if (linkKey.id === props.id) {\r\n            // Clear the array of linked items.\r\n            setLinkedFind();\r\n\r\n            toggleMe(\"opposite\");\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }, [props.getLinkedFind]);\r\n\r\n  return (\r\n    <>\r\n      {(\r\n      // If exclusive to certain difficulties,\r\n      // hide this box if those difficulty filters are disabled.\r\n        (getFilterDiffN && findCount[0] !== 0 &&\r\n          findCountRecipe[0] !== 0 && findCountBox[0] !== 0) ||\r\n        (getFilterDiffH && findCount[1] !== 0 &&\r\n          findCountRecipe[1] !== 0 && findCountBox[1] !== 0) ||\r\n        (getFilterDiffX && findCount[2] !== 0 &&\r\n          findCountRecipe[2] !== 0 && findCountBox[2] !== 0)\r\n      ) &&\r\n      // If exclusive to certain game modes,\r\n      // hide this box if those game mode filters are disabled.\r\n      ( (getFilterModeA && findCountMode[0] !== 0) ||\r\n        (getFilterModeB && findCountMode[1] !== 0) ||\r\n        (getFilterModeC && findCountMode[2] !== 0)\r\n      ) &&\r\n      // Depending on this item's loot type(s),\r\n      // hide this box if those loot filters are disabled.\r\n      ( (getFilterLootGold && props.value &&\r\n          (props.value[0] !== 0 ||\r\n          (props.carryValue && props.carryValue[0] === -1)) ) ||\r\n        (getFilterLootGems && props.value &&\r\n          (props.value[1] !== 0 ||\r\n          (props.carryValue && props.carryValue[1] === -1)) ) ||\r\n        (getFilterLootGoods && props.value &&\r\n          (props.value[2] !== 0 ||\r\n          (props.carryValue && props.carryValue[2] === -1)) ) ||\r\n        (props.value && Math.max(...props.value) === 0) ||\r\n        !props.value\r\n      ) &&\r\n      // If area filter has one or more areas selected,\r\n      // hide this box if this item's area is not selected.\r\n      ( getFilterArea.length === 0 ||\r\n        getFilterArea.includes(props.areas[props.findArea].value)\r\n      ) &&\r\n        <TouchableOpacity\r\n          // Different background colors to indicate\r\n          // simplicity of finding (Easy, Medium, Hard),\r\n          // and whether user has selected it.\r\n          style={[\r\n            styles.find,\r\n            {backgroundColor: colors.backLight,\r\n            borderColor: colors.border},\r\n            findSimple === \"findE\" && {backgroundColor: colors.findE},\r\n            findSimple === \"findM\" && {backgroundColor: colors.findM},\r\n            findSimple === \"findH\" && {backgroundColor: colors.findH},\r\n            getIsFound && {backgroundColor: colors.found},\r\n          ]}\r\n          // Toggle whether this box is selected or not.\r\n          onPress={() => activateMe()}\r\n        >\r\n          {/*Text fields for general area and precise location.*/}\r\n          <FindMeArea\r\n            modeNames={props.modeNames}\r\n            value={props.value}\r\n            findArea={props.areas[props.findArea].value}\r\n            findObj={props.findObj}\r\n            findCount={props.findCount}\r\n            findCountRecipe={props.findCountRecipe}\r\n            findCountBox={props.findCountBox}\r\n            findCountMode={props.findCountMode}\r\n            findCountActual={props.findCountActual}\r\n            loadout={props.loadout}\r\n          />\r\n          <FindMePrecise\r\n            modeNames={props.modeNames}\r\n            findNarrow={props.findNarrow}\r\n            findExact={props.findExact}\r\n            findCount={props.findCount}\r\n            findCountRecipe={props.findCountRecipe}\r\n            findCountBox={props.findCountBox}\r\n            findCountMode={props.findCountMode}\r\n            findCountActual={props.findCountActual}\r\n            findRecipe={props.findRecipe}\r\n            findBox={props.findBox}\r\n            findPick={props.findPick}\r\n            findSecret={props.findSecret}\r\n            findUnable={props.findUnable}\r\n            findNote={props.notes[props.findNote]}\r\n            loadout={props.loadout}\r\n            price={props.price}\r\n          />\r\n        </TouchableOpacity>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*   FIND ME AREA   */\r\n/* **************** */\r\n// Custom text component to show an item's general area.\r\nconst FindMeArea = React.memo(function FindMeArea(props) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // DiffExclude: tracks if this item is only on certain difficulties.\r\n  // Used to add difficulty markers to text field.\r\n  const [getDiffExclude, setDiffExclude] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Is this item only available here on certain difficulties?\r\n    if (\r\n      props.findCount && Math.min(...props.findCount) === 0 ||\r\n      props.findCountRecipe && Math.min(...props.findCountRecipe) === 0 ||\r\n      props.findCountBox && Math.min(...props.findCountBox) === 0\r\n    ) {\r\n      setDiffExclude(true);\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Text style={[styles.locText, {color: colors.text}]}>\r\n      {/* Does this item trigger (or contribute to) an objective? */}\r\n      {props.findObj &&\r\n        <Text style={[styles.locCount, {color: colors.locObj}]}>\r\n          *\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Normal? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[0] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[0] > 0 ||\r\n          props.findCountBox && props.findCountBox[0] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locN}]}>\r\n          (\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Hard? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[1] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[1] > 0 ||\r\n          props.findCountBox && props.findCountBox[1] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locH}]}>\r\n          [\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Expert? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[2] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[2] > 0 ||\r\n          props.findCountBox && props.findCountBox[2] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locX}]}>\r\n          {'{'}\r\n        </Text>\r\n      }\r\n      {/* Separate the markings from the location, if needed. */}\r\n      {(props.findObj || getDiffExclude) &&\r\n        ' '\r\n      }\r\n      {/* Print the area where this item is found. */}\r\n      {props.findArea}\r\n      {/* Is there more than 1 of this item at loadout?\r\n          Or, is there more than 1 of this item in the secret list? */}\r\n      {(props.loadout === \"start\" || props.loadout === \"store\" ||\r\n        props.secret) &&\r\n        ((props.findCount && Math.max(...props.findCount) > 1) ||\r\n        (props.findCountMode && Math.max(...props.findCountMode) > -1)) &&\r\n        <FindMeCount\r\n          modeNames={props.modeNames}\r\n          findCount={props.findCount}\r\n          findCountMode={props.findCountMode}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Mirror the objective and difficulty markings, if any. */}\r\n      {(props.findObj || getDiffExclude) &&\r\n        ' '\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[2] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[2] > 0 ||\r\n          props.findCountBox && props.findCountBox[2] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locX}]}>\r\n          {'}'}\r\n        </Text>\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[1] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[1] > 0 ||\r\n          props.findCountBox && props.findCountBox[1] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locH}]}>\r\n          ]\r\n        </Text>\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[0] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[0] > 0 ||\r\n          props.findCountBox && props.findCountBox[0] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locN}]}>\r\n          )\r\n        </Text>\r\n      }\r\n      {props.findObj &&\r\n        <Text style={[styles.locCount, {color: colors.locObj}]}>\r\n          *\r\n        </Text>\r\n      }\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*  FIND ME PRECISE */\r\n/* **************** */\r\n// Custom text component to show an item's precise location.\r\nconst FindMePrecise = React.memo(function FindMePrecise(props) {\r\n  // Is this item available in the loadout store?\r\n  //if (props.loadout === \"store\" && props.price > 0) {\r\n  //  props.findExact = `Price: ${props.price}`;\r\n  //}\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locText,\r\n      {color: colors.text},\r\n      props.findSecret && {color: colors.locSecret},\r\n      props.findUnable && styles.locNoGet,\r\n    ]}>\r\n      {/* If no precise location, insert a blank for spacing. */}\r\n      {!props.findNarrow && !props.findExact &&\r\n       !props.findRecipe && props.loadout !== \"store\" &&\r\n       ' '\r\n      }\r\n      {/* Is this item available in the loadout store? */}\r\n      {props.loadout === \"store\" && props.price > 0 &&\r\n        `Price: ${props.price}`\r\n      }\r\n      {/* Print the general location of this item, if applicable. */}\r\n      {props.findNarrow &&\r\n        props.findNarrow\r\n      }\r\n      {/* Separate the general and exact locations, if needed. */}\r\n      {props.findNarrow && props.findExact &&\r\n        ', '\r\n      }\r\n      {/* Print the exact location of this item, if applicable. */}\r\n      {props.findExact &&\r\n        <Text style={[\r\n          styles.locText,\r\n          props.findBox && styles.locBox,\r\n          props.findPick && styles.locPick,\r\n        ]}>\r\n          {props.findExact}\r\n        </Text>\r\n      }\r\n      {/* Is there more than 1 of this item in a container? */}\r\n      {props.findCountBox && Math.max(...props.findCountBox) > 1 &&\r\n        <FindMeCount\r\n          findCount={props.findCountBox}\r\n          findCountActual={props.findCountActual}\r\n          findBox={props.findBox}\r\n          findPick={props.findPick}\r\n        />\r\n      }\r\n      {/* Is there more than 1 of this item at this location? */}\r\n      {!props.loadout &&\r\n        ((props.findCount && (Math.max(...props.findCount) > 1 ||\r\n          Math.min(...props.findCount) === -1)\r\n        ) ||\r\n        (props.findCountMode && Math.max(...props.findCountMode) > -1)) &&\r\n        <FindMeCount\r\n          modeNames={props.modeNames}\r\n          findCount={props.findCount}\r\n          findCountMode={props.findCountMode}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Separate the location and requirements, if needed. */}\r\n      {(props.findNarrow || props.findExact) && props.findRecipe &&\r\n        ', '\r\n      }\r\n      {/* Print the requirements, if any, for this item to appear. */}\r\n      {props.findRecipe &&\r\n        <Text style={styles.locCount}>{props.findRecipe}</Text>\r\n      }\r\n      {/* Do the requirements make more than 1 of this item appear? */}\r\n      {props.findCountRecipe &&\r\n        (Math.max(...props.findCountRecipe) > 1 ||\r\n          Math.min(...props.findCountRecipe) === -1\r\n        ) &&\r\n        <FindMeCount\r\n          findCount={props.findCountRecipe}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Print the footnote icon for this item, if applicable. */}\r\n      {props.findNote &&\r\n        <Text style={styles.locCount}>\r\n          {props.findNote.delimiter &&\r\n            `${props.findNote.delimiter}`\r\n          }\r\n          {props.findNote.icon &&\r\n            `${props.findNote.icon}`\r\n          }\r\n        </Text>\r\n      }\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   FIND ME COUNT  */\r\n/* **************** */\r\n// Custom text component to show an item's stack count.\r\nconst FindMeCount = React.memo(function FindMeCount(props) {\r\n  // Use defaults to avoid errors if some props are undefined.\r\n  const {\r\n    modeNames = [{'name': '', 'icon': ''}],\r\n    findCount = [1,1,1],\r\n    findCountMode = [-1,-1,-1],\r\n    findCountActual = [-1,-1,-1],\r\n    findBox = false,\r\n    findPick = false,\r\n  } = props;\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Change: tracks if this item has differing stack counts.\r\n  // Used to add relevant stack numbers to text field.\r\n  const [getDiffChange, setDiffChange] = React.useState(false);\r\n  const [getModeChange, setModeChange] = React.useState(false);\r\n  const [getActlChange, setActlChange] = React.useState(false);\r\n\r\n  // Stack: stores stack count shared across difficulties / game modes.\r\n  // Used to avoid reprinting the same count when unnecessary.\r\n  const [getDiffStack, setDiffStack] = React.useState(0);\r\n  const [getModeStack, setModeStack] = React.useState(0);\r\n  const [getActlStack, setActlStack] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Does this have different stack counts on different difficulties?\r\n    if (findCount[0] !== findCount[1] ||\r\n      findCount[1] !== findCount[2] ||\r\n      findCount[0] !== findCount[2]) {\r\n      // Exception: only available on Normal.\r\n      if (findCount[0] > 0 &&\r\n        findCount[1] === 0 && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[0]);\r\n      // Exception: only available on Hard.\r\n      } else if (findCount[1] > 0 &&\r\n        findCount[0] === 0 && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[1]);\r\n      // Exception: only available on Expert.\r\n      } else if (findCount[2] > 0 &&\r\n        findCount[0] === 0 && findCount[1] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[2]);\r\n      // Exception: same on Normal & Hard, unavailable on Expert.\r\n      } else if (findCount[0] > 0 && findCount[1] > 0 &&\r\n        findCount[0] === findCount[1] && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[0]);\r\n      // Exception: same on Hard & Expert, unavailable on Normal.\r\n      } else if (findCount[1] > 0 && findCount[2] > 0 &&\r\n        findCount[1] === findCount[2] && findCount[0] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[1]);\r\n      // Exception: same on Normal & Expert, unavailable on Hard.\r\n      } else if (findCount[0] > 0 && findCount[2] > 0 &&\r\n        findCount[0] === findCount[2] && findCount[1] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[2]);\r\n      // Otherwise, different stack counts on all difficulties.\r\n      } else {\r\n        setDiffChange(true);\r\n      }\r\n    // Otherwise, same count on all difficulties.\r\n    } else {\r\n      setDiffChange(false);\r\n      setDiffStack(findCount[0]);\r\n    }\r\n\r\n    // Does this have different stack counts on different game modes?\r\n    if (findCountMode[0] !== findCountMode[1] ||\r\n      findCountMode[1] !== findCountMode[2] ||\r\n      findCountMode[0] !== findCountMode[2]) {\r\n      // Exception: only available on Mode A.\r\n      if (findCountMode[0] > 0 &&\r\n        findCountMode[1] === 0 && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[0]);\r\n      // Exception: only available on Mode B.\r\n      } else if (findCountMode[1] > 0 &&\r\n        findCountMode[0] === 0 && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[1]);\r\n      // Exception: only available on Mode C.\r\n      } else if (findCountMode[2] > 0 &&\r\n        findCountMode[0] === 0 && findCountMode[1] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[2]);\r\n      // Exception: same on Modes A & B, unavailable on Mode C.\r\n      } else if (findCountMode[0] > 0 && findCountMode[1] > 0 &&\r\n        findCountMode[0] === findCountMode[1] && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[0]);\r\n      // Exception: same on Modes B & C, unavailable on Mode A.\r\n      } else if (findCountMode[1] > 0 && findCountMode[2] > 0 &&\r\n        findCountMode[1] === findCountMode[2] && findCountMode[0] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[1]);\r\n      // Exception: same on Modes A & C, unavailable on Mode B.\r\n      } else if (findCountMode[0] > 0 && findCountMode[2] > 0 &&\r\n        findCountMode[0] === findCountMode[2] && findCountMode[1] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[2]);\r\n      // Otherwise, different stack counts on all game modes.\r\n      } else {\r\n        setModeChange(true);\r\n      }\r\n    // Otherwise, same count on all game modes.\r\n    } else {\r\n      setModeChange(false);\r\n      setModeStack(findCountMode[0]);\r\n    }\r\n\r\n    // Does this have different actual counts on different difficulties?\r\n    if (findCountActual[0] !== findCountActual[1] ||\r\n      findCountActual[1] !== findCountActual[2] ||\r\n      findCountActual[0] !== findCountActual[2]) {\r\n      // Exception: only available on Normal.\r\n      if (findCountActual[0] > 0 &&\r\n        findCountActual[1] === 0 && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[0]);\r\n      // Exception: only available on Hard.\r\n      } else if (findCountActual[1] > 0 &&\r\n        findCountActual[0] === 0 && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[1]);\r\n      // Exception: only available on Expert.\r\n      } else if (findCountActual[2] > 0 &&\r\n        findCountActual[0] === 0 && findCountActual[1] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[2]);\r\n      // Exception: same on Normal & Hard, unavailable on Expert.\r\n      } else if (findCountActual[0] > 0 && findCountActual[1] > 0 &&\r\n        findCountActual[0] === findCountActual[1] && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[0]);\r\n      // Exception: same on Hard & Expert, unavailable on Normal.\r\n      } else if (findCountActual[1] > 0 && findCountActual[2] > 0 &&\r\n        findCountActual[1] === findCountActual[2] && findCountActual[0] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[1]);\r\n      // Exception: same on Normal & Expert, unavailable on Hard.\r\n      } else if (findCountActual[0] > 0 && findCountActual[2] > 0 &&\r\n        findCountActual[0] === findCountActual[2] && findCountActual[1] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[2]);\r\n      // Otherwise, different actual counts on all difficulties.\r\n      } else {\r\n        setActlChange(true);\r\n      }\r\n    // Otherwise, same actual count on all difficulties.\r\n    } else {\r\n      setActlChange(false);\r\n      setActlStack(findCountActual[0]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locCount,\r\n      findBox && styles.locBox,\r\n      findPick && styles.locPick,\r\n    ]}>\r\n      {' '}\r\n      {/* Don't print the 'x' if only showing the game mode(s)\r\n          and the stack count is 1. */}\r\n      {!getModeChange && getDiffStack !== 1 &&\r\n        'x'\r\n      }\r\n      {/* Print this item's stack count (unchanged by difficulty). */}\r\n      {!getDiffChange && Math.max(...findCount) > 0 &&\r\n        (!getModeChange && getDiffStack !== 1) &&\r\n        getDiffStack\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {!getDiffChange && findCount[0] === -1 &&\r\n        (!getModeChange && getDiffStack !== 1) &&\r\n        '∞'\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {!getDiffChange && Math.max(...findCountActual) > -1 &&\r\n        <>\r\n          {'('}\r\n          {/* Is the available count the same on all difficulties? */}\r\n          {!getActlChange &&\r\n            getActlStack\r\n          }\r\n          {/* Is the available count different on Normal? */}\r\n          {getActlChange && findCountActual[0] > -1 &&\r\n            <Text style={{color: colors.locN}}>\r\n              {findCountActual[0]}\r\n            </Text>\r\n          }\r\n          {/* Separate the Normal stack from Hard or Expert, if needed. */}\r\n          {getActlChange && findCountActual[0] > -1 &&\r\n            (findCountActual[1] > -1 || findCountActual[2] > -1) &&\r\n            '/'\r\n          }\r\n          {/* Is the available count different on Hard? */}\r\n          {getActlChange && findCountActual[1] > -1 &&\r\n            <Text style={{color: colors.locH}}>\r\n              {findCountActual[1]}\r\n            </Text>\r\n          }\r\n          {/* Separate the Hard stack from Expert, if needed. */}\r\n          {getActlChange &&\r\n            findCountActual[1] > -1 && findCountActual[2] > -1 &&\r\n            '/'\r\n          }\r\n          {/* Is the available count different on Expert? */}\r\n          {getActlChange && findCountActual[2] > -1 &&\r\n            <Text style={{color: colors.locX}}>\r\n              {findCountActual[2]}\r\n            </Text>\r\n          }\r\n          {')'}\r\n        </>\r\n      }\r\n      {/* Print this item's stack count (Normal difficulty). */}\r\n      {getDiffChange && findCount[0] > 0 &&\r\n        <Text style={{color: colors.locN}}>\r\n          {findCount[0]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[0] === -1 &&\r\n        <Text style={{color: colors.locN}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[0] > -1 &&\r\n        <Text style={{color: colors.locN}}>\r\n          ({findCountActual[0]})\r\n        </Text>\r\n      }\r\n      {/* Separate the Normal stack from Hard or Expert, if needed. */}\r\n      {getDiffChange && findCount[0] > 0 &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Hard difficulty). */}\r\n      {getDiffChange && findCount[1] > 0 &&\r\n        <Text style={{color: colors.locH}}>\r\n          {findCount[1]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[1] === -1 &&\r\n        <Text style={{color: colors.locH}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[1] > -1 &&\r\n        <Text style={{color: colors.locH}}>\r\n          ({findCountActual[1]})\r\n        </Text>\r\n      }\r\n      {/* Separate the Hard stack from Expert, if needed. */}\r\n      {getDiffChange &&\r\n        (findCount[1] > 0 && findCount[2] > 0) &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Expert difficulty). */}\r\n      {getDiffChange && findCount[2] > 0 &&\r\n        <Text style={{color: colors.locX}}>\r\n          {findCount[2]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[2] === -1 &&\r\n        <Text style={{color: colors.locX}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[2] > -1 &&\r\n        <Text style={{color: colors.locX}}>\r\n          ({findCountActual[2]})\r\n        </Text>\r\n      }\r\n\r\n      {/* Print this item's stack count (unchanged by game mode). */}\r\n      {!getModeChange &&\r\n        (!getDiffChange && getModeStack > 1) &&\r\n        `x${getModeStack}`\r\n      }\r\n      {!getModeChange && getModeStack !== -1 &&\r\n        '~'\r\n      }\r\n      {/* Print this item's stack count (Game mode A). */}\r\n      {getModeChange && findCountMode[0] > 0 &&\r\n        `x${findCountMode[0]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode A? */}\r\n      {findCountMode[0] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[0].icon}`\r\n      }\r\n      {/* Separate the Mode A stack from Mode B or C, if needed. */}\r\n      {getModeChange && findCountMode[0] > 0 &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Game mode B). */}\r\n      {getModeChange && findCountMode[1] > 0 &&\r\n        `x${findCountMode[1]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode B? */}\r\n      {findCountMode[1] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[1].icon}`\r\n      }\r\n      {/* Separate the Mode B stack from Mode C, if needed. */}\r\n      {getModeChange &&\r\n        (findCountMode[1] > 0 && findCountMode[2] > 0) &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Game mode C). */}\r\n      {getModeChange && findCountMode[2] > 0 &&\r\n        `x${findCountMode[2]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode C? */}\r\n      {findCountMode[2] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[2].icon}`\r\n      }\r\n\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   SECRET ENTRY   */\r\n/* **************** */\r\n// Custom view component of a secret, its trigger, and its rewards.\r\nexport const SecretEntry = React.memo(function SecretEntry(props) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // SecFound: tracks if this secret is selected as 'found'.\r\n  // Used to change location's background color.\r\n  const [getSecFound, setSecFound] = React.useState(false);\r\n\r\n  // ShowModal: tracks the modal's visibility.\r\n  // Used to show or hide the modal with an enlarged secret image.\r\n  // If multiple triggers, integer determines which image to show.\r\n  const [getShowModal, setShowModal] = React.useState(-1);\r\n\r\n  // Fetch FilterDiff states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Send data to device storage.\r\n  const storeSecFound = async (newSecFound) => {\r\n    try {\r\n      // Convert secret's state from boolean to string.\r\n      const jsonSecret = JSON.stringify(newSecFound);\r\n      await AsyncStorage.setItem(`@secret_${props.id}`, jsonSecret);\r\n      //alert(`Saved secret_${props.id} as ${jsonSecret}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      //alert('Failed to save value.');\r\n    }\r\n  };\r\n\r\n  // Read data from device storage.\r\n  const readSecFound = async () => {\r\n    try {\r\n      const jsonSecret = await AsyncStorage.getItem(`@secret_${props.id}`);\r\n      // Convert secret's state from string to boolean.\r\n      const parseSecret = JSON.parse(jsonSecret);\r\n      if (parseSecret !== null) {\r\n        setSecFound(parseSecret);\r\n        //alert(`Loaded secret_${props.id} as ${parseSecret}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read value.');\r\n    }\r\n  };\r\n\r\n  function triggerMe(type) {\r\n    let newSecFound = true;\r\n    newSecFound = triggerSwitch(getSecFound, type);\r\n\r\n    setSecFound(newSecFound);\r\n    // Send this data to storage.\r\n    storeSecFound(newSecFound);\r\n  };\r\n\r\n  // Switch statement to set secret as 'found' / 'not found'.\r\n  function triggerSwitch(toggle, type) {\r\n    switch(type) {\r\n      // 'On' sets this secret as 'found'.\r\n      case \"on\":\r\n        return true;\r\n      // 'Off' sets this secret as 'not found'.\r\n      case \"off\":\r\n        return false;\r\n      // 'Opposite' inverts this secret's status.\r\n      case \"opposite\":\r\n        return !toggle;\r\n      // If no case specified, don't change secret's status.\r\n      default:\r\n        return toggle;\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readSecFound();\r\n\r\n    if (props.getLinkedFind) {\r\n      // If 'Clear All' button has been pressed,\r\n      // toggle this item as 'not found'.\r\n      if (props.getLinkedFind === \"reset\") {\r\n        triggerMe(\"off\");\r\n        props.setLinkedFind();\r\n      }\r\n    }\r\n\r\n  }, [props.getLinkedFind]);\r\n\r\n  return (\r\n    <View style={styles.listEntry}>\r\n      <View style={styles.secretTrigList}>\r\n        {/* Map out each entry in secret trigger sub-array. */}\r\n        {props.triggers && props.triggers.map((trigKey, trigIndex) => (\r\n          <View\r\n            key={trigKey.id}\r\n            style={styles.secretTrig}\r\n          >\r\n            <View style={[\r\n              styles.secretTrigID,\r\n              {backgroundColor: colors.backMed,\r\n              borderColor: colors.border},\r\n              props.triggers.length === 1 && styles.secretTrigOne,\r\n              trigIndex === 0 && styles.secretTrigTop,\r\n              trigIndex !== 0 && styles.secretTrigMid,\r\n              trigIndex === props.triggers.length - 1 &&\r\n                props.triggers.length > 1 &&\r\n                styles.secretTrigBot\r\n            ]}>\r\n              {/* Secret's number and image go here. */}\r\n              {trigIndex === 0 &&\r\n                <Text style={[styles.secretNum, {color: colors.text}]}>\r\n                  {props.number}\r\n                </Text>\r\n              }\r\n              <TouchableWithoutFeedback\r\n                onPress={() => setShowModal(trigIndex)}\r\n              >\r\n                <Image\r\n                  source={props.img[trigIndex]}\r\n                  style={styles.imgSecret}\r\n                />\r\n              </TouchableWithoutFeedback>\r\n              {/* Modal to show bigger secret image. */}\r\n              <Modal\r\n                animationType='fade'\r\n                transparent={true}\r\n                visible={getShowModal !== -1}\r\n                onRequestClose={() => setShowModal(-1)}\r\n              >\r\n                <TouchableOpacity\r\n                  style={styles.modalView}\r\n                  activeOpacity={1}\r\n                  onPressOut={() => setShowModal(-1)}\r\n                >\r\n                  <TouchableWithoutFeedback>\r\n                    <View style={[\r\n                      styles.secretModal,\r\n                      {backgroundColor: colors.backMed,\r\n                      borderColor: colors.border}\r\n                    ]}>\r\n                      <Image\r\n                        source={props.img[getShowModal]}\r\n                        style={styles.imgSecretBig}\r\n                      />\r\n                    </View>\r\n                  </TouchableWithoutFeedback>\r\n                </TouchableOpacity>\r\n              </Modal>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.secretLoc,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                getSecFound && {backgroundColor: colors.found}\r\n              ]}\r\n              // Toggle whether this secret is selected or not.\r\n              onPress={() => triggerMe(\"opposite\")}\r\n            >\r\n              {/* Secret's location goes here. */}\r\n              <FindMeArea\r\n                findArea={props.areas[trigKey.findArea].value}\r\n                findCount={trigKey.findDiff}\r\n              />\r\n              <FindMePrecise\r\n                findNarrow={trigKey.findNarrow}\r\n              />\r\n            </TouchableOpacity>\r\n            <View style={[\r\n              styles.secretMethod,\r\n              {backgroundColor: colors.backLight,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              {/* Secret's trigger goes here. */}\r\n              <Text style={[\r\n                styles.secretText,\r\n                {color: colors.text}\r\n              ]}>\r\n                {trigKey.method}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.secretRewardList}>\r\n        {/* Map out each entry in secret reward sub-array. */}\r\n        {props.rewards && props.rewards.map((rewKey, rewIndex) => (\r\n          <View\r\n            key={rewKey.id}\r\n            style={styles.secretRewardFlex}\r\n          >\r\n            {(\r\n            // If exclusive to certain difficulties,\r\n            // hide this box if those difficulty filters are disabled.\r\n              (getFilterDiffN &&\r\n                rewKey.findCount && rewKey.findCount[0] !== 0) ||\r\n              (getFilterDiffH &&\r\n                rewKey.findCount && rewKey.findCount[1] !== 0) ||\r\n              (getFilterDiffX &&\r\n                rewKey.findCount && rewKey.findCount[2] !== 0)\r\n            ) &&\r\n              <View style={[\r\n                styles.secretReward,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                {/*!rewKey.rewardLoot && !rewKey.rewardItem &&\r\n                  <Text style={styles.secretRewardText}>WIP</Text>\r\n                */}\r\n                {/* Is this reward a new route? */}\r\n                {rewKey.rewardRoute &&\r\n                  <>\r\n                    <Text style={[\r\n                      styles.secretRewardText,\r\n                      styles.secretRewardOther,\r\n                      {color: colors.text}\r\n                    ]}>\r\n                      A new route between\r\n                    </Text>\r\n                    {rewKey.rewardRoute.map((routeKey, routeIndex) => (\r\n                      <Text\r\n                        key={`route_${routeIndex}`}\r\n                        style={[\r\n                          styles.secretRewardText,\r\n                          styles.secretRewardOther,\r\n                          {color: colors.text}\r\n                      ]}>\r\n                        {/* Print 'and' before\r\n                            final destination in list. */}\r\n                        {routeIndex === rewKey.rewardRoute.length -1 &&\r\n                          <Text>and </Text>\r\n                        }\r\n                        {/* Print each destination. */}\r\n                        {routeKey}\r\n                        {/* Print comma after each destination\r\n                            if list has at least 3 destinations. */}\r\n                        {routeIndex !== rewKey.rewardRoute.length - 1 &&\r\n                          rewKey.rewardRoute.length > 2 &&\r\n                          <Text>,</Text>\r\n                        }\r\n                      </Text>\r\n                    ))}\r\n                  </>\r\n                }\r\n                {/* Is this reward a loot item? */}\r\n                {rewKey.rewardLoot &&\r\n                  <>\r\n                    <Text style={[\r\n                      styles.secretRewardText,\r\n                      {color: colors.text}\r\n                    ]}>\r\n                      <FindMeArea\r\n                        value={rewKey.value}\r\n                        findArea={rewKey.rewardLoot}\r\n                        findCount={rewKey.findCount}\r\n                        secret={true}\r\n                      />\r\n                      {':'}\r\n                    </Text>\r\n                    {/* Loot item's value goes here. */}\r\n                    <View style={styles.lootRow}>\r\n                      {rewKey.value && rewKey.value[0] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGold}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[0]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {rewKey.value && rewKey.value[1] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGems}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[1]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {rewKey.value && rewKey.value[2] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGoods}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[2]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {/* If multiple loot items have same value,\r\n                          clarify shown value is not cumulative. */}\r\n                      {rewKey.findCount &&\r\n                        Math.max(...rewKey.findCount) > 1 &&\r\n                        <Text style={[\r\n                          styles.secretRewardText,\r\n                          {color: colors.text}\r\n                        ]}>\r\n                          {'each'}\r\n                        </Text>\r\n                      }\r\n                    </View>\r\n                  </>\r\n                }\r\n                {/* Is this reward an inventory item? */}\r\n                {rewKey.rewardItem &&\r\n                  <Text style={[\r\n                    styles.secretRewardText,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    <FindMeArea\r\n                      value={rewKey.value}\r\n                      findArea={rewKey.rewardItem}\r\n                      findCount={rewKey.findCount}\r\n                      secret={true}\r\n                    />\r\n                  </Text>\r\n                }\r\n                {/* Is this reward something else? */}\r\n                {rewKey.rewardOther &&\r\n                  <Text style={[\r\n                    styles.secretRewardText,\r\n                    styles.secretRewardOther,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {rewKey.rewardOther}\r\n                  </Text>\r\n                }\r\n              </View>\r\n            }\r\n          </View>\r\n        ))}\r\n        {/* Is there no tangible reward for finding this secret? */}\r\n        {!props.rewards &&\r\n          <View style={styles.secretReward}>\r\n            <Text style={[\r\n              styles.secretRewardText,\r\n              styles.secretRewardOther,\r\n              {color: colors.text}\r\n            ]}>\r\n              None\r\n            </Text>\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   IMAGE SWITCH   */\r\n/* **************** */\r\n// Custom view component showing a slideshow of images.\r\nconst ImageSwitch = React.memo(function ImageSwitch(props) {\r\n  // ImageIndex: tracks the current index in the image array.\r\n  const [getImageIndex, setImageIndex] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Create an interval to iterate through the image array.\r\n    const imageID = setInterval(() => {\r\n      if (getImageIndex < props.img.length - 1) {\r\n        setImageIndex(getImageIndex + 1);\r\n      } else if (getImageIndex === props.img.length - 1) {\r\n        setImageIndex(0);\r\n      }\r\n    // Delay how often the interval updates.\r\n    // 2000 milliseconds = every 2 seconds.\r\n    }, 2000);\r\n\r\n    // Clear the interval when the component unmounts.\r\n    return () => clearInterval(imageID);\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <Image\r\n        source={props.img[getImageIndex]}\r\n        style={styles.imgStyle}\r\n      />\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   TOTALS VIEW    */\r\n/* **************** */\r\n// Custom view component of the mission's loot values & requirements.\r\nexport const TotalsView = React.memo(function TotalsView(props) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} = React.useContext(FoundContext);\r\n\r\n  // Fetch CarryLoot and CarryFound states from context.\r\n  const {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  // FoundLoot: tracks the values of loot selected by the user.\r\n  // Each nested array is for Normal, Hard, & Expert difficulty.\r\n  // Each index in an array is for gold, gems, goods, and total.\r\n  const [getFoundLoot, setFoundLoot] =\r\n    React.useState([[0,0,0,0], [0,0,0,0], [0,0,0,0]]);\r\n\r\n  // FoundPocket: tracks the pickpockets selected by the user.\r\n  // Each index in the array is for Normal, Hard, & Expert difficulty.\r\n  const [getFoundPocket, setFoundPocket] = React.useState([0,0,0]);\r\n\r\n  // Share: tracks if any difficulties have the same loot total.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which total table headers to show.\r\n  const [getShareNH, setShareNH] = React.useState(false);\r\n  const [getShareHX, setShareHX] = React.useState(false);\r\n  const [getShareNX, setShareNX] = React.useState(false);\r\n\r\n  // Goal: tracks if any difficulties have the same loot goal.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which goal table headers to show.\r\n  const [getGoalNH, setGoalNH] = React.useState(false);\r\n  const [getGoalHX, setGoalHX] = React.useState(false);\r\n  const [getGoalNX, setGoalNX] = React.useState(false);\r\n\r\n  // Read data from device storage.\r\n  /*const readFoundLoot = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(`@myloot_${props.title}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        setFoundLoot(parseArray);\r\n        //alert(`Loaded myloot_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read loot array.');\r\n    }\r\n  };\r\n  const readFoundPocket = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(`@mypocket_${props.title}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        setFoundPocket(parseArray);\r\n        //alert(`Loaded mypocket_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read pocket array.');\r\n    }\r\n  };*/\r\n\r\n  // Function to limit the TextInput to numeric characters.\r\n  function onlyNumeric(over) {\r\n    // Failsafe so an empty input doesn't cause errors.\r\n    if (over === '') {\r\n      over = '0';\r\n    }\r\n    // Use a regex to remove any characters that aren't numbers.\r\n    over = over.replace(/[^0-9]/g, '');\r\n    // Use a regex to remove any leading zeros.\r\n    over = over.replace(/^0+/, '');\r\n    setCarryLoot(over);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    //readFoundLoot();\r\n    //readFoundPocket();\r\n\r\n    // Do Normal and Hard have the same loot totals?\r\n    if (props.totals) {\r\n      if (props.totals[0][0] === props.totals[1][0] &&\r\n          props.totals[0][1] === props.totals[1][1] &&\r\n          props.totals[0][2] === props.totals[1][2] &&\r\n          props.totals[0][3] === props.totals[1][3]) {\r\n        setShareNH(true);\r\n        // Do Normal and Hard have the same loot goal?\r\n        setGoalNH(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[0] !== props.goal1.total[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[0] !== props.goal1.gold[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[0] !== props.goal1.gems[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[0] !== props.goal1.goods[1]) {\r\n            setGoalNH(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[0] !== props.goal2.total[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[0] !== props.goal2.gold[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[0] !== props.goal2.gems[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[0] !== props.goal2.goods[1]) {\r\n            setGoalNH(false);\r\n          }\r\n        }\r\n      }\r\n      // Do Hard and Expert have the same loot totals?\r\n      if (props.totals[1][0] === props.totals[2][0] &&\r\n          props.totals[1][1] === props.totals[2][1] &&\r\n          props.totals[1][2] === props.totals[2][2] &&\r\n          props.totals[1][3] === props.totals[2][3]) {\r\n        setShareHX(true);\r\n        // Do Hard and Expert have the same loot goal?\r\n        setGoalHX(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[1] !== props.goal1.total[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[1] !== props.goal1.gold[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[1] !== props.goal1.gems[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[1] !== props.goal1.goods[2]) {\r\n            setGoalHX(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[1] !== props.goal2.total[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[1] !== props.goal2.gold[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[1] !== props.goal2.gems[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[1] !== props.goal2.goods[2]) {\r\n            setGoalHX(false);\r\n          }\r\n        }\r\n      }\r\n      // Do Normal and Expert have the same loot totals?\r\n      if (props.totals[0][0] === props.totals[2][0] &&\r\n          props.totals[0][1] === props.totals[2][1] &&\r\n          props.totals[0][2] === props.totals[2][2] &&\r\n          props.totals[0][3] === props.totals[2][3]) {\r\n        setShareNX(true);\r\n        // Do Normal and Expert have the same loot goal?\r\n        setGoalNX(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[0] !== props.goal1.total[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[0] !== props.goal1.gold[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[0] !== props.goal1.gems[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[0] !== props.goal1.goods[2]) {\r\n            setGoalNX(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[0] !== props.goal2.total[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[0] !== props.goal2.gold[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[0] !== props.goal2.gems[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[0] !== props.goal2.goods[2]) {\r\n            setGoalNX(false);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Create an interval to force the found totals to update.\r\n    const updateMe = setInterval(() => {\r\n      setFoundLoot(accumLoot.current);\r\n      setFoundPocket(accumPocket.current);\r\n    // Delay how often the interval updates.\r\n    // 200 milliseconds = five times per second.\r\n    }, 200);\r\n\r\n    // Clear the interval when the component unmounts.\r\n    return () => clearInterval(updateMe);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.totalView}>\r\n      {/* If loot carries over from the previous mission,\r\n          allow user to input the total loot they found. */}\r\n      {props.totals && props.carryLoot &&\r\n        <View style={styles.carryView}>\r\n          <Text style={[styles.carryText, {color: colors.text}]}>\r\n            {`Enter previous loot: `}\r\n          </Text>\r\n          <TextInput\r\n            style={[\r\n              styles.carryInput,\r\n              {color: colors.text,\r\n              borderColor: colors.inputBorder}\r\n            ]}\r\n            inputMode='numeric'\r\n            maxLength={5}\r\n            onChangeText={over => onlyNumeric(over)}\r\n            value={getCarryLoot}\r\n          />\r\n        </View>\r\n      }\r\n      {/* If this mission has loot,\r\n          display a table showing totals for each loot value. */}\r\n      {(props.totals &&\r\n       (Math.max(...props.totals[0]) > 0 ||\r\n        Math.max(...props.totals[1]) > 0 ||\r\n        Math.max(...props.totals[2]) > 0) ) &&\r\n        <View style={styles.spacedView}>\r\n          <View style={styles.tableHeader}>\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              styles.sizeRowStart,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={styles.tableHeadText}>\r\n                Loot Totals\r\n                </Text>\r\n            </View>\r\n            {/* Column headers for gold / gems / goods / total. */}\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Image\r\n                source={iconGold}\r\n                style={styles.imgLootIcon}\r\n              />\r\n            </View>\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Image\r\n                source={iconGems}\r\n                style={styles.imgLootIcon}\r\n              />\r\n            </View>\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Image\r\n                source={iconGoods}\r\n                style={styles.imgLootIcon}\r\n              />\r\n            </View>\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={styles.tableHeadText}>Total</Text>\r\n            </View>\r\n            {/* Extra column if loot carries over. */}\r\n            {props.carryLoot &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>+ Carryover</Text>\r\n              </View>\r\n            }\r\n          </View>\r\n          {props.totals.map((outerKey, a) => (\r\n            <View key={`outer_${a}`}>\r\n              {/* Default row: All, N+H, N+X, or N */}\r\n              {/* Second row: H+X or H */}\r\n              {/* Third row: X */}\r\n              {((a === 0) ||\r\n                (a === 1 && !getShareNH) ||\r\n                (a === 2 && !getShareHX && !getShareNX)) &&\r\n                <View style={styles.tableRow}>\r\n                  {Math.max(...outerKey) > 0 &&\r\n                    <>\r\n                      <View style={[\r\n                        styles.tableRowStart,\r\n                        styles.sizeRowStart,\r\n                        {backgroundColor: colors.backMed,\r\n                        borderColor: colors.border}\r\n                      ]}>\r\n                        {/* All difficulties have the same total. */}\r\n                        {a === 0 &&\r\n                          getShareNH && getShareHX && getShareNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            All\r\n                          </Text>\r\n                        }\r\n                        {/* Normal and Hard have the same total. */}\r\n                        {a === 0 &&\r\n                          getShareNH && !getShareHX && !getShareNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locN}\r\n                            ]}>\r\n                              {props.diffNames[0]}\r\n                            </Text>/\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locH}\r\n                            ]}>\r\n                              {props.diffNames[1]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Hard and Expert have the same total. */}\r\n                        {a === 1 &&\r\n                          !getShareNH && getShareHX && !getShareNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locH}\r\n                            ]}>\r\n                              {props.diffNames[1]}\r\n                            </Text>/\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locX}\r\n                            ]}>\r\n                              {props.diffNames[2]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Normal and Expert have the same total. */}\r\n                        {a === 0 &&\r\n                          !getShareNH && !getShareHX && getShareNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locN}\r\n                            ]}>\r\n                              {props.diffNames[0]}\r\n                            </Text>/\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locX}\r\n                            ]}>\r\n                              {props.diffNames[2]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Normal has a different total. */}\r\n                        {a === 0 && !getShareNH && !getShareNX &&\r\n                          <Text style={styles.tableRowText}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locN}\r\n                            ]}>\r\n                              {props.diffNames[0]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Hard has a different total. */}\r\n                        {a === 1 && !getShareNH && !getShareHX &&\r\n                          <Text style={styles.tableRowText}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locH}\r\n                            ]}>\r\n                              {props.diffNames[1]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Expert has a different total. */}\r\n                        {a === 2 && !getShareHX && !getShareNX &&\r\n                          <Text style={styles.tableRowText}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locX}\r\n                            ]}>\r\n                              {props.diffNames[2]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                      </View>\r\n                      {/* Display found loot value & max loot value. */}\r\n                      {outerKey.map((innerKey, b) => (\r\n                        <View\r\n                          key={`inner_${b}`}\r\n                          style={[styles.tableRowBox,\r\n                            {backgroundColor: colors.backLight,\r\n                            borderColor: colors.border},\r\n                            getFoundLoot[a][b] >= innerKey &&\r\n                            {backgroundColor: colors.found}\r\n                        ]}>\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            {getFoundLoot[a][b]}{\" / \"}{innerKey}\r\n                          </Text>\r\n                        </View>\r\n                      ))}\r\n                      {/* Carryover loot box if input is empty. */}\r\n                      {props.carryLoot && getCarryLoot === '' &&\r\n                        <View style={[styles.tableRowBox,\r\n                          {backgroundColor: colors.backLight,\r\n                          borderColor: colors.border},\r\n                          getFoundLoot[a][3] >= props.totals[a][3] &&\r\n                          {backgroundColor: colors.found}\r\n                        ]}>\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            {getFoundLoot[a][3]}{\" / \"}\r\n                            {props.totals[a][3]}\r\n                          </Text>\r\n                        </View>\r\n                      }\r\n                      {/* Carryover loot box if input is given. */}\r\n                      {props.carryLoot && getCarryLoot !== '' &&\r\n                        <View style={[styles.tableRowBox,\r\n                          {backgroundColor: colors.backLight,\r\n                          borderColor: colors.border},\r\n                          (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                          (parseInt(getCarryLoot) + props.totals[a][3]) &&\r\n                          {backgroundColor: colors.found}\r\n                        ]}>\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            {getCarryFound &&\r\n                              parseInt(getCarryLoot) + getFoundLoot[a][3]}\r\n                            {!getCarryFound && getFoundLoot[a][3]}\r\n                            {\" / \"}\r\n                            {parseInt(getCarryLoot) + props.totals[a][3]}\r\n                          </Text>\r\n                        </View>\r\n                      }\r\n                    </>\r\n                  }\r\n                </View>\r\n              }\r\n            </View>\r\n          ))}\r\n        </View>\r\n      }\r\n\r\n      {/* If this mission has a loot goal,\r\n          display a table of loot goals. */}\r\n      {( (props.goal1 && props.goal1.total &&\r\n          Math.max(...props.goal1.total) > 0) ||\r\n         (props.goal2 && props.goal2.total &&\r\n          Math.max(...props.goal2.total) > 0) ) &&\r\n        <View style={styles.spacedView}>\r\n          <View style={styles.tableHeader}>\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              styles.sizeRowStart,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={styles.tableHeadText}>Loot Goals</Text>\r\n            </View>\r\n            {/* Column for the first loot goal. */}\r\n            {props.goal1 && props.goal1.total &&\r\n              Math.max(...props.goal1.total) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                {/* Is this loot goal optional or a bonus? */}\r\n                {props.goal1.info !== \"optional\" &&\r\n                 props.goal1.info !== \"bonus\" &&\r\n                  <Text style={styles.tableHeadText}>Required</Text>\r\n                }\r\n                {props.goal1.info === \"optional\" &&\r\n                  <Text style={styles.tableHeadText}>(Optional)</Text>\r\n                }\r\n                {props.goal1.info === \"bonus\" &&\r\n                  <Text style={styles.tableHeadText}>(Bonus)</Text>\r\n                }\r\n              </View>\r\n            }\r\n            {/* Column for the first goal's gold minimum. */}\r\n            {props.goal1 && props.goal1.gold &&\r\n              Math.max(...props.goal1.gold) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGold}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n            }\r\n            {/* Column for the first goal's gems minimum. */}\r\n            {props.goal1 && props.goal1.gems &&\r\n              Math.max(...props.goal1.gems) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGems}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n            }\r\n            {/* Column for the first goal's goods minimum. */}\r\n            {props.goal1 && props.goal1.goods &&\r\n              Math.max(...props.goal1.goods) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGoods}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n            }\r\n            {/* Column for the second loot goal. */}\r\n            {props.goal2 && props.goal2.total &&\r\n              Math.max(...props.goal2.total) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                {/* Is this loot goal optional or a bonus? */}\r\n                {props.goal2.info !== \"optional\" &&\r\n                 props.goal2.info !== \"bonus\" &&\r\n                  <Text style={styles.tableHeadText}>Required</Text>\r\n                }\r\n                {props.goal2.info === \"optional\" &&\r\n                  <Text style={styles.tableHeadText}>(Optional)</Text>\r\n                }\r\n                {props.goal2.info === \"bonus\" &&\r\n                  <Text style={styles.tableHeadText}>(Bonus)</Text>\r\n                }\r\n              </View>\r\n            }\r\n            {/* Column for the second goal's gold minimum. */}\r\n            {props.goal2 && props.goal2.gold &&\r\n              Math.max(...props.goal2.gold) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGold}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n            }\r\n            {/* Column for the second goal's gems minimum. */}\r\n            {props.goal2 && props.goal2.gems &&\r\n              Math.max(...props.goal2.gems) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGems}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n            }\r\n            {/* Column for the second goal's goods minimum. */}\r\n            {props.goal2 && props.goal2.goods &&\r\n              Math.max(...props.goal2.goods) > 0 &&\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGoods}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n            }\r\n          </View>\r\n          {props.goal1.total.map((goalKey, g) => (\r\n            <View key={`total_${g}`}>\r\n              {/* Default row: All, N+H, N+X, or N */}\r\n              {/* Second row: H+X or H */}\r\n              {/* Third row: X */}\r\n              {((g === 0) ||\r\n                (g === 1 && !getGoalNH) ||\r\n                (g === 2 && !getGoalHX && !getGoalNX)) &&\r\n                <View style={styles.tableRow}>\r\n                  {goalKey !== 0 &&\r\n                    <>\r\n                      <View style={[\r\n                        styles.tableRowStart,\r\n                        styles.sizeRowStart,\r\n                        {backgroundColor: colors.backMed,\r\n                        borderColor: colors.border}\r\n                      ]}>\r\n                        {/* All difficulties have the same goal. */}\r\n                        {g === 0 &&\r\n                          getGoalNH && getGoalHX && getGoalNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            All\r\n                          </Text>\r\n                        }\r\n                        {/* Normal and Hard have the same goal. */}\r\n                        {g === 0 &&\r\n                          getGoalNH && !getGoalHX && !getGoalNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locN}\r\n                            ]}>\r\n                              {props.diffNames[0]}\r\n                            </Text>/\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locH}\r\n                            ]}>\r\n                              {props.diffNames[1]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Hard and Expert have the same goal. */}\r\n                        {g === 1 &&\r\n                          !getGoalNH && getGoalHX && !getGoalNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locH}\r\n                            ]}>\r\n                              {props.diffNames[1]}\r\n                            </Text>/\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locX}\r\n                            ]}>\r\n                              {props.diffNames[2]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Normal and Expert have the same goal. */}\r\n                        {g === 0 &&\r\n                          !getGoalNH && !getGoalHX && getGoalNX &&\r\n                          <Text style={[\r\n                            styles.tableRowText, {color: colors.text}\r\n                          ]}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locN}\r\n                            ]}>\r\n                              {props.diffNames[0]}\r\n                            </Text>/\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locX}\r\n                            ]}>\r\n                              {props.diffNames[2]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Normal has a different goal. */}\r\n                        {g === 0 && !getGoalNH && !getGoalNX &&\r\n                          <Text style={styles.tableRowText}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locN}\r\n                            ]}>\r\n                              {props.diffNames[0]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Hard has a different goal. */}\r\n                        {g === 1 && !getGoalNH && !getGoalHX &&\r\n                          <Text style={styles.tableRowText}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locH}\r\n                            ]}>\r\n                              {props.diffNames[1]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                        {/* Expert has a different goal. */}\r\n                        {g === 2 && !getGoalHX && !getGoalNX &&\r\n                          <Text style={styles.tableRowText}>\r\n                            <Text style={[\r\n                              styles.locCount, {color: colors.locX}\r\n                            ]}>\r\n                              {props.diffNames[2]}\r\n                            </Text>\r\n                          </Text>\r\n                        }\r\n                      </View>\r\n                      {/* Display found loot & loot goal. */}\r\n                      <GoalView\r\n                        goalLoot={goalKey}\r\n                        totalLoot={props.totals[g][3]}\r\n                        foundLoot={getFoundLoot[g][3]}\r\n                      />\r\n                      {/* Is there a minimum gold requirement? */}\r\n                      {props.goal1.gold &&\r\n                        Math.max(...props.goal1.gold) > 0 &&\r\n                        <GoalView\r\n                          goalLoot={props.goal1.gold[g]}\r\n                          totalLoot={props.totals[g][0]}\r\n                          foundLoot={getFoundLoot[g][0]}\r\n                        />\r\n                      }\r\n                      {/* Is there a minimum gems requirement? */}\r\n                      {props.goal1.gems &&\r\n                        Math.max(...props.goal1.gems) > 0 &&\r\n                        <GoalView\r\n                          goalLoot={props.goal1.gems[g]}\r\n                          totalLoot={props.totals[g][1]}\r\n                          foundLoot={getFoundLoot[g][1]}\r\n                        />\r\n                      }\r\n                      {/* Is there a minimum goods requirement? */}\r\n                      {props.goal1.goods &&\r\n                        Math.max(...props.goal1.goods) > 0 &&\r\n                        <GoalView\r\n                          goalLoot={props.goal1.goods[g]}\r\n                          totalLoot={props.totals[g][2]}\r\n                          foundLoot={getFoundLoot[g][2]}\r\n                        />\r\n                      }\r\n                      {/* Is there a second loot goal? */}\r\n                      {props.goal2 && props.goal2.total &&\r\n                        Math.max(...props.goal2.total) > 0 &&\r\n                        <>\r\n                          <GoalView\r\n                            goalLoot={props.goal2.total[g]}\r\n                            totalLoot={props.totals[g][3]}\r\n                            foundLoot={getFoundLoot[g][3]}\r\n                          />\r\n                          {/* Is there a minimum gold requirement? */}\r\n                          {props.goal2 && props.goal2.gold &&\r\n                            Math.max(...props.goal2.gold) > 0 &&\r\n                            <GoalView\r\n                              goalLoot={props.goal2.gold[g]}\r\n                              totalLoot={props.totals[g][0]}\r\n                              foundLoot={getFoundLoot[g][0]}\r\n                            />\r\n                          }\r\n                          {/* Is there a minimum gems requirement? */}\r\n                          {props.goal2 && props.goal2.gems &&\r\n                            Math.max(...props.goal2.gems) > 0 &&\r\n                            <GoalView\r\n                              goalLoot={props.goal2.gems[g]}\r\n                              totalLoot={props.totals[g][1]}\r\n                              foundLoot={getFoundLoot[g][1]}\r\n                            />\r\n                          }\r\n                          {/* Is there a minimum goods requirement? */}\r\n                          {props.goal2 && props.goal2.goods &&\r\n                            Math.max(...props.goal2.goods) > 0 &&\r\n                            <GoalView\r\n                              goalLoot={props.goal2.goods[g]}\r\n                              totalLoot={props.totals[g][2]}\r\n                              foundLoot={getFoundLoot[g][2]}\r\n                            />\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </View>\r\n              }\r\n            </View>\r\n          ))}\r\n        </View>\r\n      }\r\n\r\n      {/* If this mission has pickpockets,\r\n          display a table of pickpocket counts. */}\r\n      {/* Because difficulties can have the same pick count\r\n          but different items/AI to pickpocket,\r\n          keep diffs separate for accurate counts. */}\r\n      {(props.pocketCount &&\r\n       (Math.max(...props.pocketCount) > 0) ) &&\r\n        <View style={styles.spacedView}>\r\n          <View style={styles.tableHeader}>\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              styles.sizeRowStart,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={styles.tableHeadText}>Pickpockets</Text>\r\n            </View>\r\n            {/* Column header. */}\r\n            <View style={[\r\n              styles.tableHeadBox,\r\n              styles.pocketRowBox,\r\n              {backgroundColor: colors.backDark,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={styles.tableHeadText}>Total</Text>\r\n            </View>\r\n          </View>\r\n          {/* Normal difficulty. */}\r\n          {props.pocketCount[0] > 0 &&\r\n            <View style={styles.tableRow}>\r\n              {/* Row header. */}\r\n              <View style={[\r\n                styles.tableRowStart,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backMed,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={[\r\n                  styles.tableRowText,\r\n                  styles.locCount,\r\n                  {color: colors.locN}\r\n                ]}>\r\n                  {props.diffNames[0]}\r\n                </Text>\r\n              </View>\r\n              {/* Display found pickpockets & max pickpockets. */}\r\n              <View style={[\r\n                styles.tableRowBox,\r\n                styles.pocketRowBox,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                getFoundPocket[0] >= props.pocketCount[0] &&\r\n                {backgroundColor: colors.found}\r\n              ]}>\r\n                <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                  {getFoundPocket[0]}{\" / \"}{props.pocketCount[0]}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          }\r\n          {/* Hard difficulty. */}\r\n          {props.pocketCount[1] > 0 &&\r\n            <View style={styles.tableRow}>\r\n              {/* Row header. */}\r\n              <View style={[\r\n                styles.tableRowStart,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backMed,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={[\r\n                  styles.tableRowText,\r\n                  styles.locCount,\r\n                  {color: colors.locH}\r\n                ]}>\r\n                  {props.diffNames[1]}\r\n                </Text>\r\n              </View>\r\n              {/* Display found pickpockets & max pickpockets. */}\r\n              <View style={[\r\n                styles.tableRowBox,\r\n                styles.pocketRowBox,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                getFoundPocket[1] >= props.pocketCount[1] &&\r\n                {backgroundColor: colors.found}\r\n              ]}>\r\n                <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                  {getFoundPocket[1]}{\" / \"}{props.pocketCount[1]}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          }\r\n          {/* Expert difficulty. */}\r\n          {props.pocketCount[2] > 0 &&\r\n            <View style={styles.tableRow}>\r\n              {/* Row header. */}\r\n              <View style={[\r\n                styles.tableRowStart,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backMed,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={[\r\n                  styles.tableRowText,\r\n                  styles.locCount,\r\n                  {color: colors.locX}\r\n                ]}>\r\n                  {props.diffNames[2]}\r\n                </Text>\r\n              </View>\r\n              {/* Display found pickpockets & max pickpockets. */}\r\n              <View style={[\r\n                styles.tableRowBox,\r\n                styles.pocketRowBox,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                getFoundPocket[2] >= props.pocketCount[2] &&\r\n                {backgroundColor: colors.found}\r\n              ]}>\r\n                <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                  {getFoundPocket[2]}{\" / \"}{props.pocketCount[2]}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          }\r\n        </View>\r\n      }\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*     GOAL VIEW    */\r\n/* **************** */\r\n// Custom view component of a loot goal and its percentage.\r\nexport function GoalView(props) {\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  //const {getFoundLoot, setFoundLoot, getFoundPocket, setFoundPocket} =\r\n  //  React.useContext(FoundContext);\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <>\r\n      {/* If no value minimum, display an empty space. */}\r\n      {props.goalLoot === 0 &&\r\n        <View style={styles.emptyRowBox} />\r\n      }\r\n      {/* Otherwise, display the loot goal. */}\r\n      {props.goalLoot > 0 &&\r\n        <View style={[\r\n          styles.tableRowBox,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border},\r\n          props.foundLoot >= props.goalLoot &&\r\n          {backgroundColor: colors.found}\r\n        ]}>\r\n          {/* Display found loot compared to loot goal. */}\r\n          <Text style={[\r\n            styles.tableRowText,\r\n            {color: colors.text}\r\n          ]}>\r\n            {props.foundLoot}{\" / \"}\r\n            {props.goalLoot}{\" \"}\r\n          </Text>\r\n          {/* Display loot goal percentage. */}\r\n          <Text style={[\r\n            styles.tableRowText,\r\n            styles.locCount,\r\n            {color: colors.text}\r\n          ]}>\r\n            {\"( \"}\r\n            {`${Math.round(\r\n              (props.goalLoot / props.totalLoot) * 100 )}`}\r\n            {\"% )\"}\r\n          </Text>\r\n        </View>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*    FILTER VIEW   */\r\n/* **************** */\r\n// Custom view component of options for filtering item locations.\r\nexport function FilterView(props) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // ShowModal: tracks the modal's visibility.\r\n  // Used to show or hide the modal with 'please wait' text.\r\n  const [getShowModal, setShowModal] = React.useState(false);\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} =\r\n    React.useContext(FoundContext);\r\n\r\n  // Fetch FilterDiff, FilterMode, and FilterArea states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX,\r\n        getFilterModeA, setFilterModeA,\r\n        getFilterModeB, setFilterModeB,\r\n        getFilterModeC, setFilterModeC,\r\n        getFilterLootGold, setFilterLootGold,\r\n        getFilterLootGems, setFilterLootGems,\r\n        getFilterLootGoods, setFilterLootGoods,\r\n        getFilterArea, setFilterArea} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Variables for checkbox icon formatting.\r\n  const checkSize = 14;\r\n  const checkColorOn = getCurrentTheme === 'dark'\r\n    ? 'goldenrod' : 'olive';\r\n  const checkColorOff = \"gray\";\r\n\r\n  // Remove this mission's data in device storage.\r\n  const removeStored = async () => {\r\n    const invKeys = [];\r\n    // Show the 'please wait' modal.\r\n    setShowModal(true);\r\n    // Create an array large enough to contain all IDs.\r\n    for (let i = 1; i <= 80; i++) {\r\n      invKeys.push(`@inventory_${props.id}_loot_${i}`);\r\n    }\r\n    for (let i = 1; i <= 110; i++) {\r\n      invKeys.push(`@inventory_${props.id}_item_${i}`);\r\n    }\r\n    for (let i = 1; i <= 70; i++) {\r\n      invKeys.push(`@inventory_${props.id}_junk_${i}`);\r\n    }\r\n    for (let i = 1; i <= 20; i++) {\r\n      invKeys.push(`@secret_${props.id}_sec_${i}`);\r\n    }\r\n    try {\r\n      await AsyncStorage.multiRemove(invKeys);\r\n      await AsyncStorage.removeItem(`@myloot_${props.title}`);\r\n      await AsyncStorage.removeItem(`@mypocket_${props.title}`);\r\n      //alert('Cleared all items.');\r\n    } catch (e) {\r\n      // Error: Clearing the data failed.\r\n      alert('Failed to clear data.');\r\n    }\r\n\r\n    // Reset loot & pickpocket totals to 0.\r\n    accumLoot.current = [[0,0,0,0],[0,0,0,0],[0,0,0,0]];\r\n    accumPocket.current = [0,0,0];\r\n    // Update item boxes.\r\n    props.setLinkedFind('reset');\r\n    // Hide the 'please wait' modal.\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Button to clear all selected items. */}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.allButton,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border}\r\n        ]}\r\n        onPress={removeStored}\r\n      >\r\n        <Text style={{color: colors.text}}>\r\n          Clear All\r\n        </Text>\r\n        {/* Modal to show 'please wait' text. */}\r\n        <Modal\r\n          animationType='fade'\r\n          transparent={true}\r\n          visible={getShowModal}\r\n          onRequestClose={() => setShowModal(false)}\r\n        >\r\n          <View\r\n            style={styles.modalView}\r\n            activeOpacity={1}\r\n          >\r\n            <View style={[\r\n              styles.waitModal,\r\n              {backgroundColor: colors.backLight,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={{color: colors.text}}>\r\n                Clearing mission data.\r\n              </Text>\r\n              <Text style={{color: colors.text}}>\r\n                Please wait...\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.filters}>\r\n        <Text style={{color: colors.text}}>\r\n          Filters:\r\n        </Text>\r\n        <View>\r\n          {/* Row of difficulty filters. */}\r\n          <View style={styles.filterRow}>\r\n            {/* Normal difficulty filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterDiffN && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterDiffN(!getFilterDiffN)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterDiffN ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterDiffN ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text style={[styles.locCount, {color: colors.locN}]}>\r\n                {` ${props.diffNames[0]}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {/* Hard difficulty filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterDiffH && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterDiffH(!getFilterDiffH)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterDiffH ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterDiffH ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text style={[styles.locCount, {color: colors.locH}]}>\r\n                {` ${props.diffNames[1]}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {/* Expert difficulty filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterDiffX && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterDiffX(!getFilterDiffX)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterDiffX ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterDiffX ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text style={[styles.locCount, {color: colors.locX}]}>\r\n                {` ${props.diffNames[2]}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Row of game mode filters, if applicable. */}\r\n          {props.modeNames &&\r\n            <View style={styles.filterRow}>\r\n              {/* Game mode A filter. */}\r\n              {props.modeNames.length >= 1 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeA && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeA(!getFilterModeA)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeA ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeA ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {` ${props.modeNames[0].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Game mode B filter. */}\r\n              {props.modeNames.length >= 2 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeB && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeB(!getFilterModeB)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeB ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeB ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {` ${props.modeNames[1].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Game mode C filter. */}\r\n              {props.modeNames.length >= 3 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeC && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeC(!getFilterModeC)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeC ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeC ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {` ${props.modeNames[2].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n            </View>\r\n          }\r\n\r\n          {/* Row of loot type filters. */}\r\n          <View style={styles.filterRow}>\r\n            {/* Gold loot filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterLootGold && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterLootGold(!getFilterLootGold)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterLootGold ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterLootGold ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text> </Text>\r\n              <Image\r\n                source={iconGold}\r\n                style={styles.imgLootIconBig}\r\n              />\r\n            </TouchableOpacity>\r\n            {/* Gems loot filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterLootGems && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterLootGems(!getFilterLootGems)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterLootGems ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterLootGems ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text> </Text>\r\n              <Image\r\n                source={iconGems}\r\n                style={styles.imgLootIconBig}\r\n              />\r\n            </TouchableOpacity>\r\n            {/* Goods loot filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterLootGoods && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterLootGoods(!getFilterLootGoods)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterLootGoods ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterLootGoods ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text> </Text>\r\n              <Image\r\n                source={iconGoods}\r\n                style={styles.imgLootIconBig}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Area filter. */}\r\n      <MultipleSelectList\r\n        boxStyles={[\r\n          styles.filterAreaBox,\r\n          {backgroundColor: colors.inputArea,\r\n          borderColor: colors.inputBorder}\r\n        ]}\r\n        checkBoxStyles={{backgroundColor: colors.inputCheck}}\r\n        inputStyles={{color: colors.text}}\r\n        labelStyles={{color: colors.text}}\r\n        dropdownStyles={[\r\n          styles.filterAreaDropdown,\r\n          {backgroundColor: colors.inputArea,\r\n          borderColor: colors.inputBorder}\r\n        ]}\r\n        dropdownItemStyles={styles.filterAreaListItem}\r\n        dropdownTextStyles={[\r\n          styles.filterAreaListText,\r\n          {color: colors.text}\r\n        ]}\r\n        badgeStyles={[\r\n          styles.filterAreaBadge,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border}\r\n        ]}\r\n        badgeTextStyles={[\r\n          styles.filterAreaBadgeText,\r\n          {color: colors.text}\r\n        ]}\r\n        data={props.areas}\r\n        save=\"value\"\r\n        setSelected={(area) => setFilterArea(area)}\r\n        placeholder=\"Select Areas\"\r\n        label=\"Selected:\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// Define various styles here.\r\nconst styles = StyleSheet.create({\r\n  listEntry: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    alignItems: 'stretch',\r\n  },\r\n  nameEntry: {\r\n    borderWidth: 1,\r\n    borderTopLeftRadius: 8,\r\n    borderBottomLeftRadius: 8,\r\n    alignItems: 'center',\r\n    width: (Platform.OS === 'web') ? 80 : '15%',\r\n  },\r\n  nameEntryLoot: {\r\n    width: (Platform.OS === 'web') ? 80 : '13.5%',\r\n  },\r\n  subEntry: {\r\n    flex: 1,\r\n    width: (Platform.OS === 'web') ? 764 : '85%',\r\n  },\r\n  subEntryLoot: {\r\n    flex: 1,\r\n    width: (Platform.OS === 'web') ? 764 : '86.5%',\r\n  },\r\n  subEntryLocsPerValue: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  subEntryLPV_Web: {\r\n    //backgroundColor: 'orange',\r\n    flex: 2,\r\n    flexDirection: 'row',\r\n  },\r\n  subEntryValue: {\r\n    //flexDirection: 'row',\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    paddingLeft: (Platform.OS === 'web') ? 4 : 2,\r\n    width: (Platform.OS === 'web') ? 60 : '11%',\r\n  },\r\n  subEntryLoc: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignContent: 'stretch',\r\n    //width: '89%',\r\n  },\r\n  subEntryLocLoot: {\r\n    width: (Platform.OS === 'web') ? 228 : '89%',\r\n  },\r\n  lootRow: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  find: {\r\n    justifyContent: 'center',\r\n    borderWidth: 1,\r\n    padding: 2,\r\n    width: (Platform.OS === 'web') ? 228 : '50%',\r\n  },\r\n  entryText: {\r\n    fontSize: (Platform.OS === 'web') ? 11 : 7.5,\r\n    textAlign: 'center',\r\n  },\r\n  lootText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n    marginLeft: (Platform.OS === 'web') ? 3 : 2,\r\n  },\r\n  locText: {\r\n    //fontFamily: 'BlueHighway',\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  locCount: {\r\n    fontWeight: 'bold',\r\n  },\r\n  locPick: {\r\n    fontStyle: 'italic',\r\n  },\r\n  locBox: {\r\n    textDecorationLine: 'underline',\r\n  },\r\n  locNoGet: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  secretTrigList: {\r\n    width: (Platform.OS === 'web') ? 590 : '72%',\r\n  },\r\n  secretTrig: {\r\n    flexDirection: 'row',\r\n    flexGrow: 1,\r\n  },\r\n  secretTrigID: {\r\n    borderWidth: 1,\r\n    alignItems: 'center',\r\n    paddingHorizontal: 3,\r\n    width: (Platform.OS === 'web') ? 140 : '27%',\r\n  },\r\n  secretTrigOne: {\r\n    borderBottomLeftRadius: 8,\r\n  },\r\n  secretTrigTop: {\r\n    borderTopLeftRadius: 8,\r\n    paddingBottom: (Platform.OS === 'web') ? 5 : 3,\r\n  },\r\n  secretTrigMid: {\r\n    paddingVertical: 8,\r\n  },\r\n  secretTrigBot: {\r\n    borderBottomLeftRadius: 8,\r\n    paddingTop: (Platform.OS === 'web') ? 5 : 3,\r\n    paddingBottom: (Platform.OS === 'web') ? 16 : 13,\r\n  },\r\n  secretNum: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  secretLoc: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n    width: (Platform.OS === 'web') ? 150 : '38%',\r\n  },\r\n  secretMethod: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n    width: (Platform.OS === 'web') ? 300 : '35%',\r\n  },\r\n  secretText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  secretRewardList: {\r\n    width: (Platform.OS === 'web') ? 175 : '28%',\r\n  },\r\n  secretRewardFlex: {\r\n    flexGrow: 100,\r\n  },\r\n  secretReward: {\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n  },\r\n  secretRewardText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  secretRewardOther: {\r\n    fontStyle: 'italic',\r\n  },\r\n  secretModal: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: (Platform.OS === 'web') ? 420 : 220,\r\n    height: (Platform.OS === 'web') ? 420 : 220,\r\n  },\r\n  waitModal: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 5,\r\n  },\r\n  modalView: {\r\n    backgroundColor: 'rgba(64,64,64,0.7)',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  totalView: {\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  carryView: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  carryText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 12,\r\n  },\r\n  carryInput: {\r\n    borderWidth: 1,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    width: 50,\r\n    height: 22,\r\n    fontSize: 12,\r\n  },\r\n  spacedView: {\r\n    marginVertical: (Platform.OS === 'web') ? 8 : 5,\r\n  },\r\n  tableHeader: {\r\n    flexDirection: 'row',\r\n  },\r\n  tableHeadBox: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: (Platform.OS === 'web') ? 100 : 65,\r\n    padding: 2,\r\n  },\r\n  tableHeadText: {\r\n    color: 'white',\r\n    fontSize: (Platform.OS === 'web') ? 14 : 8,\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  tableRowStart: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    padding: (Platform.OS === 'web') ? 4 : 2,\r\n  },\r\n  sizeRowStart: {\r\n    width: (Platform.OS === 'web') ? 100 : 68,\r\n  },\r\n  tableRowBox: {\r\n    backgroundColor: 'lightgray',\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    width: (Platform.OS === 'web') ? 100 : 65,\r\n    padding: (Platform.OS === 'web') ? 4 : 2,\r\n  },\r\n  tableRowText: {\r\n    fontSize: (Platform.OS === 'web') ? 14 : 8,\r\n  },\r\n  emptyRowBox: {\r\n    width: (Platform.OS === 'web') ? 100 : 65,\r\n  },\r\n  pocketRowBox: {\r\n    width: (Platform.OS === 'web') ? 60 : 40,\r\n  },\r\n  filters: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  filterButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    minWidth: 105,\r\n    minHeight: 27,\r\n  },\r\n  filterTextFalse: {\r\n    color: 'white',\r\n  },\r\n  filterTextMode: {\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  filterAreaBox: {\r\n    borderRadius: 5,\r\n    width: (Platform.OS === 'web') ? 425 : '80%',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterAreaDropdown: {\r\n    borderRadius: 5,\r\n    width: (Platform.OS === 'web') ? 425 : '80%',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterAreaListItem: {\r\n    alignItems: 'center',\r\n    marginHorizontal: -5,\r\n    height: 30,\r\n  },\r\n  filterAreaListText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 10,\r\n  },\r\n  filterAreaBadge: {\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n    margin: -5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  filterAreaBadgeText: {\r\n    fontSize: 10,\r\n  },\r\n  allButton: {\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    width: 80,\r\n  },\r\n  imgStyle: {\r\n    marginTop: (Platform.OS === 'web') ? 4 : 2,\r\n    width: (Platform.OS === 'web') ? 64 : 40,\r\n    height: (Platform.OS === 'web') ? 64 : 40,\r\n  },\r\n  imgLootIcon: {\r\n    width: (Platform.OS === 'web') ? 15 : 10,\r\n    height: (Platform.OS === 'web') ? 15 : 10,\r\n  },\r\n  imgLootIconBig: {\r\n    width: (Platform.OS === 'web') ? 18 : 14,\r\n    height: (Platform.OS === 'web') ? 18 : 14,\r\n  },\r\n  imgSecret: {\r\n    width: (Platform.OS === 'web') ? 128 : 70,\r\n    height: (Platform.OS === 'web') ? 128 : 70,\r\n  },\r\n  imgSecretBig: {\r\n    width: (Platform.OS === 'web') ? 400 : 200,\r\n    height: (Platform.OS === 'web') ? 400 : 200,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport {\r\n  //NavigationContainer,\r\n  //useNavigation,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\n//import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {\r\n  StyleSheet, Platform,\r\n  Image, //Alert,\r\n  Text, //TextInput,\r\n  //Button,\r\n  //TouchableOpacity,\r\n  View, //ScrollView,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n//import { useFonts } from 'expo-font';\r\n\r\n// Import functions and components from other files.\r\nimport * as Loot from \"./Loot\";\r\n\r\n// Import contexts here.\r\nimport {FoundContext, CarryoverContext, FilterContext} from \"./Context\";\r\n\r\n// Add mission lootlists here.\r\nconst myList = {\r\n  \"t0_test\": require('./lists/t0_practice.json'), // App Test\r\n  \"t0_select\": require('./lists/t0_select.json'), // Select Test\r\n  \"t0_template12\": require('./lists/t0_template12.json'), // Template 1/2\r\n\r\n  // THIEF: THE DARK PROJECT\r\n  \"t1_training\": require('./lists/t1_training.json'), // A Keeper's Training\r\n  \"t1_bafford\": require('./lists/t1_bafford.json'), // Lord Bafford's Manor\r\n  \"t1_cragscleft\": require('./lists/t1_cragscleft.json'), // Break from Cragscleft Prison\r\n  \"t1_bonehoard\": require('./lists/t1_bonehoard.json'), // Down in the Bonehoard\r\n  //\"t1_assassins\": require('./lists/t1_assassins.json'), // Assassins\r\n  //\"t1_guild\": require('./lists/t1_guild.json'), // Thieves' Guild\r\n  //\"t1_sword\": require('./lists/t1_sword.json'), // The Sword\r\n  //\"t1_haunted\": require('./lists/t1_haunted.json'), // The Haunted Cathedral\r\n  //\"t1_towers\": require('./lists/t1_towers.json'), // The Mage Towers\r\n  //\"t1_lost\": require('./lists/t1_lost.json'), // The Lost City\r\n  //\"t1_song\": require('./lists/t1_song.json'), // Song of the Caverns\r\n  //\"t1_undercover\": require('./lists/t1_undercover.json'), // Undercover\r\n  //\"t1_return\": require('./lists/t1_return.json'), // Return to the Cathedral\r\n  //\"t1_escape\": require('./lists/t1_escape.json'), // Escape!\r\n  //\"t1_bedfellows\": require('./lists/t1_bedfellows.json'), // Strange Bedfellows\r\n  //\"t1_maw\": require('./lists/t1_maw.json'), // Into the Maw of Chaos\r\n  //\"t1_blooper\": require('./lists/t1_blooper.json'), // Blooper Reel\r\n\r\n  // THIEF II: THE METAL AGE\r\n  \"t2_interference\": require('./lists/t2_interference.json'), // Running Interference\r\n  \"t2_shipping\": require('./lists/t2_shipping.json'), // Shipping ... and Receiving\r\n  \"t2_framed\": require('./lists/t2_framed.json'), // Framed\r\n  \"t2_ambush\": require('./lists/t2_ambush.json'), // Ambush\r\n  //\"t2_eavesdropping\": require('./lists/t2_eavesdropping.json'), // Eavesdropping\r\n  //\"t2_bank\": require('./lists/t2_bank.json'), // First City Bank and Trust\r\n  //\"t2_blackmail\": require('./lists/t2_blackmail.json'), // Blackmail\r\n  //\"t2_courier\": require('./lists/t2_courier.json'), // Trace the Courier\r\n  //\"t2_blood\": require('./lists/t2_blood.json'), // Trail of Blood\r\n  //\"t2_party\": require('./lists/t2_party.json'), // Life of the Party\r\n  //\"t2_cargo\": require('./lists/t2_cargo.json'), // Precious Cargo\r\n  //\"t2_kidnap\": require('./lists/t2_kidnap.json'), // Kidnap\r\n  //\"t2_casing\": require('./lists/t2_casing.json'), // Casing the Joint\r\n  //\"t2_masks\": require('./lists/t2_masks.json'), // Masks\r\n  //\"t2_soulforge\": require('./lists/t2_soulforge.json'), // Sabotage at Soulforge\r\n  \"t2_guest\": require('./lists/t2_guest.json'), // The Unwelcome Guest\r\n\r\n  // Fan Missions\r\n  \"fm_lampfire\": require('./lists/fm_lampfire.json'), // Autumn in Lampfire Hills\r\n  \"fm_agenda\": require('./lists/fm_agenda.json'), // Hidden Agenda\r\n  \"fm_maelstrom\": require('./lists/fm_maelstrom.json'), // Into the Maelstrom\r\n  \"fm_highway\": require('./lists/fm_highway.json'), // Thieves' Highway\r\n};\r\n\r\n// Add mission screenshots here.\r\nconst myScreens = {\r\n  // T1: A Keeper's Training\r\n  'MIS_t1_training_A': require('./assets/screens/t1_training_A.png'),\r\n  'MIS_t1_training_B': require('./assets/screens/t1_training_B.png'),\r\n  // T1: Lord Bafford's Manor\r\n  'MIS_t1_bafford_A': require('./assets/screens/t1_bafford_A.png'),\r\n  'MIS_t1_bafford_B': require('./assets/screens/t1_bafford_B.png'),\r\n  // T1: Break from Cragscleft Prison\r\n  'MIS_t1_cragscleft_A': require('./assets/screens/t1_cragscleft_A.png'),\r\n  'MIS_t1_cragscleft_B': require('./assets/screens/t1_cragscleft_B.png'),\r\n  // T1: Down in the Bonehoard\r\n  'MIS_t1_bonehoard_A': require('./assets/screens/t1_bonehoard_A.png'),\r\n  'MIS_t1_bonehoard_B': require('./assets/screens/t1_bonehoard_B.png'),\r\n\r\n  // T2: Running Interference\r\n  'MIS_t2_interference_A': require('./assets/screens/t2_interference_A.png'),\r\n  'MIS_t2_interference_B': require('./assets/screens/t2_interference_B.png'),\r\n  // T2: Shipping ... and Receiving\r\n  'MIS_t2_shipping_A': require('./assets/screens/t2_shipping_A.png'),\r\n  'MIS_t2_shipping_B': require('./assets/screens/t2_shipping_B.png'),\r\n  // T2: Framed\r\n  'MIS_t2_framed_A': require('./assets/screens/t2_framed_A.png'),\r\n  'MIS_t2_framed_B': require('./assets/screens/t2_framed_B.png'),\r\n  // T2: Ambush\r\n  'MIS_t2_ambush_A': require('./assets/screens/t2_ambush_A.png'),\r\n  'MIS_t2_ambush_B': require('./assets/screens/t2_ambush_B.png'),\r\n\r\n  // FM: Autumn in Lampfire Hills\r\n  'MIS_fm_lampfire_A': require('./assets/screens/fm_lampfire_A.png'),\r\n  'MIS_fm_lampfire_B': require('./assets/screens/fm_lampfire_B.png'),\r\n  // FM: Hidden Agenda\r\n  'MIS_fm_agenda_A': require('./assets/screens/fm_agenda_A.png'),\r\n  'MIS_fm_agenda_B': require('./assets/screens/fm_agenda_B.png'),\r\n  // FM: Into the Maelstrom\r\n  'MIS_fm_maelstrom_A': require('./assets/screens/fm_maelstrom_A.png'),\r\n  'MIS_fm_maelstrom_B': require('./assets/screens/fm_maelstrom_B.png'),\r\n  // FM: Thieves' Highway\r\n  'MIS_fm_highway_A': require('./assets/screens/fm_highway_A.png'),\r\n  'MIS_fm_highway_B': require('./assets/screens/fm_highway_B.png'),\r\n};\r\n\r\n// Add item images here.\r\nconst myImages = {\r\n  // -- LOOT (1 & 2) --\r\n  'IMG_Purse': require('./assets/items12/purse.png'),\r\n  'IMG_CopperCoinStack': require('./assets/items12/coppercoinstack.png'),\r\n  'IMG_SilverCoinStack': require('./assets/items12/silvercoinstack.png'),\r\n  'IMG_GoldCoinStack': require('./assets/items12/goldcoinstack.png'),\r\n  'IMG_Coin': require('./assets/items12/coin.png'),\r\n  'IMG_LuckyCoins': require('./assets/items12/luckycoins.png'),\r\n  'IMG_GoldRing': require('./assets/items12/goldring.png'),\r\n  'IMG_WeddingRings': require('./assets/items12/weddingrings.png'),\r\n  'IMG_GemRing': require('./assets/items12/gemring.png'),\r\n  'IMG_SignetRing': require('./assets/items12/signetring.png'),\r\n  'IMG_SilverBracelet': require('./assets/items12/silverbracelet.png'),\r\n  'IMG_SerpentyleTorc': require('./assets/items12/serpentyletorc.png'),\r\n  'IMG_Necklace': require('./assets/items12/necklace.png'),\r\n  'IMG_Medallion': require('./assets/items12/medallion.png'),\r\n  'IMG_PurpleMedallion': require('./assets/items12/purplemedallion.png'),\r\n  'IMG_Tiara': require('./assets/items12/tiara.png'),\r\n  'IMG_AddonizioCrystal': require('./assets/items12/addoniziocrystal.png'),\r\n  'IMG_Gemstone': require('./assets/items12/gemstone.png'),\r\n  'IMG_MysticsSoul': require('./assets/items12/mysticssoul.png'),\r\n  'IMG_MysticsHeart': require('./assets/items12/mysticsheart.png'),\r\n  'IMG_PrecursorGem': require('./assets/items12/precursorgem.png'),\r\n  'IMG_PrecursorJar_Small': require('./assets/items12/precursorjar_small.png'),\r\n  'IMG_PrecursorJar_Tall': require('./assets/items12/precursorjar_tall.png'),\r\n  'IMG_PrecursorJar_Pointed': require('./assets/items12/precursorjar_pointed.png'),\r\n  'IMG_PrecursorCanopicJar': require('./assets/items12/precursorcanopicjar.png'),\r\n  'IMG_PrecursorTapestry': require('./assets/items12/precursortapestry.png'),\r\n  'IMG_PrecursorMask_Bare': require('./assets/items12/precursormask_bare.png'),\r\n  'IMG_PrecursorMask_Fading': require('./assets/items12/precursormask_fading.png'),\r\n  'IMG_PrecursorMask_Green': require('./assets/items12/precursormask_green.png'),\r\n  'IMG_PrecursorMask_Brass': require('./assets/items12/precursormask_brass.png'),\r\n  'IMG_DecorativeMask_Demon': require('./assets/items12/decorativemask_demon.png'),\r\n  'IMG_DecorativeMask_Monster': require('./assets/items12/decorativemask_monster.png'),\r\n  'IMG_DecorativeMask_Bugaku': require('./assets/items12/decorativemask_bugaku.png'),\r\n  'IMG_DecorativeMask_Noh': require('./assets/items12/decorativemask_noh.png'),\r\n  'IMG_DecorativeMask_Inuit': require('./assets/items12/decorativemask_inuit.png'),\r\n  'IMG_DecorativeMask_White': require('./assets/items12/decorativemask_white.png'),\r\n  'IMG_TreebeastMask': require('./assets/items12/treebeastmask.png'),\r\n  'IMG_Statuette_Nobleman': require('./assets/items12/statuette_nobleman.png'),\r\n  'IMG_Statuette_Noblewoman': require('./assets/items12/statuette_noblewoman.png'),\r\n  'IMG_Statuette_Monk': require('./assets/items12/statuette_monk.png'),\r\n  'IMG_Statuette_Nun': require('./assets/items12/statuette_nun.png'),\r\n  'IMG_Statuette_Mage': require('./assets/items12/statuette_mage.png'),\r\n  'IMG_Statuette_Muse': require('./assets/items12/statuette_muse.png'),\r\n  'IMG_MechanistStatuette': require('./assets/items12/mechaniststatuette.png'),\r\n  'IMG_GoldHammer': require('./assets/items12/goldhammer.png'),\r\n  'IMG_CollectionPlate': require('./assets/items12/collectionplate.png'),\r\n  'IMG_GoldPlate': require('./assets/items12/goldplate.png'),\r\n  'IMG_DecorativePlate_Pink': require('./assets/items12/decorativeplate_pink.png'),\r\n  'IMG_DecorativePlate_Red': require('./assets/items12/decorativeplate_red.png'),\r\n  'IMG_DecorativePlate_Orange': require('./assets/items12/decorativeplate_orange.png'),\r\n  'IMG_DecorativePlate_Gold': require('./assets/items12/decorativeplate_gold.png'),\r\n  'IMG_DecorativePlate_Aqua': require('./assets/items12/decorativeplate_aqua.png'),\r\n  'IMG_DecorativePlate_Blue': require('./assets/items12/decorativeplate_blue.png'),\r\n  'IMG_SpiceBag': require('./assets/items12/spicebag.png'),\r\n  'IMG_RareSpiceBag': require('./assets/items12/rarespicebag.png'),\r\n  'IMG_FineWine': require('./assets/items12/finewine.png'),\r\n  'IMG_RareWine': require('./assets/items12/rarewine.png'),\r\n  'IMG_GoldGoblet': require('./assets/items12/goldgoblet.png'),\r\n  'IMG_PurpleGoblet': require('./assets/items12/purplegoblet.png'),\r\n  'IMG_GoldVase': require('./assets/items12/goldvase.png'),\r\n  'IMG_IndigoVase': require('./assets/items12/indigovase.png'),\r\n  'IMG_PurpleVase': require('./assets/items12/purplevase.png'),\r\n  'IMG_GreenVase': require('./assets/items12/greenvase.png'),\r\n  'IMG_SapphireVase': require('./assets/items12/sapphirevase.png'),\r\n  'IMG_GoldCandlestick': require('./assets/items12/goldcandlestick.png'),\r\n  'IMG_GoldGlasses': require('./assets/items12/goldglasses.png'),\r\n  'IMG_OperaGlasses': require('./assets/items12/operaglasses.png'),\r\n  'IMG_SilverFirePoker': require('./assets/items12/silverfirepoker.png'),\r\n  'IMG_JeweledDagger': require('./assets/items12/jeweleddagger.png'),\r\n  'IMG_JeweledSword': require('./assets/items12/jeweledsword.png'),\r\n  'IMG_DiamondDrillbit': require('./assets/items12/diamonddrillbit.png'),\r\n  'IMG_GoldGear': require('./assets/items12/goldgear.png'),\r\n  'IMG_SilverFlute': require('./assets/items12/silverflute.png'),\r\n  'IMG_WaxCylinder': require('./assets/items12/waxcylinder.png'),\r\n  'IMG_GoldDice': require('./assets/items12/golddice.png'),\r\n  'IMG_GoldBook': require('./assets/items12/goldbook.png'),\r\n  'IMG_SilverNugget': require('./assets/items12/silvernugget.png'),\r\n  'IMG_GoldNugget': require('./assets/items12/goldnugget.png'),\r\n\r\n  // -- ITEMS (1 & 2) --\r\n  'IMG_Sword': require('./assets/items12/sword.png'),\r\n  'IMG_ConstantinesSword': require('./assets/items12/constantinessword.png'),\r\n  'IMG_Blackjack': require('./assets/items12/blackjack.png'),\r\n  'IMG_BroadheadArrow': require('./assets/items12/broadheadarrow.png'),\r\n  'IMG_WaterArrow': require('./assets/items12/waterarrow.png'),\r\n  'IMG_HolyWaterArrow': require('./assets/items12/holywaterarrow.png'),\r\n  'IMG_FireArrow': require('./assets/items12/firearrow.png'),\r\n  'IMG_MossArrow': require('./assets/items12/mossarrow.png'),\r\n  'IMG_GasArrow_TDP': require('./assets/items12/gasarrow_tdp.png'),\r\n  'IMG_GasArrow_TMA': require('./assets/items12/gasarrow_tma.png'),\r\n  'IMG_RopeArrow': require('./assets/items12/ropearrow.png'),\r\n  'IMG_VineArrow': require('./assets/items12/vinearrow.png'),\r\n  'IMG_NoisemakerArrow': require('./assets/items12/noisemakerarrow.png'),\r\n  'IMG_WaterCrystal': require('./assets/items12/watercrystal.png'),\r\n  'IMG_FireCrystal': require('./assets/items12/firecrystal.png'),\r\n  'IMG_EarthCrystal': require('./assets/items12/earthcrystal.png'),\r\n  'IMG_AirCrystal': require('./assets/items12/aircrystal.png'),\r\n  'IMG_FlashBomb': require('./assets/items12/flashbomb.png'),\r\n  'IMG_Mine': require('./assets/items12/mine.png'),\r\n  'IMG_GasMine': require('./assets/items12/gasmine.png'),\r\n  'IMG_FlashMine': require('./assets/items12/flashmine.png'),\r\n  'IMG_ExplosiveCharge': require('./assets/items12/explosivecharge.png'),\r\n  'IMG_HealingPotion': require('./assets/items12/healingpotion.png'),\r\n  'IMG_SpeedPotion': require('./assets/items12/speedpotion.png'),\r\n  'IMG_BreathPotion': require('./assets/items12/breathpotion.png'),\r\n  'IMG_InvisibilityPotion': require('./assets/items12/invisibilitypotion.png'),\r\n  'IMG_SlowfallPotion': require('./assets/items12/slowfallpotion.png'),\r\n  'IMG_HolyWaterVial': require('./assets/items12/holywatervial.png'),\r\n  'IMG_Footlocker': require('./assets/items12/footlocker.png'),\r\n  'IMG_Chest_Blue': require('./assets/items12/chest_blue.png'),\r\n  'IMG_Chest_Precursor': require('./assets/items12/chest_precursor.png'),\r\n  'IMG_CoinBox': require('./assets/items12/coinbox.png'),\r\n  'IMG_Strongbox': require('./assets/items12/strongbox.png'),\r\n  'IMG_Safe': require('./assets/items12/safe.png'),\r\n  'IMG_Lockpick_Square': require('./assets/items12/lockpick_square.png'),\r\n  'IMG_Lockpick_Triangle': require('./assets/items12/lockpick_triangle.png'),\r\n  'IMG_Key_Gold': require('./assets/items12/key_gold.png'),\r\n  'IMG_Key_Silver': require('./assets/items12/key_silver.png'),\r\n  'IMG_Key_Black': require('./assets/items12/key_black.png'),\r\n  'IMG_Key_Yellow': require('./assets/items12/key_yellow.png'),\r\n  'IMG_Key_Blue': require('./assets/items12/key_blue.png'),\r\n  'IMG_Key_Red': require('./assets/items12/key_red.png'),\r\n  'IMG_Key_Orange': require('./assets/items12/key_orange.png'),\r\n  'IMG_Keyring': require('./assets/items12/keyring.png'),\r\n  'IMG_MageKey_Water': require('./assets/items12/magekey_water.png'),\r\n  'IMG_MageKey_Earth': require('./assets/items12/magekey_earth.png'),\r\n  'IMG_MageKey_Air': require('./assets/items12/magekey_air.png'),\r\n  'IMG_MageKey_Fire': require('./assets/items12/magekey_fire.png'),\r\n  'IMG_MageKey_Treasure': require('./assets/items12/magekey_treasure.png'),\r\n  'IMG_PortalKey': require('./assets/items12/portalkey.png'),\r\n  'IMG_GearKey_Metal': require('./assets/items12/gearkey_metal.png'),\r\n  'IMG_GearKey_Silver': require('./assets/items12/gearkey_silver.png'),\r\n  'IMG_GearKey_Bronze': require('./assets/items12/gearkey_bronze.png'),\r\n  'IMG_Candle': require('./assets/items12/candle.png'),\r\n  'IMG_Flare': require('./assets/items12/flare.png'),\r\n  'IMG_Compass': require('./assets/items12/compass.png'),\r\n  'IMG_ScoutingOrb': require('./assets/items12/scoutingorb.png'),\r\n  'IMG_Birdcall': require('./assets/items12/birdcall.png'),\r\n  'IMG_FrogbeastEgg': require('./assets/items12/frogbeastegg.png'),\r\n  'IMG_Loaf': require('./assets/items12/loaf.png'),\r\n  'IMG_Carrot': require('./assets/items12/carrot.png'),\r\n  'IMG_Cucumber': require('./assets/items12/cucumber.png'),\r\n  'IMG_Apple': require('./assets/items12/apple.png'),\r\n  'IMG_Fruit': require('./assets/items12/fruit.png'),\r\n  'IMG_Cheese': require('./assets/items12/cheese.png'),\r\n  'IMG_DeerLeg': require('./assets/items12/deerleg.png'),\r\n  'IMG_Letter': require('./assets/items12/letter.png'),\r\n  'IMG_CrumpledPaper': require('./assets/items12/crumpledpaper.png'),\r\n  'IMG_UnrolledScroll': require('./assets/items12/unrolledscroll.png'),\r\n  'IMG_RolledScroll': require('./assets/items12/rolledscroll.png'),\r\n  'IMG_Papyrus': require('./assets/items12/papyrus.png'),\r\n  'IMG_PrecursorScroll_Flat': require('./assets/items12/precursorscroll_flat.png'),\r\n  'IMG_PrecursorScroll_Round': require('./assets/items12/precursorscroll_round.png'),\r\n  'IMG_Blueprints': require('./assets/items12/blueprints.png'),\r\n  'IMG_Playbill': require('./assets/items12/playbill.png'),\r\n  'IMG_Book_Green': require('./assets/items12/book_green.png'),\r\n  'IMG_Book_Red': require('./assets/items12/book_red.png'),\r\n  'IMG_Book_Purple': require('./assets/items12/book_purple.png'),\r\n  'IMG_Book_Hammerite': require('./assets/items12/book_hammerite.png'),\r\n  'IMG_Book_Mechanist': require('./assets/items12/book_mechanist.png'),\r\n  'IMG_Book_Pagan': require('./assets/items12/book_pagan.png'),\r\n  'IMG_Book_Keeper': require('./assets/items12/book_keeper.png'),\r\n  'IMG_Book_Ash': require('./assets/items12/book_ash.png'),\r\n  'IMG_Handkerchief': require('./assets/items12/handkerchief.png'),\r\n  'IMG_Flute': require('./assets/items12/flute.png'),\r\n  'IMG_Dewdrop': require('./assets/items12/dewdrop.png'),\r\n  'IMG_Lever': require('./assets/items12/lever.png'),\r\n  'IMG_ValveKnob': require('./assets/items12/valveknob.png'),\r\n  'IMG_WheelPeg': require('./assets/items12/wheelpeg.png'),\r\n  'IMG_Mixture': require('./assets/items12/mixture.png'),\r\n  'IMG_SteelPlate': require('./assets/items12/steelplate.png'),\r\n  'IMG_IronChassis': require('./assets/items12/ironchassis.png'),\r\n  'IMG_Gauge': require('./assets/items12/gauge.png'),\r\n  'IMG_SpringWiring': require('./assets/items12/springwiring.png'),\r\n  'IMG_BantamNode': require('./assets/items12/bantamnode.png'),\r\n  'IMG_MineBulb': require('./assets/items12/minebulb.png'),\r\n  'IMG_FluxSpheroid': require('./assets/items12/fluxspheroid.png'),\r\n  'IMG_RegulatingRound': require('./assets/items12/regulatinground.png'),\r\n  'IMG_HolyHammer': require('./assets/items12/holyhammer.png'),\r\n  'IMG_HolySymbol': require('./assets/items12/holysymbol.png'),\r\n  'IMG_BlessedHolySymbol': require('./assets/items12/blessedholysymbol.png'),\r\n  'IMG_Multimold_Hammer': require('./assets/items12/multimold_hammer.png'),\r\n  'IMG_Multimold_Symbol': require('./assets/items12/multimold_symbol.png'),\r\n  'IMG_Multimold_Key': require('./assets/items12/multimold_key.png'),\r\n  'IMG_Multimold_Hilt': require('./assets/items12/multimold_hilt.png'),\r\n  'IMG_Multimold_Gear': require('./assets/items12/multimold_gear.png'),\r\n  'IMG_Multimold_Knob': require('./assets/items12/multimold_knob.png'),\r\n  'IMG_Multimold_Lever': require('./assets/items12/multimold_lever.png'),\r\n  'IMG_RosaryBeads': require('./assets/items12/rosarybeads.png'),\r\n  'IMG_BuildersChisel': require('./assets/items12/builderschisel.png'),\r\n  'IMG_PuttyKnife': require('./assets/items12/puttyknife.png'),\r\n  'IMG_WaxImpression': require('./assets/items12/waximpression.png'),\r\n  'IMG_Phonograph': require('./assets/items12/phonograph.png'),\r\n  'IMG_RustGasContainer': require('./assets/items12/rustgascontainer.png'),\r\n  'IMG_SignalBolt': require('./assets/items12/signalbolt.png'),\r\n  'IMG_Stage1Piece': require('./assets/items12/stage1piece.png'),\r\n  'IMG_Stage2Piece': require('./assets/items12/stage2piece.png'),\r\n  'IMG_Stage3Piece': require('./assets/items12/stage3piece.png'),\r\n  'IMG_GuidingBeacon': require('./assets/items12/guidingbeacon.png'),\r\n  'IMG_ShippingLabel': require('./assets/items12/shippinglabel.png'),\r\n  'IMG_Cuckoo': require('./assets/items12/cuckoo.png'),\r\n  'IMG_SilverScepter': require('./assets/items12/silverscepter.png'),\r\n  'IMG_HornOfQuintus': require('./assets/items12/hornofquintus.png'),\r\n  'IMG_NavigationGlobe': require('./assets/items12/navigationglobe.png'),\r\n  'IMG_Painting_Truart': require('./assets/items12/painting_truart.png'),\r\n  'IMG_Painting_Abduction': require('./assets/items12/painting_abduction.png'),\r\n  'IMG_Painting_Wildfell': require('./assets/items12/painting_wildfell.png'),\r\n  'IMG_Painting_Comparisons': require('./assets/items12/painting_comparisons.png'),\r\n  'IMG_Painting_Pheasant': require('./assets/items12/painting_pheasant.png'),\r\n  'IMG_PrecursorMask_Sun': require('./assets/items12/precursormask_sun.png'),\r\n  'IMG_PrecursorMask_Wood': require('./assets/items12/precursormask_wood.png'),\r\n  'IMG_Cultivator': require('./assets/items12/cultivator.png'),\r\n  'IMG_HandOfGlory': require('./assets/items12/handofglory.png'),\r\n  'IMG_GoldenBone_Skull': require('./assets/items12/goldenbone_skull.png'),\r\n  'IMG_GoldenBone_RightArm': require('./assets/items12/goldenbone_rightarm.png'),\r\n  'IMG_GoldenBone_LeftArm': require('./assets/items12/goldenbone_leftarm.png'),\r\n  'IMG_GoldenBone_RightLeg': require('./assets/items12/goldenbone_rightleg.png'),\r\n  'IMG_GoldenBone_LeftLeg': require('./assets/items12/goldenbone_leftleg.png'),\r\n  'IMG_KeeperMedallion': require('./assets/items12/keepermedallion.png'),\r\n  'IMG_RubyStone': require('./assets/items12/rubystone.png'),\r\n  'IMG_TheEye': require('./assets/items12/theeye.png'),\r\n  'IMG_TalismanOfEarth': require('./assets/items12/talismanofearth.png'),\r\n  'IMG_TalismanOfFire': require('./assets/items12/talismanoffire.png'),\r\n  'IMG_TalismanOfWater': require('./assets/items12/talismanofwater.png'),\r\n  'IMG_TalismanOfAir': require('./assets/items12/talismanofair.png'),\r\n\r\n  // -- JUNK (1 & 2) --\r\n  'IMG_NormalCrate': require('./assets/items12/normalcrate.png'),\r\n  'IMG_OldCrate': require('./assets/items12/oldcrate.png'),\r\n  'IMG_ToolCrate': require('./assets/items12/toolcrate.png'),\r\n  'IMG_WoodenSpoon': require('./assets/items12/woodenspoon.png'),\r\n  'IMG_Knife': require('./assets/items12/knife.png'),\r\n  'IMG_Cleaver': require('./assets/items12/cleaver.png'),\r\n  'IMG_WoodenBowl': require('./assets/items12/woodenbowl.png'),\r\n  'IMG_MetalBowl': require('./assets/items12/metalbowl.png'),\r\n  'IMG_MetalPlate': require('./assets/items12/metalplate.png'),\r\n  'IMG_CeramicPlate': require('./assets/items12/ceramicplate.png'),\r\n  'IMG_OrnatePlate': require('./assets/items12/ornateplate.png'),\r\n  'IMG_MetalTray': require('./assets/items12/metaltray.png'),\r\n  'IMG_WoodenGoblet': require('./assets/items12/woodengoblet.png'),\r\n  'IMG_MetalGoblet': require('./assets/items12/metalgoblet.png'),\r\n  'IMG_GreenBottle': require('./assets/items12/greenbottle.png'),\r\n  'IMG_GrayBottle': require('./assets/items12/graybottle.png'),\r\n  'IMG_SetOfBottles': require('./assets/items12/setofbottles.png'),\r\n  'IMG_Skillet': require('./assets/items12/skillet.png'),\r\n  'IMG_Saucepan': require('./assets/items12/saucepan.png'),\r\n  'IMG_CookingPot': require('./assets/items12/cookingpot.png'),\r\n  'IMG_Canister_Flour': require('./assets/items12/canister_flour.png'),\r\n  'IMG_Canister_Sugar': require('./assets/items12/canister_sugar.png'),\r\n  'IMG_Canister_Salt': require('./assets/items12/canister_salt.png'),\r\n  'IMG_Canister_UnmarkedLarge': require('./assets/items12/canister_unmarkedlarge.png'),\r\n  'IMG_Canister_UnmarkedSmall': require('./assets/items12/canister_unmarkedsmall.png'),\r\n  'IMG_MetalBucket': require('./assets/items12/metalbucket.png'),\r\n  'IMG_BrownHerbs': require('./assets/items12/brownherbs.png'),\r\n  'IMG_GreenHerbs': require('./assets/items12/greenherbs.png'),\r\n  'IMG_Barrel': require('./assets/items12/barrel.png'),\r\n  'IMG_PowderKeg': require('./assets/items12/powderkeg.png'),\r\n  'IMG_Dress': require('./assets/items12/dress.png'),\r\n  'IMG_HairBrush': require('./assets/items12/hairbrush.png'),\r\n  'IMG_HandMirror': require('./assets/items12/handmirror.png'),\r\n  'IMG_ReadingGlasses': require('./assets/items12/readingglasses.png'),\r\n  'IMG_Bedroll': require('./assets/items12/bedroll.png'),\r\n  'IMG_DeckOfCards': require('./assets/items12/deckofcards.png'),\r\n  'IMG_PairOfDice': require('./assets/items12/pairofdice.png'),\r\n  'IMG_Basketball': require('./assets/items12/basketball.png'),\r\n  'IMG_PottedPlant': require('./assets/items12/pottedplant.png'),\r\n  'IMG_LeafyPlant': require('./assets/items12/leafyplant.png'),\r\n  'IMG_Vase': require('./assets/items12/vase.png'),\r\n  'IMG_DecorativeVase_Neck': require('./assets/items12/decorativevase_neck.png'),\r\n  'IMG_DecorativeVase_Wide': require('./assets/items12/decorativevase_wide.png'),\r\n  'IMG_Banner_Globe': require('./assets/items12/banner_globe.png'),\r\n  'IMG_Rowboat': require('./assets/items12/rowboat.png'),\r\n  'IMG_Anchor': require('./assets/items12/anchor.png'),\r\n  'IMG_NavigatorsCompass': require('./assets/items12/navigatorscompass.png'),\r\n  'IMG_ChartCompass': require('./assets/items12/chartcompass.png'),\r\n  'IMG_Sextant': require('./assets/items12/sextant.png'),\r\n  'IMG_Spade': require('./assets/items12/spade.png'),\r\n  'IMG_Pick': require('./assets/items12/pick.png'),\r\n  'IMG_DrillingMachine': require('./assets/items12/drillingmachine.png'),\r\n  'IMG_LeverHandle': require('./assets/items12/leverhandle.png'),\r\n  'IMG_UpDownSwitch': require('./assets/items12/updownswitch.png'),\r\n  'IMG_Doorknob': require('./assets/items12/doorknob.png'),\r\n  'IMG_BrokenArrow': require('./assets/items12/brokenarrow.png'),\r\n  'IMG_SwordHilt': require('./assets/items12/swordhilt.png'),\r\n  'IMG_Warhammer': require('./assets/items12/warhammer.png'),\r\n  'IMG_SmallHammer': require('./assets/items12/smallhammer.png'),\r\n  'IMG_StoneHammer': require('./assets/items12/stonehammer.png'),\r\n  'IMG_AncientHammer': require('./assets/items12/ancienthammer.png'),\r\n  'IMG_MechanistMace': require('./assets/items12/mechanistmace.png'),\r\n  'IMG_Rubble': require('./assets/items12/rubble.png'),\r\n  'IMG_Boulder': require('./assets/items12/boulder.png'),\r\n  'IMG_StatueFragment_Head': require('./assets/items12/statuefragment_head.png'),\r\n  'IMG_StatueFragment_RightTorso': require('./assets/items12/statuefragment_righttorso.png'),\r\n  'IMG_StatueFragment_LeftTorso': require('./assets/items12/statuefragment_lefttorso.png'),\r\n  'IMG_CthulhuStatue': require('./assets/items12/cthulhustatue.png'),\r\n  'IMG_FrozenFish': require('./assets/items12/frozenfish.png'),\r\n  'IMG_Rat': require('./assets/items12/rat.png'),\r\n  'IMG_DeadBurrick': require('./assets/items12/deadburrick.png'),\r\n  'IMG_SewerSpider': require('./assets/items12/sewerspider.png'),\r\n  'IMG_MonkeyHead': require('./assets/items12/monkeyhead.png'),\r\n  'IMG_HammeriteZombieHead': require('./assets/items12/hammeritezombiehead.png'),\r\n  'IMG_HammeriteZombieTorso': require('./assets/items12/hammeritezombietorso.png'),\r\n  'IMG_HammeriteZombieArm': require('./assets/items12/hammeritezombiearm.png'),\r\n  'IMG_HammeriteZombieWaist': require('./assets/items12/hammeritezombiewaist.png'),\r\n  'IMG_HammeriteZombieLeg': require('./assets/items12/hammeritezombieleg.png'),\r\n  'IMG_Skull': require('./assets/items12/skull.png'),\r\n  'IMG_Ribcage': require('./assets/items12/ribcage.png'),\r\n  'IMG_SkeletalArm': require('./assets/items12/skeletalarm.png'),\r\n  'IMG_Tibia': require('./assets/items12/tibia.png'),\r\n  'IMG_WoodenBoard': require('./assets/items12/woodenboard.png'),\r\n  'IMG_Nightstand': require('./assets/items12/nightstand.png'),\r\n  'IMG_Gear': require('./assets/items12/gear.png'),\r\n  'IMG_LaboratoryEquipment': require('./assets/items12/laboratoryequipment.png'),\r\n  'IMG_BunsenBurner': require('./assets/items12/bunsenburner.png'),\r\n  'IMG_CrookedPole': require('./assets/items12/crookedpole.png'),\r\n  'IMG_GlassTools': require('./assets/items12/glasstools.png'),\r\n  'IMG_Broom': require('./assets/items12/broom.png'),\r\n  'IMG_PaperTray': require('./assets/items12/papertray.png'),\r\n  'IMG_Lantern': require('./assets/items12/lantern.png'),\r\n  'IMG_Floodlight': require('./assets/items12/floodlight.png'),\r\n  'IMG_JunkWax': require('./assets/items12/junkwax.png'),\r\n  'IMG_DivingHelmet': require('./assets/items12/divinghelmet.png'),\r\n  'IMG_Scarecrow': require('./assets/items12/scarecrow.png'),\r\n\r\n  // -- LOOT (FMs) --\r\n  'IMG_Painting_Highway1': require('./assets/itemsFM/painting_highway1.png'),\r\n  'IMG_Painting_Highway2': require('./assets/itemsFM/painting_highway2.png'),\r\n\r\n  // -- ITEMS (FMs) --\r\n  'IMG_MoonblackCandle': require('./assets/itemsFM/moonblackcandle.png'),\r\n  'IMG_StaffOfAssizi': require('./assets/itemsFM/staffofassizi.png'),\r\n\r\n  // -- JUNK (FMs) --\r\n  'IMG_Brick': require('./assets/itemsFM/brick.png'),\r\n};\r\n\r\n// Add secret images here.\r\nconst mySecrets = {\r\n  // T2: Running Interference\r\n  'SEC_t2_interference_01': require('./assets/secrets/t2_interference_01.png'),\r\n  'SEC_t2_interference_02': require('./assets/secrets/t2_interference_02.png'),\r\n  'SEC_t2_interference_03': require('./assets/secrets/t2_interference_03.png'),\r\n  // T2: Shipping ... and Receiving\r\n  'SEC_t2_shipping_01': require('./assets/secrets/t2_shipping_01.png'),\r\n  'SEC_t2_shipping_02': require('./assets/secrets/t2_shipping_02.png'),\r\n  'SEC_t2_shipping_03': require('./assets/secrets/t2_shipping_03.png'),\r\n  'SEC_t2_shipping_04': require('./assets/secrets/t2_shipping_04.png'),\r\n  'SEC_t2_shipping_05': require('./assets/secrets/t2_shipping_05.png'),\r\n  'SEC_t2_shipping_06a': require('./assets/secrets/t2_shipping_06a.png'),\r\n  'SEC_t2_shipping_06b': require('./assets/secrets/t2_shipping_06b.png'),\r\n  'SEC_t2_shipping_07': require('./assets/secrets/t2_shipping_07.png'),\r\n  'SEC_t2_shipping_08': require('./assets/secrets/t2_shipping_08.png'),\r\n  'SEC_t2_shipping_09': require('./assets/secrets/t2_shipping_09.png'),\r\n  'SEC_t2_shipping_10': require('./assets/secrets/t2_shipping_10.png'),\r\n  'SEC_t2_shipping_11': require('./assets/secrets/t2_shipping_11.png'),\r\n  'SEC_t2_shipping_12': require('./assets/secrets/t2_shipping_12.png'),\r\n  'SEC_t2_shipping_13': require('./assets/secrets/t2_shipping_13.png'),\r\n  'SEC_t2_shipping_14': require('./assets/secrets/t2_shipping_14.png'),\r\n  // T2: Framed\r\n  'SEC_t2_framed_01a': require('./assets/secrets/t2_framed_01a.png'),\r\n  'SEC_t2_framed_01b': require('./assets/secrets/t2_framed_01b.png'),\r\n  'SEC_t2_framed_02a': require('./assets/secrets/t2_framed_02a.png'),\r\n  'SEC_t2_framed_02b': require('./assets/secrets/t2_framed_02b.png'),\r\n  'SEC_t2_framed_03': require('./assets/secrets/t2_framed_03.png'),\r\n  'SEC_t2_framed_04': require('./assets/secrets/t2_framed_04.png'),\r\n  'SEC_t2_framed_05a': require('./assets/secrets/t2_framed_05a.png'),\r\n  'SEC_t2_framed_05b': require('./assets/secrets/t2_framed_05b.png'),\r\n  'SEC_t2_framed_06a': require('./assets/secrets/t2_framed_06a.png'),\r\n  'SEC_t2_framed_06b': require('./assets/secrets/t2_framed_06b.png'),\r\n  'SEC_t2_framed_07a': require('./assets/secrets/t2_framed_07a.png'),\r\n  'SEC_t2_framed_07b': require('./assets/secrets/t2_framed_07b.png'),\r\n  'SEC_t2_framed_08a': require('./assets/secrets/t2_framed_08a.png'),\r\n  'SEC_t2_framed_08b': require('./assets/secrets/t2_framed_08b.png'),\r\n  'SEC_t2_framed_09a': require('./assets/secrets/t2_framed_09a.png'),\r\n  'SEC_t2_framed_09b': require('./assets/secrets/t2_framed_09b.png'),\r\n  // T2: Eavesdropping\r\n  'SEC_t2_eavesdropping_01': require('./assets/secrets/t2_eavesdropping_01.png'),\r\n  // T2: First City Bank and Trust\r\n  'SEC_t2_bank_01': require('./assets/secrets/t2_bank_01.png'),\r\n  'SEC_t2_bank_02': require('./assets/secrets/t2_bank_02.png'),\r\n  // T2: Blackmail\r\n  'SEC_t2_blackmail_01': require('./assets/secrets/t2_blackmail_01.png'),\r\n  'SEC_t2_blackmail_02': require('./assets/secrets/t2_blackmail_02.png'),\r\n  'SEC_t2_blackmail_03a': require('./assets/secrets/t2_blackmail_03a.png'),\r\n  'SEC_t2_blackmail_03b': require('./assets/secrets/t2_blackmail_03b.png'),\r\n  'SEC_t2_blackmail_04': require('./assets/secrets/t2_blackmail_04.png'),\r\n  'SEC_t2_blackmail_05a': require('./assets/secrets/t2_blackmail_05a.png'),\r\n  'SEC_t2_blackmail_05b': require('./assets/secrets/t2_blackmail_05b.png'),\r\n  'SEC_t2_blackmail_06': require('./assets/secrets/t2_blackmail_06.png'),\r\n  // T2: Trace the Courier\r\n  'SEC_t2_courier_01a': require('./assets/secrets/t2_courier_01a.png'),\r\n  'SEC_t2_courier_01b': require('./assets/secrets/t2_courier_01b.png'),\r\n  // T2: Life of the Party\r\n  'SEC_t2_party_01': require('./assets/secrets/t2_party_01.png'),\r\n  'SEC_t2_party_02': require('./assets/secrets/t2_party_02.png'),\r\n  'SEC_t2_party_03': require('./assets/secrets/t2_party_03.png'),\r\n  'SEC_t2_party_04': require('./assets/secrets/t2_party_04.png'),\r\n  'SEC_t2_party_05': require('./assets/secrets/t2_party_05.png'),\r\n  'SEC_t2_party_06': require('./assets/secrets/t2_party_06.png'),\r\n  'SEC_t2_party_07': require('./assets/secrets/t2_party_07.png'),\r\n  // T2: Precious Cargo\r\n  'SEC_t2_cargo_01': require('./assets/secrets/t2_cargo_01.png'),\r\n  // T2: Kidnap\r\n  'SEC_t2_kidnap_01': require('./assets/secrets/t2_kidnap_01.png'),\r\n  // T2: Casing the Joint\r\n  'SEC_t2_casing_01a': require('./assets/secrets/t2_casing_01a.png'),\r\n  'SEC_t2_casing_01b': require('./assets/secrets/t2_casing_01b.png'),\r\n  'SEC_t2_casing_02a': require('./assets/secrets/t2_casing_02a.png'),\r\n  'SEC_t2_casing_02b': require('./assets/secrets/t2_casing_02b.png'),\r\n  'SEC_t2_casing_03': require('./assets/secrets/t2_casing_03.png'),\r\n  'SEC_t2_casing_04a': require('./assets/secrets/t2_casing_04a.png'),\r\n  'SEC_t2_casing_04b': require('./assets/secrets/t2_casing_04b.png'),\r\n  'SEC_t2_casing_04c': require('./assets/secrets/t2_casing_04c.png'),\r\n  'SEC_t2_casing_04d': require('./assets/secrets/t2_casing_04d.png'),\r\n  'SEC_t2_casing_04e': require('./assets/secrets/t2_casing_04e.png'),\r\n  'SEC_t2_casing_05a': require('./assets/secrets/t2_casing_05a.png'),\r\n  'SEC_t2_casing_05b': require('./assets/secrets/t2_casing_05b.png'),\r\n  'SEC_t2_casing_05c': require('./assets/secrets/t2_casing_05c.png'),\r\n  'SEC_t2_casing_05d': require('./assets/secrets/t2_casing_05d.png'),\r\n  'SEC_t2_casing_05e': require('./assets/secrets/t2_casing_05e.png'),\r\n  'SEC_t2_casing_06a': require('./assets/secrets/t2_casing_06a.png'),\r\n  'SEC_t2_casing_06b': require('./assets/secrets/t2_casing_06b.png'),\r\n  'SEC_t2_casing_07a': require('./assets/secrets/t2_casing_07a.png'),\r\n  'SEC_t2_casing_07b': require('./assets/secrets/t2_casing_07b.png'),\r\n  'SEC_t2_casing_07c': require('./assets/secrets/t2_casing_07c.png'),\r\n  'SEC_t2_casing_07d': require('./assets/secrets/t2_casing_07d.png'),\r\n  'SEC_t2_casing_08': require('./assets/secrets/t2_casing_08.png'),\r\n  'SEC_t2_casing_09a': require('./assets/secrets/t2_casing_09a.png'),\r\n  'SEC_t2_casing_09b': require('./assets/secrets/t2_casing_09b.png'),\r\n  // T2: Masks\r\n  'SEC_t2_masks_01a': require('./assets/secrets/t2_masks_01a.png'),\r\n  'SEC_t2_masks_01b': require('./assets/secrets/t2_masks_01b.png'),\r\n  'SEC_t2_masks_02a': require('./assets/secrets/t2_masks_02a.png'),\r\n  'SEC_t2_masks_02b': require('./assets/secrets/t2_masks_02b.png'),\r\n  'SEC_t2_masks_03': require('./assets/secrets/t2_masks_03.png'),\r\n  'SEC_t2_masks_04a': require('./assets/secrets/t2_masks_04a.png'),\r\n  'SEC_t2_masks_04b': require('./assets/secrets/t2_masks_04b.png'),\r\n  'SEC_t2_masks_04c': require('./assets/secrets/t2_masks_04c.png'),\r\n  'SEC_t2_masks_04d': require('./assets/secrets/t2_masks_04d.png'),\r\n  'SEC_t2_masks_04e': require('./assets/secrets/t2_masks_04e.png'),\r\n  'SEC_t2_masks_05a': require('./assets/secrets/t2_masks_05a.png'),\r\n  'SEC_t2_masks_05b': require('./assets/secrets/t2_masks_05b.png'),\r\n  'SEC_t2_masks_05c': require('./assets/secrets/t2_masks_05c.png'),\r\n  'SEC_t2_masks_05d': require('./assets/secrets/t2_masks_05d.png'),\r\n  'SEC_t2_masks_05e': require('./assets/secrets/t2_masks_05e.png'),\r\n  'SEC_t2_masks_06a': require('./assets/secrets/t2_masks_06a.png'),\r\n  'SEC_t2_masks_06b': require('./assets/secrets/t2_masks_06b.png'),\r\n  'SEC_t2_masks_07a': require('./assets/secrets/t2_masks_07a.png'),\r\n  'SEC_t2_masks_07b': require('./assets/secrets/t2_masks_07b.png'),\r\n  'SEC_t2_masks_07c': require('./assets/secrets/t2_masks_07c.png'),\r\n  'SEC_t2_masks_07d': require('./assets/secrets/t2_masks_07d.png'),\r\n  'SEC_t2_masks_08': require('./assets/secrets/t2_masks_08.png'),\r\n  'SEC_t2_masks_09a': require('./assets/secrets/t2_masks_09a.png'),\r\n  'SEC_t2_masks_09b': require('./assets/secrets/t2_masks_09b.png'),\r\n  'SEC_t2_masks_10a': require('./assets/secrets/t2_masks_10a.png'),\r\n  'SEC_t2_masks_10b': require('./assets/secrets/t2_masks_10b.png'),\r\n  'SEC_t2_masks_11a': require('./assets/secrets/t2_masks_11a.png'),\r\n  'SEC_t2_masks_11b': require('./assets/secrets/t2_masks_11b.png'),\r\n  'SEC_t2_masks_12a': require('./assets/secrets/t2_masks_12a.png'),\r\n  'SEC_t2_masks_12b': require('./assets/secrets/t2_masks_12b.png'),\r\n  // T2: Sabotage at Soulforge\r\n  'SEC_t2_soulforge_01': require('./assets/secrets/t2_soulforge_01.png'),\r\n  'SEC_t2_soulforge_02': require('./assets/secrets/t2_soulforge_02.png'),\r\n  'SEC_t2_soulforge_03': require('./assets/secrets/t2_soulforge_03.png'),\r\n  'SEC_t2_soulforge_04': require('./assets/secrets/t2_soulforge_04.png'),\r\n  // T2: The Unwelcome Guest\r\n  'SEC_t2_guest_01': require('./assets/secrets/t2_guest_01.png'),\r\n  'SEC_t2_guest_02': require('./assets/secrets/t2_guest_02.png'),\r\n  'SEC_t2_guest_03': require('./assets/secrets/t2_guest_03.png'),\r\n  'SEC_t2_guest_04': require('./assets/secrets/t2_guest_04.png'),\r\n\r\n  // FM: Hidden Agenda\r\n  'SEC_fm_agenda_01': require('./assets/secrets/fm_agenda_01.png'),\r\n  'SEC_fm_agenda_02': require('./assets/secrets/fm_agenda_02.png'),\r\n  'SEC_fm_agenda_03': require('./assets/secrets/fm_agenda_03.png'),\r\n  'SEC_fm_agenda_04': require('./assets/secrets/fm_agenda_04.png'),\r\n  // FM: Into the Maelstrom\r\n  'SEC_fm_maelstrom_01': require('./assets/secrets/fm_maelstrom_01.png'),\r\n  'SEC_fm_maelstrom_02': require('./assets/secrets/fm_maelstrom_02.png'),\r\n  'SEC_fm_maelstrom_03': require('./assets/secrets/fm_maelstrom_03.png'),\r\n  // FM: Thieves' Highway\r\n  'SEC_fm_highway_01': require('./assets/secrets/fm_highway_01.png'),\r\n  'SEC_fm_highway_02': require('./assets/secrets/fm_highway_02.png'),\r\n  'SEC_fm_highway_03': require('./assets/secrets/fm_highway_03.png'),\r\n  'SEC_fm_highway_04': require('./assets/secrets/fm_highway_04.png'),\r\n  'SEC_fm_highway_05': require('./assets/secrets/fm_highway_05.png'),\r\n};\r\n// ^^ Will these be too slow with too many lootlists and images??\r\n\r\n\r\n/* **************** */\r\n/*   LOOTLIST VIEW  */\r\n/* **************** */\r\n// Custom view component of a mission's lists of loot, items, etc.\r\nexport function LootlistView({missionName}) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // AccumLoot: tracks the values of loot selected by the user.\r\n  // Each nested array is for Normal, Hard, & Expert difficulty.\r\n  // Each index in an array is for gold, gems, goods, and total.\r\n  // Store as a Ref instead of a State to avoid unneeded re-renders.\r\n  const accumLoot = React.useRef([[0,0,0,0], [0,0,0,0], [0,0,0,0]]);\r\n\r\n  // AccumPocket: tracks the pickpockets selected by the user.\r\n  // Each index in the array is for Normal, Hard, & Expert difficulty.\r\n  // Store as a Ref instead of a State to avoid unneeded re-renders.\r\n  const accumPocket = React.useRef([0,0,0]);\r\n\r\n  // CarryLoot: tracks loot carried over from the previous mission.\r\n  // Only used if lootlist's 'carryLoot' is set to 'true'.\r\n  const [getCarryLoot, setCarryLoot] = React.useState('');\r\n\r\n  // CarryFound: tracks if carryover loot has been found.\r\n  const [getCarryFound, setCarryFound] = React.useState(false);\r\n\r\n  // FilterDiff: tracks booleans for difficulty filters.\r\n  // True = show items only available on this difficulty.\r\n  // False = hide items only available on this difficulty.\r\n  const [getFilterDiffN, setFilterDiffN] = React.useState(true);\r\n  const [getFilterDiffH, setFilterDiffH] = React.useState(true);\r\n  const [getFilterDiffX, setFilterDiffX] = React.useState(true);\r\n\r\n  // FilterMode: tracks booleans for game mode filters.\r\n  // True = show items only available on this game mode.\r\n  // False = hide items only available on this game mode.\r\n  const [getFilterModeA, setFilterModeA] = React.useState(true);\r\n  const [getFilterModeB, setFilterModeB] = React.useState(true);\r\n  const [getFilterModeC, setFilterModeC] = React.useState(true);\r\n\r\n  // FilterLoot: tracks booleans for loot filters.\r\n  // True = show loot items with this value type.\r\n  // False = hide loot items with this value type.\r\n  const [getFilterLootGold, setFilterLootGold] = React.useState(true);\r\n  const [getFilterLootGems, setFilterLootGems] = React.useState(true);\r\n  const [getFilterLootGoods, setFilterLootGoods] = React.useState(true);\r\n\r\n  // FilterArea: tracks list of selections for area filter.\r\n  // When in use, hides any items not found in selected areas.\r\n  const [getFilterArea, setFilterArea] = React.useState([]);\r\n\r\n  // LinkedFind: tracks if items and secrets are found simultaneously.\r\n  // Used to trigger multiple items/secrets at the same time.\r\n  const [getLinkedFind, setLinkedFind] = React.useState([]);\r\n\r\n  // Read data from device storage.\r\n  const readFoundLoot = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(\r\n        `@myloot_${myList[missionName].title}`\r\n      );\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        //setFoundLoot(parseArray);\r\n        accumLoot.current = parseArray;\r\n        //alert(`Loaded myloot_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read loot array.');\r\n    }\r\n  };\r\n  const readFoundPocket = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(\r\n        `@mypocket_${myList[missionName].title}`\r\n      );\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        //setFoundPocket(parseArray);\r\n        accumPocket.current = parseArray;\r\n        //alert(`Loaded mypocket_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read pocket array.');\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readFoundLoot();\r\n    readFoundPocket();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    // Wrap component in providers to utilize context.\r\n    <FoundContext.Provider value={\r\n      {accumLoot, accumPocket}\r\n    }>\r\n      <CarryoverContext.Provider value={\r\n        {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound}\r\n      }>\r\n        <FilterContext.Provider value={\r\n          {getFilterDiffN, setFilterDiffN,\r\n          getFilterDiffH, setFilterDiffH,\r\n          getFilterDiffX, setFilterDiffX,\r\n          getFilterModeA, setFilterModeA,\r\n          getFilterModeB, setFilterModeB,\r\n          getFilterModeC, setFilterModeC,\r\n          getFilterLootGold, setFilterLootGold,\r\n          getFilterLootGems, setFilterLootGems,\r\n          getFilterLootGoods, setFilterLootGoods,\r\n          getFilterArea, setFilterArea}\r\n        }>\r\n          <View style={styles.listScreen}>\r\n            {/* Mission header (screens, author, etc). */}\r\n            <View style={styles.titleHeader}>\r\n              {myList[missionName].title &&\r\n                <Text style={[\r\n                  styles.bigTitle, {color: colors.text}\r\n                ]}>\r\n                  {myList[missionName].title}\r\n                </Text>\r\n              }\r\n              {/* Display mission author(s). */}\r\n              {myList[missionName].author &&\r\n                <Text style={[\r\n                  styles.titleHeaderBy, {color: colors.text}\r\n                ]}>\r\n                  {'by '}\r\n                  {myList[missionName].author.map((authKey, authIndex) => (\r\n                    <Text key={`author_${authIndex}`}>\r\n                      {/* Put an 'and' before the last author's name. */}\r\n                      {myList[missionName].author.length === 2 &&\r\n                      authIndex === myList[missionName].author.length - 1 &&\r\n                        ' and '\r\n                      }\r\n                      {myList[missionName].author.length > 2 &&\r\n                      authIndex === myList[missionName].author.length - 1 &&\r\n                        'and '\r\n                      }\r\n                      {/* Put the name of the author(s). */}\r\n                      <Text style={styles.titleHeaderName}>\r\n                        {authKey}\r\n                      </Text>\r\n                      {/* Put a comma between names (if > 2 authors). */}\r\n                      {myList[missionName].author.length > 2 &&\r\n                      authIndex !== myList[missionName].author.length - 1 &&\r\n                        ', '\r\n                      }\r\n                    </Text>\r\n                  ))}\r\n                </Text>\r\n              }\r\n              {/* Display contest name, if applicable. */}\r\n              {myList[missionName].contest &&\r\n                <Text style={{color: colors.text}}>\r\n                  {'for the '}\r\n                  <Text style={styles.titleHeaderName}>\r\n                    {myList[missionName].contest}\r\n                  </Text>\r\n                </Text>\r\n              }\r\n              {/* Display mission screenshots. */}\r\n              {myList[missionName].screens &&\r\n                <View style={styles.imgHeaderView}>\r\n                  <Image\r\n                    source={myScreens[ myList[missionName].screens[0] ]}\r\n                    style={styles.imgHeader}\r\n                  />\r\n                  <Image\r\n                    source={myScreens[ myList[missionName].screens[1] ]}\r\n                    style={styles.imgHeader}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Display release date & latest version. */}\r\n              {myList[missionName].firstRelease &&\r\n                <Text style={[\r\n                  styles.titleHeaderDate, {color: colors.text}\r\n                ]}>\r\n                  {`Initial release: ${myList[missionName].firstRelease}`}\r\n                </Text>\r\n              }\r\n              {myList[missionName].latestVersion &&\r\n                <Text style={[\r\n                  styles.titleHeaderDate, {color: colors.text}\r\n                ]}>\r\n                  {`Latest version: ${myList[missionName].latestVersion}`}\r\n                </Text>\r\n              }\r\n            </View>\r\n            {/* Display buttons for filtering lists. */}\r\n            <Loot.FilterView\r\n              id={myList[missionName].id}\r\n              title={myList[missionName].title}\r\n              diffNames={myList[missionName].diffNames}\r\n              modeNames={myList[missionName].modeNames}\r\n              areas={myList[missionName].areas}\r\n              getLinkedFind={getLinkedFind}\r\n              setLinkedFind={setLinkedFind}\r\n            />\r\n            {/* Display the mission's loot total(s). */}\r\n            <Loot.TotalsView\r\n              title={myList[missionName].title}\r\n              diffNames={myList[missionName].diffNames}\r\n              totals={myList[missionName].totals}\r\n              goal1={myList[missionName].goal1}\r\n              goal2={myList[missionName].goal2}\r\n              pocketCount={myList[missionName].pocketCount}\r\n              carryLoot={myList[missionName].carryLoot}\r\n            />\r\n            {/* Notes section */}\r\n            {myList[missionName].notes &&\r\n              myList[missionName].notes[0].id !== 'null' &&\r\n              <>\r\n                <SectionHeader headerName=\"Notes\"/>\r\n                <View style={styles.noteView}>\r\n                  {/* Map out each entry in notes array. */}\r\n                  {myList[missionName].notes.map((noteKey, noteIndex) => (\r\n                    <View key={`note_${noteIndex}`}>\r\n                      {noteKey.show &&\r\n                        <Text style={[styles.noteText,\r\n                          {color: colors.text}]}\r\n                        >\r\n                          <Text style={styles.noteSymbol}>\r\n                            {noteKey.icon}\r\n                          </Text>\r\n                          {`: ${noteKey.desc}`}\r\n                        </Text>\r\n                      }\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n              </>\r\n            }\r\n            {/* Loot section. */}\r\n            {myList[missionName].loot &&\r\n              <>\r\n                <SectionHeader headerName=\"Loot\"/>\r\n                <View style={[\r\n                  styles.listHeader,\r\n                  {backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={styles.listHeaderText}>\r\n                    {' '}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.listView}>\r\n                  {/* Map out each entry in loot array. */}\r\n                  {myList[missionName].loot.map((lootKey, lootIndex) => (\r\n                    <Loot.LootlistEntry\r\n                      key={`loot_${lootIndex}`}\r\n                      id={lootKey.id}\r\n                      title={myList[missionName].title}\r\n                      modeNames={myList[missionName].modeNames}\r\n                      areas={myList[missionName].areas}\r\n                      notes={myList[missionName].notes}\r\n                      name={lootKey.name}\r\n                      img={lootKey.img.map((imgKey, imgIndex) => {\r\n                        return myImages[imgKey];\r\n                      })}\r\n                      values={lootKey.values}\r\n                      getLinkedFind={getLinkedFind}\r\n                      setLinkedFind={setLinkedFind}\r\n                    />\r\n                  ))}\r\n                </View>\r\n              </>\r\n            }\r\n            {/* Item section. */}\r\n            {myList[missionName].items &&\r\n              <>\r\n                <SectionHeader headerName=\"Items\"/>\r\n                <View style={[styles.listView, styles.listItemView]}>\r\n                  {/* Map out each entry in item array. */}\r\n                  {myList[missionName].items.map((itemCatKey, itemCatIndex) => (\r\n                    <View key={`itemCat_${itemCatIndex}`}>\r\n                      <View style={[\r\n                        styles.listHeader,\r\n                        {backgroundColor: colors.backDark,\r\n                        borderColor: colors.border}\r\n                      ]}>\r\n                        <Text style={styles.listHeaderText}>\r\n                          {itemCatKey.category}\r\n                        </Text>\r\n                      </View>\r\n                      <View>\r\n                        {itemCatKey.catItems.map((itemKey, itemIndex) => (\r\n                          <Loot.LootlistEntry\r\n                            key={`item_${itemIndex}`}\r\n                            id={itemKey.id}\r\n                            title={myList[missionName].title}\r\n                            modeNames={myList[missionName].modeNames}\r\n                            areas={myList[missionName].areas}\r\n                            notes={myList[missionName].notes}\r\n                            name={itemKey.name}\r\n                            img={itemKey.img.map((imgKey, imgIndex) => {\r\n                              return myImages[imgKey];\r\n                            })}\r\n                            locations={itemKey.locations}\r\n                            getLinkedFind={getLinkedFind}\r\n                            setLinkedFind={setLinkedFind}\r\n                          />\r\n                        ))}\r\n                      </View>\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n              </>\r\n            }\r\n            {/* Junk section. */}\r\n            {myList[missionName].junk &&\r\n              <>\r\n                <SectionHeader headerName=\"Junk\"/>\r\n                <View style={[styles.listView, styles.listItemView]}>\r\n                  {/* Map out each entry in junk array. */}\r\n                  {myList[missionName].junk.map((junkCatKey, junkCatIndex) => (\r\n                    <View key={`junkCat_${junkCatIndex}`}>\r\n                      <View style={[\r\n                        styles.listHeader,\r\n                        {backgroundColor: colors.backDark,\r\n                        borderColor: colors.border}\r\n                      ]}>\r\n                        <Text style={styles.listHeaderText}>\r\n                          {junkCatKey.category}\r\n                        </Text>\r\n                      </View>\r\n                      <View>\r\n                        {junkCatKey.catJunk.map((junkKey, junkIndex) => (\r\n                          <Loot.LootlistEntry\r\n                            key={`junk_${junkIndex}`}\r\n                            id={junkKey.id}\r\n                            title={myList[missionName].title}\r\n                            modeNames={myList[missionName].modeNames}\r\n                            areas={myList[missionName].areas}\r\n                            notes={myList[missionName].notes}\r\n                            name={junkKey.name}\r\n                            img={junkKey.img.map((imgKey, imgIndex) => {\r\n                              return myImages[imgKey];\r\n                            })}\r\n                            locations={junkKey.locations}\r\n                            getLinkedFind={getLinkedFind}\r\n                            setLinkedFind={setLinkedFind}\r\n                          />\r\n                        ))}\r\n                      </View>\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n              </>\r\n            }\r\n            {/* Secret section. */}\r\n            {myList[missionName].secrets &&\r\n              <View style={styles.listSecretView}>\r\n                <SectionHeader headerName=\"Secrets\"/>\r\n                <View style={[\r\n                  styles.listHeader,\r\n                  {backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={styles.listHeaderText}>\r\n                    {' '}\r\n                  </Text>\r\n                </View>\r\n                <View style={styles.listView}>\r\n                  {/* Map out each entry in secrets array. */}\r\n                  {myList[missionName].secrets.map((secKey, secIndex) => (\r\n                    <Loot.SecretEntry\r\n                      key={`sec_${secIndex}`}\r\n                      id={secKey.id}\r\n                      areas={myList[missionName].areas}\r\n                      number={secKey.number}\r\n                      img={secKey.img.map((imgKey, imgIndex) => {\r\n                        return mySecrets[imgKey];\r\n                      })}\r\n                      triggers={secKey.triggers}\r\n                      rewards={secKey.rewards}\r\n                      getLinkedFind={getLinkedFind}\r\n                      setLinkedFind={setLinkedFind}\r\n                    />\r\n                  ))}\r\n                </View>\r\n              </View>\r\n            }\r\n          </View>\r\n        </FilterContext.Provider>\r\n      </CarryoverContext.Provider>\r\n    </FoundContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*  SECTION HEADER  */\r\n/* **************** */\r\n// Custom text component showing a header for each list section.\r\n// The long strings of spaces are given a 'strikethrough' style.\r\nfunction SectionHeader(props) {\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <View style={styles.listTitleView}>\r\n      <Text style={[styles.listTitleText, {color: colors.text}]}>\r\n        <Text style={styles.listTitleLine}>\r\n          {(Platform.OS === 'web')\r\n            ? '                                        '\r\n            : '                              '\r\n          }\r\n        </Text>\r\n        {`  ${props.headerName}  `}\r\n        <Text style={styles.listTitleLine}>\r\n          {(Platform.OS === 'web')\r\n            ? '                                        '\r\n            : '                              '\r\n          }\r\n        </Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n// Define various styles here.\r\nconst styles = StyleSheet.create({\r\n  listScreen: {\r\n    width: (Platform.OS === 'web') ? 844 : '100%',\r\n  },\r\n  listView: {\r\n    width: '100%',\r\n    marginBottom: (Platform.OS === 'web') ? 10 : 5,\r\n  },\r\n  listItemView: {\r\n    width: (Platform.OS === 'web') ? 784 : '90%',\r\n  },\r\n  listSecretView: {\r\n    width: (Platform.OS === 'web') ? 785 : '100%',\r\n  },\r\n  listHeader: {\r\n    borderWidth: 1,\r\n    borderTopLeftRadius: 8,\r\n    borderBottomLeftRadius: 8,\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\r\n    padding: 2,\r\n    paddingLeft: 6,\r\n  },\r\n  listHeaderText: {\r\n    color: 'white',\r\n    fontSize: (Platform.OS === 'web') ? 12 : 10,\r\n  },\r\n  listTitleView: {\r\n    alignItems: 'center',\r\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\r\n  },\r\n  listTitleText: {\r\n    fontSize: (Platform.OS === 'web') ? 18 : 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  listTitleLine: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  titleHeader: {\r\n    alignItems: 'center',\r\n    marginVertical: 2,\r\n  },\r\n  bigTitle: {\r\n    fontFamily: 'Thief',\r\n    fontSize: (Platform.OS === 'web') ? 40 : 24,\r\n  },\r\n  titleHeaderBy: {\r\n    fontSize: (Platform.OS === 'web') ? 24 : 14,\r\n  },\r\n  titleHeaderName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  titleHeaderDate: {\r\n    fontSize: (Platform.OS === 'web') ? 16 : 10,\r\n  },\r\n  imgHeader: {\r\n    height: (Platform.OS === 'web') ? 225 : 100,\r\n    width: (Platform.OS === 'web') ? 400 : 180,\r\n    margin: 5,\r\n  },\r\n  imgHeaderView: {\r\n    flexDirection: 'row',\r\n  },\r\n  noteView: {\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginTop: 5,\r\n  },\r\n  noteText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 12,\r\n  },\r\n  noteSymbol: {\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n","//import 'react-native-gesture-handler';\nimport * as React from 'react';\n//import { Ionicons } from '@expo/vector-icons';\nimport {\n  NavigationContainer,\n  useNavigation,\n  //createNavigationContainerRef,\n  //stackActions,\n  //useIsFocused,\n  //useFocusEffect,\n  //getFocusedRouteNameFromRoute,\n  DefaultTheme,\n  DarkTheme,\n  useTheme,\n} from '@react-navigation/native';\n//import { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n//import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  createDrawerNavigator,\n  //useDrawerStatus,\n  //DrawerContentScrollView,\n  //DrawerItemList,\n  //DrawerItem,\n} from '@react-navigation/drawer';\nimport {\n  StyleSheet, Platform,\n  Image, //Alert,\n  Text, TextInput,\n  Button, //Pressable,\n  //TouchableHighlight,\n  TouchableOpacity,\n  //TouchableNativeFeedback,\n  //TouchableWithoutFeedback,\n  //FlatList, SectionList,\n  View, ScrollView,\n  // SafeAreaView,\n  // ActivityIndicator,\n  //StatusBar, BackHandler,\n  //Appearance,\n  useColorScheme,\n  //Linking,\n} from 'react-native';\n//import { AppearanceProvider, useColorScheme } from 'react-native-appearance';\n//import { Button } from 'react-native-paper';\n/*import {\n  SafeAreaProvider,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';*/\nimport * as Linking from 'expo-linking';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useFonts } from 'expo-font';\n\n// Import functions and components from other files.\nimport * as Lists from \"./Lists\";\n\n// Import contexts here.\nimport {SettingContext} from \"./Context\";\n\n// Add mission screenshots here.\nconst myScreens = {\n  // THIEF: THE DARK PROJECT\n  't1_training': require('./assets/screens/t1_training_A.png'), // A Keeper's Training\n  't1_bafford': require('./assets/screens/t1_bafford_A.png'), // Lord Bafford's Manor\n  't1_cragscleft': require('./assets/screens/t1_cragscleft_B.png'), // Break from Cragscleft Prison\n  't1_bonehoard': require('./assets/screens/t1_bonehoard_B.png'), // Down in the Bonehoard\n\n  // THIEF II: THE METAL AGE\n  't2_interference': require('./assets/screens/t2_interference_B.png'), // Running Interference\n  't2_shipping': require('./assets/screens/t2_shipping_A.png'), // Shipping ... and Receiving\n  't2_framed': require('./assets/screens/t2_framed_A.png'), // Framed\n  't2_ambush': require('./assets/screens/t2_ambush_B.png'), // Ambush\n\n  // Fan Missions\n  'fm_lampfire': require('./assets/screens/fm_lampfire_B.png'), // Autumn in Lampfire Hills\n  'fm_agenda': require('./assets/screens/fm_agenda_A.png'), // Hidden Agenda\n  'fm_maelstrom': require('./assets/screens/fm_maelstrom_B.png'), // Into the Maelstrom\n  'fm_highway': require('./assets/screens/fm_highway_A.png'), // Thieves' Highway\n};\n\n// REMINDER: Don't put comments inside return functions!\n// Unless they're inside a tag or surrounded by curly braces.\n\n// Create custom themes here.\nconst MyLightTheme = {\n  dark: false,\n  colors: {\n    ...DefaultTheme.colors,\n    border: 'black',\n    backLight: 'lightgray',\n    backMed: 'darkgray',\n    backDark: 'gray',\n    findE: 'lime',\n    findM: 'aqua',\n    findH: 'plum',\n    found: 'gold',\n    locObj: 'dodgerblue',\n    locN: 'green',\n    locH: 'blue',\n    locX: 'purple',\n    locSecret: 'crimson',\n    inputArea: 'rgb(242,242,242)',\n    inputCheck: 'rgb(242,242,242)',\n    inputBorder: 'dimgray',\n  },\n}\n\nconst MyDarkTheme = {\n  dark: true,\n  colors: {\n    ...DarkTheme.colors,\n    primary: 'gold',\n    background: 'rgb(50, 50, 50)',\n    card: 'gray',\n    //text: 'white',\n    border: 'darkgray',\n    backLight: 'dimgray',\n    backMed: 'rgb(85,85,85)',\n    backDark: 'rgb(70,70,70)',\n    findE: 'green',\n    findM: 'blue',\n    findH: 'purple',\n    found: 'olive',\n    locObj: 'skyblue',\n    locN: 'rgb(100,230,100)',\n    locH: 'aqua',\n    locX: 'rgb(230,180,230)',\n    locSecret: 'tomato',\n    inputArea: 'rgb(85,85,85)',\n    inputCheck: 'dimgray',\n    inputBorder: 'gray',\n  },\n}\n\n\n/* **************** */\n/*   GO TO MISSION  */\n/* **************** */\n// Custom button component to choose a mission's lootlist.\nfunction GoToMission({missionID, missionName}) {\n  // Access navigation object from inside component.\n  const navigation = useNavigation();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.buttonMission,\n        {backgroundColor: colors.backLight,\n        borderColor: colors.border}\n      ]}\n      // Pass mission's name as a parameter to lootlist screen.\n      onPress={() => navigation.navigate('Lootlist', {\n        missionTitle: missionID,\n      })}\n    >\n      {missionID &&\n        <Image\n          source={myScreens[missionID]}\n          style={styles.buttonImage}\n        />\n      }\n      {/* Use backquotes to denote parameters in a string. */}\n      <Text style={[\n        styles.buttonText,\n        {color: colors.text}\n      ]}>\n        {`${missionName}`}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\n\n// Create screen navigators here.\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\n\n/* **************** */\n/*  THIEF 1 SCREEN  */\n/* **************** */\n// Screen for choosing a Thief 1 mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction Thief1Screen({ navigation }) {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief 1 Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t1_training\"\n            missionName=\"A Keeper's Training\"\n          />\n          <GoToMission\n            missionID=\"t1_bafford\"\n            missionName=\"Lord Bafford's Manor\"\n          />\n          <GoToMission\n            missionID=\"t1_cragscleft\"\n            missionName=\"Break from Cragscleft Prison\"\n          />\n          <GoToMission\n            missionID=\"t1_bonehoard\"\n            missionName=\"Down in the Bonehoard\"\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  THIEF 2 SCREEN  */\n/* **************** */\n// Screen for choosing a Thief 2 mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction Thief2Screen({ navigation }) {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief 2 Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t2_interference\"\n            missionName=\"Running Interference\"\n          />\n          <GoToMission\n            missionID=\"t2_shipping\"\n            missionName=\"Shipping ... and Receiving\"\n          />\n          <GoToMission\n            missionID=\"t2_framed\"\n            missionName=\"Framed\"\n          />\n          <GoToMission\n            missionID=\"t2_ambush\"\n            missionName=\"Ambush\"\n          />\n          {/*<GoToMission\n            missionID=\"t2_guest\"\n            missionName=\"The Unwelcome Guest\"\n          />*/}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  THIEF FM SCREEN */\n/* **************** */\n// Screen for choosing a Thief fan mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction ThiefFMScreen({ navigation }) {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief Fan Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          {/*<GoToMission\n            missionID=\"t0_test\"\n            missionName=\"App Test\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t0_select\"\n            missionName=\"Select Test\"\n          />*/}\n          <GoToMission\n            missionID=\"fm_lampfire\"\n            missionName=\"Autumn in Lampfire Hills\"\n          />\n          <GoToMission\n            missionID=\"fm_agenda\"\n            missionName=\"Hidden Agenda\"\n          />\n          <GoToMission\n            missionID=\"fm_maelstrom\"\n            missionName=\"Into the Maelstrom\"\n          />\n          <GoToMission\n            missionID=\"fm_highway\"\n            missionName=\"Thieves' Highway\"\n          />\n          <GoToMission\n            missionID=\"t0_template12\"\n            missionName=\"Template 1/2\"\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  SETTINGS SCREEN */\n/* **************** */\n// Screen for changing app settings.\n// Contained in drawer navigator to separate from other screens.\nfunction SettingsScreen() {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  // Fetch global setting states from context.\n  const {getCurrentTheme, setCurrentTheme} =\n    React.useContext(SettingContext);\n\n  // Variables for checkbox icon formatting.\n  const checkSize = 14;\n  const checkColorOn = getCurrentTheme === 'dark'\n    ? 'goldenrod' : 'olive';\n  const checkColorOff = \"gray\";\n\n  function updateTheme(newTheme) {\n    setCurrentTheme(newTheme);\n    storeTheme(newTheme);\n  };\n\n  // Send data to device storage.\n  const storeTheme = async (newTheme) => {\n    try {\n      // Convert setting's state to string.\n      //const jsonSetting = JSON.stringify(newTheme);\n      await AsyncStorage.setItem(`@setting_theme`, newTheme);\n      //alert(`Saved setting_theme as ${newTheme}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <Text style={{color: colors.text}}>\n        Settings Screen\n      </Text>\n      <Text style={{color: colors.text}}>\n        WIP\n      </Text>\n\n      <View style={styles.settingRow}>\n        {/* Theme setting: system default. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"default\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"default\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"default\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"default\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={styles.settingButtonText}>\n            {` Default`}\n          </Text>\n        </TouchableOpacity>\n        {/* Theme setting: light. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"light\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"light\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"light\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"light\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={styles.settingButtonText}>\n            {` Light`}\n          </Text>\n        </TouchableOpacity>\n        {/* Theme setting: dark. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"dark\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"dark\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"dark\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"dark\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={styles.settingButtonText}>\n            {` Dark`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\n\n/* **************** */\n/*    MAP SCREEN    */\n/* **************** */\n// Screen for viewing interactive map of The City.\n// Contained in drawer navigator to separate from other screens.\nfunction MapScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <Text>Map Screen</Text>\n      <Text>WIP</Text>\n    </View>\n  );\n}\n\n\n/* **************** */\n/*  MISSION SCREEN  */\n/* **************** */\n// Screen with nested tab navigator.\n// Contained in drawer navigator to separate from other screens.\n// Tabs won't appear in other drawer screens.\nfunction MissionScreen() {\n  return (\n    <Tab.Navigator\n      screenOptions={{headerShown: false}}\n      initialRouteName=\"TDP\"\n    >\n      <Tab.Screen\n        name=\"TDP\"\n        component={Thief1Screen}\n      />\n      <Tab.Screen\n        name=\"TMA\"\n        component={Thief2Screen}\n      />\n      <Tab.Screen\n        name=\"FMs\"\n        component={ThiefFMScreen}\n      />\n    </Tab.Navigator>\n  );\n}\n\n\n/* **************** */\n/*   START SCREEN   */\n/* **************** */\n// Screen with nested drawer navigator.\n// Contained in stack navigator to allow going back in stack.\n// Drawer won't appear in other stack screens.\n// Default screen when app is opened for the first time.\nfunction StartScreen() {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen\n        name=\"Lootlists\"\n        component={MissionScreen}\n        //options={{headerShown: false}}\n      />\n      {/*<Drawer.Screen\n        name=\"City Map\"\n        component={MapScreen}\n        //options={{headerShown: false}}\n      />*/}\n      <Drawer.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        //options={{headerShown: false}}\n      />\n    </Drawer.Navigator>\n  );\n}\n\n\n/* **************** */\n/*  LOOTLIST SCREEN */\n/* **************** */\n// Screen for displaying mission lootlist.\n// Screen contents change depending on selected mission.\n// Contained in stack navigator to allow going back in stack.\n// 'route' allows screen to receive parameters.\nfunction LootlistScreen({ route }) {\n  const {missionTitle} = route.params;\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView>\n      {/*<Text>missionTitle: {missionTitle}</Text>*/}\n      <Lists.LootlistView\n        missionName={missionTitle}\n      />\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/* NOT FOUND SCREEN */\n/* **************** */\n// Screen for displaying an Error 404 message.\n// Used in web browser in case of incorrect URL.\n// Contained in stack navigator to allow going back in stack.\n// 'route' allows screen to receive parameters.\nfunction NotFoundScreen({ route }) {\n  return (\n    <View>\n      <Text>ERROR 404!</Text>\n      {route.path &&\n        <Text>{`Nothing was found at \"${route.path}\"!`}</Text>\n      }\n      {!route.path &&\n        <Text>Nothing was found here!</Text>\n      }\n    </View>\n  );\n}\n\n\n// The root of the app.\nexport default function App() {\n  // Configure URL paths to match navigation routes here.\n  const config = {\n    screens: {\n      Start: {\n        screens: {\n          Lootlists: {\n            screens: {\n              TDP: 'select/thief_1',\n              TMA: 'select/thief_2',\n              FMs: 'select/thief_fm',\n            },\n          },\n          Settings: 'settings',\n        },\n      },\n      Lootlist: 'list/:missionTitle',\n      NotFound: '*',\n    },\n  };\n\n  // Parse incoming deep links here.\n  const linking = {\n    // Prefixes allow for different schemes,\n    // whether the link comes from the client app or a standalone app.\n    // If using universal links, add domain to the prefixes list:\n    // prefixes: [Linking.createURL('/'), 'https://app.example.com'],\n    prefixes: [\n      Linking.createURL('/')\n    ],\n    config,\n  };\n\n  // Get the system's default color scheme.\n  const scheme = useColorScheme();\n\n  // Load custom fonts here.\n  const [fontsLoaded] = useFonts({\n    //'Batang': require('./assets/fonts/Batang.ttf'),\n    //'BlueHighway': require('./assets/fonts/bluehighway.ttf'),\n    'Thief': require('./assets/fonts/THIEF.ttf'),\n  });\n\n  // CurrentTheme: tracks the currently selected color theme.\n  const [getCurrentTheme, setCurrentTheme] = React.useState('default');\n\n  // Read settings from device storage.\n  const readAllSettings = async () => {\n    try {\n      // Use 'multiGet' to read multiple values at once.\n      //const jsonValues = await AsyncStorage.multiGet([`@setting_${id}`]);\n      const readTheme = await AsyncStorage.getItem(`@setting_theme`);\n      if (readTheme !== null) {\n        setCurrentTheme(readTheme);\n        //alert(`Loaded settings as ${readTheme}`);\n      }\n    } catch (e) {\n      // Error: Reading the data failed.\n      alert('Failed to read settings.');\n    }\n  };\n\n  React.useEffect(() => {\n    // When app renders, check its last saved settings.\n    readAllSettings();\n\n  }, []);\n\n  return (\n    // Wrap app root in providers to utilize context.\n    <SettingContext.Provider value={\n      {getCurrentTheme, setCurrentTheme}\n    }>\n      {/* Wrap app root in 'NavigationContainer' to use screen navigation. */}\n      <NavigationContainer\n        linking={linking}\n        fallback={<Text>Loading...</Text>}\n        theme={getCurrentTheme === 'default' && scheme === 'dark'\n          ? MyDarkTheme\n          : getCurrentTheme === 'dark'\n            ? MyDarkTheme\n            : MyLightTheme}\n        //theme={scheme === 'dark' ? MyDarkTheme : DefaultTheme}\n        //theme={MyDarkTheme}\n      >\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Start\"\n            component={StartScreen}\n            options={{headerShown: false}}\n          />\n          <Stack.Screen\n            name=\"Lootlist\"\n            component={LootlistScreen}\n            options={{headerShown: (Platform.OS === 'web') ? false : true}}\n          />\n          <Stack.Screen\n            name=\"Not Found\"\n            component={NotFoundScreen}\n            //options={{headerShown: false}}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SettingContext.Provider>\n  );\n}\n\n\n// Define various styles here.\nconst styles = StyleSheet.create({\n  buttonPage: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonView: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignContent: 'space-around',\n    justifyContent: 'center',\n  },\n  buttonMission: {\n    backgroundColor: 'lightgray',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingTop: 2,\n    margin: (Platform.OS === 'web') ? 8 : 4,\n    width: (Platform.OS === 'web') ? 280 : 190,\n    height: (Platform.OS === 'web') ? 175 : 120,\n  },\n  buttonImage: {\n    width: (Platform.OS === 'web') ? 270 : 180,\n    height: (Platform.OS === 'web') ? 150 : 100,\n  },\n  buttonText: {\n    fontSize: (Platform.OS === 'web') ? 15 : 11,\n    fontWeight: 'bold',\n  },\n  locText: {\n    //fontFamily: 'BlueHighway',\n    fontSize: 8,\n  },\n  locCount: {\n    fontWeight: 'bold',\n  },\n  locPick: {\n    fontStyle: 'italic',\n  },\n  locBox: {\n    textDecorationLine: 'underline',\n  },\n  locNoGet: {\n    textDecorationLine: 'line-through',\n  },\n  settingRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5,\n  },\n  settingButton: {\n    backgroundColor: 'lightgray',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginHorizontal: 5,\n    paddingHorizontal: 4,\n    paddingVertical: 2,\n    minWidth: 105,\n    minHeight: 27,\n  },\n  settingButtonFalse: {\n    backgroundColor: 'darkgray',\n  },\n  settingButtonText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/thief_lootlists/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [854], () => (__webpack_require__(46271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["FoundContext","createContext","CarryoverContext","FilterContext","SettingContext","iconGold","require","iconGems","iconGoods","LootlistEntry","props","colors","useTheme","_React$useContext","React","getCarryLoot","setCarryLoot","_jsxs","View","style","styles","listEntry","children","nameEntry","backgroundColor","backMed","borderColor","border","values","nameEntryLoot","img","length","_jsx","Image","source","imgStyle","ImageSwitch","Text","entryText","color","text","name","subEntry","subEntryLoot","map","valueKey","index1","Platform","OS","locations","subEntryLPV_Web","subEntryLocsPerValue","subEntryValue","value","lootRow","imgLootIcon","lootText","carryValue","subEntryLoc","subEntryLocLoot","locKey","index2","FindMe","id","title","modeNames","areas","notes","findSimple","findArea","findNarrow","findExact","findObj","findCount","findCountRecipe","findCountBox","findCountMode","findCountActual","findRecipe","findBox","findPick","findSecret","findUnable","findNote","findLink","loadout","price","getLinkedFind","setLinkedFind","index3","_props$id","_props$title","_props$findSimple","_props$findCount","_props$findCountRecip","_props$findCountBox","_props$findCountMode","_props$findLink","_props$setLinkedFind","_React$useState","_React$useState2","_slicedToArray","getIsFound","setIsFound","_React$useContext2","accumLoot","accumPocket","_React$useContext3","setCarryFound","getCarryFound","_React$useContext4","getFilterDiffN","getFilterDiffH","setFilterDiffN","getFilterDiffX","setFilterDiffH","getFilterModeA","setFilterDiffX","getFilterModeB","setFilterModeA","getFilterModeC","setFilterModeB","getFilterLootGold","setFilterModeC","getFilterLootGems","setFilterLootGold","getFilterLootGoods","setFilterLootGems","getFilterArea","setFilterLootGoods","storeIsFound","setFilterArea","_ref","_asyncToGenerator","newToggle","jsonToggle","JSON","stringify","AsyncStorage","setItem","e","alert","_x","apply","arguments","storeFoundLoot","_ref2","addFoundLoot","jsonLoot","_x2","storeFoundPocket","_ref3","addFoundPocket","jsonPocket","_x3","readIsFound","_ref4","jsonValue","getItem","parseValue","parse","activateMe","newFound","toggleMe","current","foundDiffKey","i","foundValueKey","j","newValue","foundLinkKey","k","allKey","l","pocketDiffKey","p","pocketLinkKey","q","Math","min","_toConsumableArray","type","toggle","toggleSwitch","linkKey","linkIndex","_Fragment","max","includes","TouchableOpacity","find","backLight","findE","findM","findH","found","onPress","FindMeArea","FindMePrecise","_React$useState3","_React$useState4","getDiffExclude","setDiffExclude","locText","locCount","locObj","locN","locH","locX","secret","FindMeCount","locSecret","locNoGet","locBox","locPick","delimiter","icon","_props$modeNames2","_props$findCount2","_props$findCountMode2","_props$findCountActua2","_props$findBox2","_props$findPick2","_React$useState5","_React$useState6","getDiffChange","setDiffChange","_React$useState7","_React$useState8","getModeChange","setModeChange","_React$useState9","_React$useState10","getActlChange","setActlChange","_React$useState11","_React$useState12","getDiffStack","setDiffStack","_React$useState13","_React$useState14","getModeStack","setModeStack","_React$useState15","_React$useState16","getActlStack","setActlStack","SecretEntry","_React$useState17","_React$useState18","getSecFound","setSecFound","_React$useState19","_React$useState20","getShowModal","setShowModal","_React$useContext5","storeSecFound","_ref5","newSecFound","jsonSecret","_x4","readSecFound","_ref6","parseSecret","triggerMe","triggerSwitch","secretTrigList","triggers","trigKey","trigIndex","secretTrig","secretTrigID","secretTrigOne","secretTrigTop","secretTrigMid","secretTrigBot","secretNum","number","TouchableWithoutFeedback","imgSecret","Modal","animationType","transparent","visible","onRequestClose","modalView","activeOpacity","onPressOut","secretModal","imgSecretBig","secretLoc","findDiff","secretMethod","secretText","method","secretRewardList","rewards","rewKey","rewIndex","secretRewardFlex","secretReward","rewardRoute","secretRewardText","secretRewardOther","routeKey","routeIndex","rewardLoot","rewardItem","rewardOther","_React$useState21","_React$useState22","getImageIndex","setImageIndex","imageID","setInterval","clearInterval","TotalsView","_React$useContext6","_React$useContext7","_React$useState23","_React$useState24","getFoundLoot","setFoundLoot","_React$useState25","_React$useState26","getFoundPocket","setFoundPocket","_React$useState27","_React$useState28","getShareNH","setShareNH","_React$useState29","_React$useState30","getShareHX","setShareHX","_React$useState31","_React$useState32","getShareNX","setShareNX","_React$useState33","_React$useState34","getGoalNH","setGoalNH","_React$useState35","_React$useState36","getGoalHX","setGoalHX","_React$useState37","_React$useState38","getGoalNX","setGoalNX","totals","goal1","total","gold","gems","goods","goal2","updateMe","totalView","carryLoot","carryView","carryText","TextInput","carryInput","inputBorder","inputMode","maxLength","onChangeText","over","replace","onlyNumeric","spacedView","tableHeader","tableHeadBox","sizeRowStart","backDark","tableHeadText","outerKey","a","tableRow","tableRowStart","tableRowText","diffNames","innerKey","b","tableRowBox","parseInt","info","goalKey","g","GoalView","goalLoot","totalLoot","foundLoot","pocketCount","pocketRowBox","emptyRowBox","round","FilterView","_React$useState39","_React$useState40","_React$useContext8","_React$useContext9","_React$useContext10","getCurrentTheme","checkSize","setCurrentTheme","checkColorOn","checkColorOff","removeStored","_ref7","invKeys","push","multiRemove","removeItem","allButton","waitModal","filters","filterRow","filterButton","Ionicons","size","filterTextMode","imgLootIconBig","MultipleSelectList","boxStyles","filterAreaBox","inputArea","checkBoxStyles","inputCheck","inputStyles","labelStyles","dropdownStyles","filterAreaDropdown","dropdownItemStyles","filterAreaListItem","dropdownTextStyles","filterAreaListText","badgeStyles","filterAreaBadge","badgeTextStyles","filterAreaBadgeText","data","save","setSelected","area","placeholder","label","StyleSheet","create","flexDirection","marginHorizontal","alignItems","borderWidth","borderTopLeftRadius","borderBottomLeftRadius","width","flex","justifyContent","paddingLeft","flexWrap","alignContent","padding","fontSize","textAlign","marginLeft","fontWeight","fontStyle","textDecorationLine","flexGrow","paddingHorizontal","paddingBottom","paddingVertical","paddingTop","borderRadius","height","marginVertical","marginBottom","paddingRight","minWidth","minHeight","filterTextFalse","margin","marginTop","myList","myScreens","myImages","mySecrets","LootlistView","missionName","readFoundLoot","jsonArray","parseArray","readFoundPocket","Provider","listScreen","titleHeader","bigTitle","author","titleHeaderBy","authKey","authIndex","titleHeaderName","contest","screens","imgHeaderView","imgHeader","firstRelease","titleHeaderDate","latestVersion","Loot","SectionHeader","headerName","noteView","noteKey","noteIndex","show","noteText","noteSymbol","desc","loot","listHeader","listHeaderText","listView","lootKey","lootIndex","imgKey","imgIndex","items","listItemView","itemCatKey","itemCatIndex","category","catItems","itemKey","itemIndex","junk","junkCatKey","junkCatIndex","catJunk","junkKey","junkIndex","secrets","listSecretView","secKey","secIndex","listTitleView","listTitleText","listTitleLine","fontFamily","MyLightTheme","dark","_objectSpread","DefaultTheme","MyDarkTheme","DarkTheme","primary","background","card","GoToMission","missionID","navigation","useNavigation","buttonMission","navigate","missionTitle","buttonImage","buttonText","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","Drawer","createDrawerNavigator","Thief1Screen","ScrollView","buttonPage","buttonView","Thief2Screen","ThiefFMScreen","SettingsScreen","updateTheme","newTheme","storeTheme","settingRow","settingButton","settingButtonText","MissionScreen","Navigator","screenOptions","headerShown","initialRouteName","Screen","component","StartScreen","LootlistScreen","route","params","Lists","NotFoundScreen","path","App","linking","prefixes","Linking","createURL","config","Start","Lootlists","TDP","TMA","FMs","Settings","Lootlist","NotFound","scheme","useColorScheme","_useFonts","useFonts","readAllSettings","_ref8","readTheme","NavigationContainer","fallback","theme","options","settingButtonFalse","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}