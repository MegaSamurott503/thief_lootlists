{"version":3,"file":"static/js/main.d8cd14c8.js","mappings":"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","sources":["Context.js","Loot.js","Lists.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {createContext} from 'react';\r\n\r\n// Create contexts so components can pass data to any children.\r\nexport const FoundContext = createContext();\r\nexport const CarryoverContext = createContext();\r\nexport const FilterContext = createContext();\r\nexport const SettingContext = createContext();\r\n","import * as React from 'react';\r\nimport {\r\n  //NavigationContainer,\r\n  //useNavigation,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\n//import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {\r\n  StyleSheet,\r\n  Platform,\r\n  Image, ImageBackground,\r\n  Text, TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View, ScrollView,\r\n  Modal,\r\n  PixelRatio,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MultipleSelectList } from 'react-native-dropdown-select-list';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\n//import { useFonts } from 'expo-font';\r\n\r\n// Import contexts here.\r\nimport {\r\n  FoundContext, CarryoverContext, FilterContext, SettingContext\r\n} from \"./Context\";\r\n\r\n// Add icon images here.\r\nconst iconGold = require('./assets/icon_gold.png');\r\nconst iconGems = require('./assets/icon_gems.png');\r\nconst iconGoods = require('./assets/icon_goods.png');\r\n\r\n// Add background images here.\r\nconst bgDefaultLight = require('./assets/bg_default_light.png');\r\nconst bgDefaultDark = require('./assets/bg_default_dark.png');\r\nconst bgEasyLight = require('./assets/bg_easy_light.png');\r\nconst bgEasyDark = require('./assets/bg_easy_dark.png');\r\nconst bgMediumLight = require('./assets/bg_medium_light.png');\r\nconst bgMediumDark = require('./assets/bg_medium_dark.png');\r\nconst bgHardLight = require('./assets/bg_hard_light.png');\r\nconst bgHardDark = require('./assets/bg_hard_dark.png');\r\nconst bgFoundLight = require('./assets/bg_found_light.png');\r\nconst bgFoundLightS = require('./assets/bg_found_light_small.png');\r\nconst bgFoundLightT = require('./assets/bg_found_light_tall.png');\r\nconst bgFoundDark = require('./assets/bg_found_dark.png');\r\nconst bgFoundDarkS = require('./assets/bg_found_dark_small.png');\r\nconst bgFoundDarkT = require('./assets/bg_found_dark_tall.png');\r\n\r\n\r\n/* **************** */\r\n/*  LOOTLIST ENTRY  */\r\n/* **************** */\r\n// Custom view component of a unique item and all its locations.\r\nexport function LootlistEntry(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch CarryLoot state from context.\r\n  const {getCarryLoot, setCarryLoot} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  /*function passingTest() {\r\n    alert('Test success.');\r\n  };*/\r\n\r\n  return (\r\n    <View style={styles.listEntry}>\r\n      <View style={[\r\n        styles.nameEntry,\r\n        {backgroundColor: colors.backMed,\r\n        borderColor: colors.border},\r\n        props.values && styles.nameEntryLoot\r\n      ]}>\r\n        {/* Item's image goes here. */}\r\n        {props.img.length === 1 &&\r\n          <Image\r\n            source={props.img[0]}\r\n            style={styles.imgStyle}\r\n          />\r\n        }\r\n        {/* If the item has several varieties,\r\n            switch between the images every few seconds. */}\r\n        {props.img.length > 1 &&\r\n          <ImageSwitch\r\n            img={props.img}\r\n          />\r\n        }\r\n        <Text style={[styles.entryText, {color: colors.text}]}>\r\n          {props.name}\r\n        </Text>\r\n      </View>\r\n      <View style={[\r\n        styles.subEntry, props.values && styles.subEntryLoot\r\n      ]}>\r\n        {/* For loot,\r\n            map out each entry in loot value sub-array. */}\r\n        {props.values && props.values.map((valueKey, index1) => (\r\n          <View\r\n            key={valueKey.id}\r\n            style={[\r\n              (Platform.OS === 'web' && width >= 617 &&\r\n              valueKey.locations.length < 3)\r\n              ? styles.subEntryLPV_Web\r\n              : (Platform.OS === 'web' && width < 617 &&\r\n                valueKey.locations.length === 1)\r\n                ? styles.subEntryLPV_Web\r\n                : styles.subEntryLocsPerValue\r\n            ]}\r\n          >\r\n            <View style={[\r\n              styles.subEntryValue,\r\n              {backgroundColor: colors.backMed,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              {/* Loot item's value goes here. */}\r\n              {valueKey.value && valueKey.value[0] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[0]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.value && valueKey.value[1] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[1]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.value && valueKey.value[2] > 0 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {valueKey.value[2]}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {/* Variable values for carryover loot. */}\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[0] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[1] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {valueKey.carryValue &&\r\n                valueKey.carryValue[2] === -1 &&\r\n                <View style={styles.lootRow}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                  <Text style={[styles.lootText, {color: colors.text}]}>\r\n                    {getCarryLoot}\r\n                    {!getCarryLoot && \"????\"}\r\n                  </Text>\r\n                </View>\r\n              }\r\n              {/* Edge case for loot with value of 0. */}\r\n              {valueKey.value && !valueKey.carryValue &&\r\n                valueKey.value[0] === 0 &&\r\n                valueKey.value[1] === 0 &&\r\n                valueKey.value[2] === 0 &&\r\n                <Text style={[styles.lootText, {color: colors.text}]}>\r\n                  0\r\n                </Text>\r\n              }\r\n            </View>\r\n            <View style={[styles.subEntryLoc, styles.subEntryLocLoot]}>\r\n              {/* Map out each entry in loot location sub-sub-array. */}\r\n              {valueKey.locations.map((locKey, index2) => (\r\n                <FindMe\r\n                  key={locKey.id}\r\n                  id={locKey.id}\r\n                  title={props.title}\r\n                  modeNames={props.modeNames}\r\n                  areas={props.areas}\r\n                  notes={props.notes}\r\n                  value={valueKey.value}\r\n                  carryValue={valueKey.carryValue}\r\n                  findSimple={locKey.findSimple}\r\n                  findArea={locKey.findArea}\r\n                  findNarrow={locKey.findNarrow}\r\n                  findExact={locKey.findExact}\r\n                  findObj={locKey.findObj}\r\n                  findCount={locKey.findCount}\r\n                  findCountRecipe={locKey.findCountRecipe}\r\n                  findCountBox={locKey.findCountBox}\r\n                  findCountMode={locKey.findCountMode}\r\n                  findCountActual={locKey.findCountActual}\r\n                  findRecipe={locKey.findRecipe}\r\n                  findBox={locKey.findBox}\r\n                  findPick={locKey.findPick}\r\n                  findSecret={locKey.findSecret}\r\n                  findUnable={locKey.findUnable}\r\n                  findNote={locKey.findNote}\r\n                  findLink={locKey.findLink}\r\n                  loadout={locKey.loadout}\r\n                  price={locKey.price}\r\n                  getLinkedFind={props.getLinkedFind}\r\n                  setLinkedFind={props.setLinkedFind}\r\n                  //passingTest={() => passingTest()}\r\n                />\r\n              ))}\r\n            </View>\r\n          </View>\r\n        ))}\r\n        {/* For items and junk,\r\n            map out each entry in location sub-array. */}\r\n        {props.locations &&\r\n          <View style={styles.subEntryLoc}>\r\n            {props.locations.map((locKey, index3) => (\r\n              <FindMe\r\n                key={locKey.id}\r\n                id={locKey.id}\r\n                title={props.title}\r\n                modeNames={props.modeNames}\r\n                areas={props.areas}\r\n                notes={props.notes}\r\n                value={locKey.value}\r\n                findSimple={locKey.findSimple}\r\n                findArea={locKey.findArea}\r\n                findNarrow={locKey.findNarrow}\r\n                findExact={locKey.findExact}\r\n                findObj={locKey.findObj}\r\n                findCount={locKey.findCount}\r\n                findCountRecipe={locKey.findCountRecipe}\r\n                findCountBox={locKey.findCountBox}\r\n                findCountMode={locKey.findCountMode}\r\n                findCountActual={locKey.findCountActual}\r\n                findRecipe={locKey.findRecipe}\r\n                findBox={locKey.findBox}\r\n                findPick={locKey.findPick}\r\n                findSecret={locKey.findSecret}\r\n                findUnable={locKey.findUnable}\r\n                findNote={locKey.findNote}\r\n                findLink={locKey.findLink}\r\n                loadout={locKey.loadout}\r\n                price={locKey.price}\r\n                getLinkedFind={props.getLinkedFind}\r\n                setLinkedFind={props.setLinkedFind}\r\n              />\r\n            ))}\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*      FIND ME     */\r\n/* **************** */\r\n// Custom view component of a precise location of a given item.\r\nfunction FindMe(props) {\r\n  // Use defaults to avoid errors if some props are undefined.\r\n  const {\r\n    id = '',\r\n    title = '',\r\n    modeNames = [{'name': '', 'icon': ''}],\r\n    areas = [{'key': '1', 'value': ''}],\r\n    notes = [{'delimiter': '', 'icon': ''}],\r\n    value = [0,0,0],\r\n    carryValue = [0,0,0],\r\n    findSimple = '',\r\n    findArea = 0,\r\n    findNarrow = '',\r\n    findExact = '',\r\n    findObj = false,\r\n    findCount = [1,1,1],\r\n    findCountRecipe = [1,1,1],\r\n    findCountBox = [1,1,1],\r\n    findCountMode = [-1,-1,-1],\r\n    findCountActual = [-1,-1,-1],\r\n    findRecipe = ' ',\r\n    findBox = false,\r\n    findPick = false,\r\n    findSecret = false,\r\n    findUnable = false,\r\n    findNote = 0,\r\n    findLink = [],\r\n    loadout = '',\r\n    price = 0,\r\n    getLinkedFind = getLinkedFind,\r\n    setLinkedFind = setLinkedFind,\r\n    //passingTest = passingTest,\r\n  } = props;\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // SimpleColor: tracks this item's background color & pattern.\r\n  // Used to display found status or ease of finding loot items.\r\n  const [getSimpleColor, setSimpleColor] = React.useState(bgDefaultLight);\r\n\r\n  // IsFound: tracks if this item is selected as 'found'.\r\n  // Used to change location's background color & update loot totals.\r\n  const [getIsFound, setIsFound] = React.useState(false);\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} =\r\n    React.useContext(FoundContext);\r\n\r\n  // Fetch CarryLoot and CarryFound states from context.\r\n  const {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  // Fetch FilterDiff, FilterMode, FilterLoot, and FilterArea states\r\n  // from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX,\r\n        getFilterModeA, setFilterModeA,\r\n        getFilterModeB, setFilterModeB,\r\n        getFilterModeC, setFilterModeC,\r\n        getFilterLootGold, setFilterLootGold,\r\n        getFilterLootGems, setFilterLootGems,\r\n        getFilterLootGoods, setFilterLootGoods,\r\n        getFilterArea, setFilterArea} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Save & read item's 'found'/'not found' data in device storage.\r\n  // This allows user's selections to persist,\r\n  // whether they navigate to another screen or close the app.\r\n  // This is a promise-based method, using the 'async await' syntax\r\n  // with a 'try-catch' block.\r\n  // Use the item's ID to ensure each data has a unique identifier.\r\n\r\n  // Send data to device storage.\r\n  const storeIsFound = async (newToggle) => {\r\n    try {\r\n      // Convert item's state from boolean to string.\r\n      const jsonToggle = JSON.stringify(newToggle);\r\n      await AsyncStorage.setItem(`@inventory_${id}`, jsonToggle);\r\n      //alert(`Saved inventory_${props.id} as ${jsonToggle}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save value.');\r\n    }\r\n  };\r\n\r\n  const storeFoundLoot = async (addFoundLoot) => {\r\n    try {\r\n      // Convert item's state from array to string.\r\n      const jsonLoot = JSON.stringify(addFoundLoot);\r\n      await AsyncStorage.setItem(`@myloot_${title}`, jsonLoot);\r\n      //alert(`Saved myloot_${myList[missionName].title} as ${jsonLoot}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save array.');\r\n    }\r\n  };\r\n\r\n  const storeFoundPocket = async (addFoundPocket) => {\r\n    try {\r\n      // Convert item's state from array to string.\r\n      const jsonPocket = JSON.stringify(addFoundPocket);\r\n      await AsyncStorage.setItem(`@mypocket_${title}`, jsonPocket);\r\n      //alert(`Saved mypocket_${myList[missionName].title} as ${jsonPocket}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      alert('Failed to save array.');\r\n    }\r\n  };\r\n\r\n  // Read data from device storage.\r\n  const readIsFound = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem(`@inventory_${id}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseValue = JSON.parse(jsonValue);\r\n      if (parseValue !== null) {\r\n        setIsFound(parseValue);\r\n        simpleColorSwitch(parseValue);\r\n        //alert(`Loaded inventory_${id} as ${jsonValue}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read value.');\r\n    }\r\n  };\r\n\r\n  function activateMe() {\r\n    let newFound = toggleMe(\"opposite\");\r\n\r\n    // Increment found loot per difficulty.\r\n    const addFoundLoot = accumLoot.current.map((foundDiffKey, i) => {\r\n      return foundDiffKey.map((foundValueKey, j) => {\r\n        let newValue = 0;\r\n        // Increment gold, gems, & goods.\r\n        if (j < 3 && (props.value || props.findLink)) {\r\n          // If newly selected, add...\r\n          if (newFound) {\r\n            // ...the value of this loot...\r\n            if (props.value) {\r\n              newValue = foundValueKey += (\r\n                props.value[j] *\r\n                findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n              );\r\n            }\r\n            // ...and the value of any linked loot.\r\n            if (props.findLink) {\r\n              props.findLink.map((foundLinkKey, k) => {\r\n                if (foundLinkKey.value) {\r\n                  newValue += (\r\n                    foundLinkKey.value[j] * foundLinkKey.findCount[i]\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            return newValue;\r\n          // If newly deselected, subtract...\r\n          } else {\r\n            // ...the value of this loot...\r\n            if (props.value) {\r\n              newValue = foundValueKey -= (\r\n                props.value[j] *\r\n                findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n              );\r\n            }\r\n            // ...and the value of any linked loot.\r\n            if (props.findLink) {\r\n              props.findLink.map((foundLinkKey, k) => {\r\n                if (foundLinkKey.value) {\r\n                  newValue -= (\r\n                    foundLinkKey.value[j] * foundLinkKey.findCount[i]\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            return newValue;\r\n          }\r\n        // Increment total loot.\r\n        } else if (j === 3 && (props.value || props.findLink)) {\r\n          // If newly selected, add...\r\n          if (newFound) {\r\n            // ...the value of this loot...\r\n            if (props.value) {\r\n              newValue = foundValueKey += (\r\n                (props.value[0] + props.value[1] + props.value[2]) *\r\n                findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n              );\r\n            }\r\n            // ...and the value of any linked loot.\r\n            if (props.findLink) {\r\n              props.findLink.map((allKey, l) => {\r\n                if (allKey.value) {\r\n                  newValue += (\r\n                    (allKey.value[0] + allKey.value[1] + allKey.value[2]) *\r\n                    allKey.findCount[i]\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            return newValue;\r\n          // If newly deselected, subtract...\r\n          } else {\r\n            // ...the value of this loot...\r\n            if (props.value) {\r\n              newValue = foundValueKey -= (\r\n                (props.value[0] + props.value[1] + props.value[2]) *\r\n                findCount[i] * findCountRecipe[i] * findCountBox[i]\r\n              );\r\n            }\r\n            // ...and the value of any linked loot.\r\n            if (props.findLink) {\r\n              props.findLink.map((allKey, l) => {\r\n                if (allKey.value) {\r\n                  newValue -= (\r\n                    (allKey.value[0] + allKey.value[1] + allKey.value[2]) *\r\n                    allKey.findCount[i]\r\n                  );\r\n                }\r\n              });\r\n            }\r\n            return newValue;\r\n          }\r\n        }\r\n      });\r\n    });\r\n    if ((props.value || props.findLink) && !props.carryValue) {\r\n      //setFoundLoot(addFoundLoot);\r\n      //alert(`${addFoundLoot}`);\r\n      accumLoot.current = addFoundLoot;\r\n      storeFoundLoot(addFoundLoot);\r\n    }\r\n\r\n    // Increment found pickpockets per difficulty.\r\n    const addFoundPocket = accumPocket.current.map((pocketDiffKey, p) => {\r\n      // If newly selected, add...\r\n      if (newFound) {\r\n        // ...one pickpocket...\r\n        if (props.findCountBox && props.findCountBox[p] > 0) {\r\n          pocketDiffKey += 1;\r\n        }\r\n        // ...and another for every linked pickpocket.\r\n        if (props.findLink && props.findLink.length > 0) {\r\n          props.findLink.map((pocketLinkKey, q) => {\r\n            if (pocketLinkKey.findPick &&\r\n              pocketLinkKey.findCount[p] > 0) {\r\n              pocketDiffKey += 1;\r\n            };\r\n          });\r\n        }\r\n        return pocketDiffKey;\r\n      // If newly deselected, subtract...\r\n      } else {\r\n        // ...one pickpocket...\r\n        if (props.findCountBox && props.findCountBox[p] > 0) {\r\n          pocketDiffKey -= 1;\r\n        }\r\n        // ...and another for every linked pickpocket.\r\n        if (props.findLink && props.findLink.length > 0) {\r\n          props.findLink.map((pocketLinkKey, q) => {\r\n            if (pocketLinkKey.findPick &&\r\n              pocketLinkKey.findCount[p] > 0) {\r\n              pocketDiffKey -= 1;\r\n            };\r\n          });\r\n        }\r\n        return pocketDiffKey;\r\n      }\r\n    });\r\n    if (props.findPick) {\r\n      //setFoundPocket(addFoundPocket);\r\n      accumPocket.current = addFoundPocket;\r\n      storeFoundPocket(addFoundPocket);\r\n    }\r\n\r\n    // Toggle whether carryover loot is 'found' or 'not found'.\r\n    if (newFound &&\r\n      props.carryValue && Math.min(...props.carryValue) === -1) {\r\n      setCarryFound(true);\r\n    } else if (\r\n      props.carryValue && Math.min(...props.carryValue) === -1) {\r\n      setCarryFound(false);\r\n    }\r\n\r\n    // Toggle any linked items.\r\n    if (props.findLink) {\r\n      setLinkedFind(props.findLink);\r\n    }\r\n  };\r\n\r\n  function toggleMe(type) {\r\n    let newToggle = true;\r\n    // If this item is not part of the starting inventory,\r\n    // toggle between 'found' and 'not found'.\r\n    if (!props.loadout || props.loadout !== \"start\") {\r\n      newToggle = toggleSwitch(getIsFound, type);\r\n    };\r\n\r\n    simpleColorSwitch(newToggle);\r\n\r\n    storeIsFound(newToggle);\r\n    setIsFound(newToggle);\r\n    return newToggle;\r\n  }\r\n\r\n  // Switch statement to set item as 'found' / 'not found'.\r\n  function toggleSwitch(toggle, type) {\r\n    switch(type) {\r\n      // 'On' sets this item as 'found'.\r\n      case \"on\":\r\n        return true;\r\n      // 'Off' sets this item as 'not found'.\r\n      case \"off\":\r\n        return false;\r\n      // 'Opposite' inverts this item's status.\r\n      case \"opposite\":\r\n        return !toggle;\r\n      // If no case specified, don't change item's status.\r\n      default:\r\n        return toggle;\r\n    }\r\n  }\r\n\r\n  // Change the component's background image.\r\n  // Use different patterns to account for colorblindness.\r\n  function simpleColorSwitch(newFound) {\r\n    if (getCurrentTheme === 'dark') {\r\n      // Checkmark if item is marked as found (or in starting inventory).\r\n      if (newFound) {\r\n        setSimpleColor(bgFoundDark);\r\n      } else {\r\n        // Green pattern for loot that's easy to find.\r\n        if (props.findSimple === \"findE\") {\r\n          setSimpleColor(bgEasyDark);\r\n        // Blue pattern for loot that's somewhat hidden.\r\n        } else if (props.findSimple === \"findM\") {\r\n          setSimpleColor(bgMediumDark);\r\n        // Purple pattern for loot that's hard to spot.\r\n        } else if (props.findSimple === \"findH\") {\r\n          setSimpleColor(bgHardDark);\r\n        // Default (no pattern) for items and junk.\r\n        } else {\r\n          setSimpleColor(bgDefaultDark);\r\n        }\r\n      }\r\n    } else {\r\n      // Checkmark if item is marked as found (or in starting inventory).\r\n      if (newFound) {\r\n        setSimpleColor(bgFoundLight);\r\n      } else {\r\n        // Lime pattern for loot that's easy to find.\r\n        if (props.findSimple === \"findE\") {\r\n          setSimpleColor(bgEasyLight);\r\n        // Cyan pattern for loot that's somewhat hidden.\r\n        } else if (props.findSimple === \"findM\") {\r\n          setSimpleColor(bgMediumLight);\r\n        // Pink pattern for loot that's hard to spot.\r\n        } else if (props.findSimple === \"findH\") {\r\n          setSimpleColor(bgHardLight);\r\n        // Default (no pattern) for items and junk.\r\n        } else {\r\n          setSimpleColor(bgDefaultLight);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readIsFound();\r\n\r\n    simpleColorSwitch();\r\n\r\n    // Select this item by default if it's in the starting inventory.\r\n    if (props.loadout && props.loadout === \"start\") {\r\n      toggleMe(\"on\");\r\n    };\r\n\r\n    if (props.getLinkedFind) {\r\n      // If 'Clear All' button has been pressed,\r\n      // toggle this item as 'not found'.\r\n      if (props.getLinkedFind === \"reset\") {\r\n        toggleMe(\"off\");\r\n        setLinkedFind();\r\n      // If another item is selected that's linked to this item,\r\n      // toggle this item as 'found' or 'not found', as well.\r\n      } else {\r\n        props.getLinkedFind.map((linkKey, linkIndex) => {\r\n          if (linkKey.id === props.id) {\r\n            // Clear the array of linked items.\r\n            setLinkedFind();\r\n\r\n            toggleMe(\"opposite\");\r\n\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }, [props.getLinkedFind]);\r\n\r\n  return (\r\n    <>\r\n      {(\r\n      // If exclusive to certain difficulties,\r\n      // hide this box if those difficulty filters are disabled.\r\n        (getFilterDiffN && findCount[0] !== 0 &&\r\n          findCountRecipe[0] !== 0 && findCountBox[0] !== 0) ||\r\n        (getFilterDiffH && findCount[1] !== 0 &&\r\n          findCountRecipe[1] !== 0 && findCountBox[1] !== 0) ||\r\n        (getFilterDiffX && findCount[2] !== 0 &&\r\n          findCountRecipe[2] !== 0 && findCountBox[2] !== 0)\r\n      ) &&\r\n      // If exclusive to certain game modes,\r\n      // hide this box if those game mode filters are disabled.\r\n      ( (getFilterModeA && findCountMode[0] !== 0) ||\r\n        (getFilterModeB && findCountMode[1] !== 0) ||\r\n        (getFilterModeC && findCountMode[2] !== 0)\r\n      ) &&\r\n      // Depending on this item's loot type(s),\r\n      // hide this box if those loot filters are disabled.\r\n      ( (getFilterLootGold && props.value &&\r\n          (props.value[0] !== 0 ||\r\n          (props.carryValue && props.carryValue[0] === -1)) ) ||\r\n        (getFilterLootGems && props.value &&\r\n          (props.value[1] !== 0 ||\r\n          (props.carryValue && props.carryValue[1] === -1)) ) ||\r\n        (getFilterLootGoods && props.value &&\r\n          (props.value[2] !== 0 ||\r\n          (props.carryValue && props.carryValue[2] === -1)) ) ||\r\n        (props.value && Math.max(...props.value) === 0) ||\r\n        !props.value\r\n      ) &&\r\n      // If area filter has one or more areas selected,\r\n      // hide this box if this item's area is not selected.\r\n      ( getFilterArea.length === 0 ||\r\n        getFilterArea.includes(props.areas[props.findArea].value)\r\n      ) &&\r\n        <TouchableOpacity\r\n          // Different background colors to indicate\r\n          // simplicity of finding (Easy, Medium, Hard),\r\n          // and whether user has selected it.\r\n          style={[\r\n            styles.find,\r\n            {backgroundColor: colors.backLight,\r\n            borderColor: colors.border},\r\n            findSimple === \"findE\" && {backgroundColor: colors.findE},\r\n            findSimple === \"findM\" && {backgroundColor: colors.findM},\r\n            findSimple === \"findH\" && {backgroundColor: colors.findH},\r\n            getIsFound && {backgroundColor: colors.found},\r\n          ]}\r\n          // Toggle whether this box is selected or not.\r\n          onPress={() => activateMe()}\r\n        >\r\n          {/*Text fields for general area and precise location.*/}\r\n          <ImageBackground\r\n            source={getSimpleColor}\r\n            resizeMode=\"cover\"\r\n            style={[\r\n              styles.findBackground\r\n            ]}\r\n          >\r\n            <FindMeArea\r\n              modeNames={props.modeNames}\r\n              value={props.value}\r\n              findArea={props.areas[props.findArea].value}\r\n              findObj={props.findObj}\r\n              findCount={props.findCount}\r\n              findCountRecipe={props.findCountRecipe}\r\n              findCountBox={props.findCountBox}\r\n              findCountMode={props.findCountMode}\r\n              findCountActual={props.findCountActual}\r\n              loadout={props.loadout}\r\n            />\r\n            <FindMePrecise\r\n              modeNames={props.modeNames}\r\n              findNarrow={props.findNarrow}\r\n              findExact={props.findExact}\r\n              findCount={props.findCount}\r\n              findCountRecipe={props.findCountRecipe}\r\n              findCountBox={props.findCountBox}\r\n              findCountMode={props.findCountMode}\r\n              findCountActual={props.findCountActual}\r\n              findRecipe={props.findRecipe}\r\n              findBox={props.findBox}\r\n              findPick={props.findPick}\r\n              findSecret={props.findSecret}\r\n              findUnable={props.findUnable}\r\n              findNote={props.notes[props.findNote]}\r\n              loadout={props.loadout}\r\n              price={props.price}\r\n            />\r\n          </ImageBackground>\r\n        </TouchableOpacity>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*   FIND ME AREA   */\r\n/* **************** */\r\n// Custom text component to show an item's general area.\r\nconst FindMeArea = React.memo(function FindMeArea(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // DiffExclude: tracks if this item is only on certain difficulties.\r\n  // Used to add difficulty markers to text field.\r\n  const [getDiffExclude, setDiffExclude] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    // Is this item only available here on certain difficulties?\r\n    if (\r\n      props.findCount && Math.min(...props.findCount) === 0 ||\r\n      props.findCountRecipe && Math.min(...props.findCountRecipe) === 0 ||\r\n      props.findCountBox && Math.min(...props.findCountBox) === 0\r\n    ) {\r\n      setDiffExclude(true);\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locText,\r\n      {fontSize: (Platform.OS === 'web') ? 12 : width*0.019,\r\n        color: colors.text}\r\n    ]}>\r\n      {/* Does this item trigger (or contribute to) an objective? */}\r\n      {props.findObj &&\r\n        <Text style={[\r\n          styles.locCount,\r\n          {color: colors.locObj}\r\n        ]}>\r\n          *\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Normal? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[0] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[0] > 0 ||\r\n          props.findCountBox && props.findCountBox[0] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locN}]}>\r\n          (\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Hard? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[1] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[1] > 0 ||\r\n          props.findCountBox && props.findCountBox[1] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locH}]}>\r\n          [\r\n        </Text>\r\n      }\r\n      {/* Is this item available here on Expert? */}\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[2] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[2] > 0 ||\r\n          props.findCountBox && props.findCountBox[2] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locX}]}>\r\n          {'{'}\r\n        </Text>\r\n      }\r\n      {/* Separate the markings from the location, if needed. */}\r\n      {(props.findObj || getDiffExclude) &&\r\n        ' '\r\n      }\r\n      {/* Print the area where this item is found. */}\r\n      {props.findArea}\r\n      {/* Is there more than 1 of this item at loadout?\r\n          Or, is there more than 1 of this item in the secret list? */}\r\n      {(props.loadout === \"start\" || props.loadout === \"store\" ||\r\n        props.secret) &&\r\n        ((props.findCount && Math.max(...props.findCount) > 1) ||\r\n        (props.findCountMode && Math.max(...props.findCountMode) > -1)) &&\r\n        <FindMeCount\r\n          modeNames={props.modeNames}\r\n          findCount={props.findCount}\r\n          findCountMode={props.findCountMode}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Mirror the objective and difficulty markings, if any. */}\r\n      {(props.findObj || getDiffExclude) &&\r\n        ' '\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[2] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[2] > 0 ||\r\n          props.findCountBox && props.findCountBox[2] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locX}]}>\r\n          {'}'}\r\n        </Text>\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[1] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[1] > 0 ||\r\n          props.findCountBox && props.findCountBox[1] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locH}]}>\r\n          ]\r\n        </Text>\r\n      }\r\n      {getDiffExclude &&\r\n        (props.findCount && props.findCount[0] > 0 ||\r\n          props.findCountRecipe && props.findCountRecipe[0] > 0 ||\r\n          props.findCountBox && props.findCountBox[0] > 0) &&\r\n        <Text style={[styles.locCount, {color: colors.locN}]}>\r\n          )\r\n        </Text>\r\n      }\r\n      {props.findObj &&\r\n        <Text style={[styles.locCount, {color: colors.locObj}]}>\r\n          *\r\n        </Text>\r\n      }\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*  FIND ME PRECISE */\r\n/* **************** */\r\n// Custom text component to show an item's precise location.\r\nconst FindMePrecise = React.memo(function FindMePrecise(props) {\r\n  // Is this item available in the loadout store?\r\n  //if (props.loadout === \"store\" && props.price > 0) {\r\n  //  props.findExact = `Price: ${props.price}`;\r\n  //}\r\n\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locText,\r\n      {fontSize: (Platform.OS === 'web') ? 12 : width*0.019,\r\n        color: colors.text},\r\n      props.findSecret && {color: colors.locSecret},\r\n      props.findUnable && styles.locNoGet,\r\n    ]}>\r\n      {/* If no precise location, insert a blank for spacing. */}\r\n      {!props.findNarrow && !props.findExact &&\r\n       !props.findRecipe && props.loadout !== \"store\" &&\r\n       ' '\r\n      }\r\n      {/* Print the general location of this item, if applicable. */}\r\n      {props.findNarrow &&\r\n        props.findNarrow\r\n      }\r\n      {/* Separate the general and exact locations, if needed. */}\r\n      {props.findNarrow && props.findExact &&\r\n        ', '\r\n      }\r\n      {/* Print the exact location of this item, if applicable. */}\r\n      {props.findExact &&\r\n        <Text style={[\r\n          styles.locText,\r\n          {fontSize: (Platform.OS === 'web') ? 12 : width*0.019},\r\n          props.findBox && styles.locBox,\r\n          props.findPick && styles.locPick,\r\n        ]}>\r\n          {props.findExact}\r\n        </Text>\r\n      }\r\n      {/* Is there more than 1 of this item in a container? */}\r\n      {props.findCountBox && Math.max(...props.findCountBox) > 1 &&\r\n        <FindMeCount\r\n          findCount={props.findCountBox}\r\n          findCountActual={props.findCountActual}\r\n          findBox={props.findBox}\r\n          findPick={props.findPick}\r\n        />\r\n      }\r\n      {/* Is there more than 1 of this item at this location? */}\r\n      {!props.loadout &&\r\n        ((props.findCount && (Math.max(...props.findCount) > 1 ||\r\n          Math.min(...props.findCount) === -1)\r\n        ) ||\r\n        (props.findCountMode && Math.max(...props.findCountMode) > -1)) &&\r\n        <FindMeCount\r\n          modeNames={props.modeNames}\r\n          findCount={props.findCount}\r\n          findCountMode={props.findCountMode}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Separate the location and requirements, if needed. */}\r\n      {(props.findNarrow || props.findExact) &&\r\n        ((props.loadout === \"store\" && props.price > 0) ||\r\n          props.findRecipe) &&\r\n        ', '\r\n      }\r\n      {/* Print the requirements, if any, for this item to appear. */}\r\n      {props.findRecipe &&\r\n        <Text style={styles.locCount}>{props.findRecipe}</Text>\r\n      }\r\n      {/* Do the requirements make more than 1 of this item appear? */}\r\n      {props.findCountRecipe &&\r\n        (Math.max(...props.findCountRecipe) > 1 ||\r\n          Math.min(...props.findCountRecipe) === -1\r\n        ) &&\r\n        <FindMeCount\r\n          findCount={props.findCountRecipe}\r\n          findCountActual={props.findCountActual}\r\n        />\r\n      }\r\n      {/* Is this item available in the loadout store? */}\r\n      {props.loadout === \"store\" && props.price > 0 &&\r\n        `Price: ${props.price}`\r\n      }\r\n      {/* Print the footnote icon for this item, if applicable. */}\r\n      {props.findNote &&\r\n        <Text style={styles.locCount}>\r\n          {props.findNote.delimiter &&\r\n            `${props.findNote.delimiter}`\r\n          }\r\n          {props.findNote.icon &&\r\n            `${props.findNote.icon}`\r\n          }\r\n        </Text>\r\n      }\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   FIND ME COUNT  */\r\n/* **************** */\r\n// Custom text component to show an item's stack count.\r\nconst FindMeCount = React.memo(function FindMeCount(props) {\r\n  // Use defaults to avoid errors if some props are undefined.\r\n  const {\r\n    modeNames = [{'name': '', 'icon': ''}],\r\n    findCount = [1,1,1],\r\n    findCountMode = [-1,-1,-1],\r\n    findCountActual = [-1,-1,-1],\r\n    findBox = false,\r\n    findPick = false,\r\n  } = props;\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Change: tracks if this item has differing stack counts.\r\n  // Used to add relevant stack numbers to text field.\r\n  const [getDiffChange, setDiffChange] = React.useState(false);\r\n  const [getModeChange, setModeChange] = React.useState(false);\r\n  const [getActlChange, setActlChange] = React.useState(false);\r\n\r\n  // Stack: stores stack count shared across difficulties / game modes.\r\n  // Used to avoid reprinting the same count when unnecessary.\r\n  const [getDiffStack, setDiffStack] = React.useState(0);\r\n  const [getModeStack, setModeStack] = React.useState(0);\r\n  const [getActlStack, setActlStack] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Does this have different stack counts on different difficulties?\r\n    if (findCount[0] !== findCount[1] ||\r\n      findCount[1] !== findCount[2] ||\r\n      findCount[0] !== findCount[2]) {\r\n      // Exception: only available on Normal.\r\n      if (findCount[0] > 0 &&\r\n        findCount[1] === 0 && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[0]);\r\n      // Exception: only available on Hard.\r\n      } else if (findCount[1] > 0 &&\r\n        findCount[0] === 0 && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[1]);\r\n      // Exception: only available on Expert.\r\n      } else if (findCount[2] > 0 &&\r\n        findCount[0] === 0 && findCount[1] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[2]);\r\n      // Exception: same on Normal & Hard, unavailable on Expert.\r\n      } else if (findCount[0] > 0 && findCount[1] > 0 &&\r\n        findCount[0] === findCount[1] && findCount[2] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[0]);\r\n      // Exception: same on Hard & Expert, unavailable on Normal.\r\n      } else if (findCount[1] > 0 && findCount[2] > 0 &&\r\n        findCount[1] === findCount[2] && findCount[0] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[1]);\r\n      // Exception: same on Normal & Expert, unavailable on Hard.\r\n      } else if (findCount[0] > 0 && findCount[2] > 0 &&\r\n        findCount[0] === findCount[2] && findCount[1] === 0) {\r\n        setDiffChange(false);\r\n        setDiffStack(findCount[2]);\r\n      // Otherwise, different stack counts on all difficulties.\r\n      } else {\r\n        setDiffChange(true);\r\n      }\r\n    // Otherwise, same count on all difficulties.\r\n    } else {\r\n      setDiffChange(false);\r\n      setDiffStack(findCount[0]);\r\n    }\r\n\r\n    // Does this have different stack counts on different game modes?\r\n    if (findCountMode[0] !== findCountMode[1] ||\r\n      findCountMode[1] !== findCountMode[2] ||\r\n      findCountMode[0] !== findCountMode[2]) {\r\n      // Exception: only available on Mode A.\r\n      if (findCountMode[0] > 0 &&\r\n        findCountMode[1] === 0 && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[0]);\r\n      // Exception: only available on Mode B.\r\n      } else if (findCountMode[1] > 0 &&\r\n        findCountMode[0] === 0 && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[1]);\r\n      // Exception: only available on Mode C.\r\n      } else if (findCountMode[2] > 0 &&\r\n        findCountMode[0] === 0 && findCountMode[1] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[2]);\r\n      // Exception: same on Modes A & B, unavailable on Mode C.\r\n      } else if (findCountMode[0] > 0 && findCountMode[1] > 0 &&\r\n        findCountMode[0] === findCountMode[1] && findCountMode[2] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[0]);\r\n      // Exception: same on Modes B & C, unavailable on Mode A.\r\n      } else if (findCountMode[1] > 0 && findCountMode[2] > 0 &&\r\n        findCountMode[1] === findCountMode[2] && findCountMode[0] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[1]);\r\n      // Exception: same on Modes A & C, unavailable on Mode B.\r\n      } else if (findCountMode[0] > 0 && findCountMode[2] > 0 &&\r\n        findCountMode[0] === findCountMode[2] && findCountMode[1] === 0) {\r\n        setModeChange(false);\r\n        setModeStack(findCountMode[2]);\r\n      // Otherwise, different stack counts on all game modes.\r\n      } else {\r\n        setModeChange(true);\r\n      }\r\n    // Otherwise, same count on all game modes.\r\n    } else {\r\n      setModeChange(false);\r\n      setModeStack(findCountMode[0]);\r\n    }\r\n\r\n    // Does this have different actual counts on different difficulties?\r\n    if (findCountActual[0] !== findCountActual[1] ||\r\n      findCountActual[1] !== findCountActual[2] ||\r\n      findCountActual[0] !== findCountActual[2]) {\r\n      // Exception: only available on Normal.\r\n      if (findCountActual[0] > 0 &&\r\n        findCountActual[1] === 0 && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[0]);\r\n      // Exception: only available on Hard.\r\n      } else if (findCountActual[1] > 0 &&\r\n        findCountActual[0] === 0 && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[1]);\r\n      // Exception: only available on Expert.\r\n      } else if (findCountActual[2] > 0 &&\r\n        findCountActual[0] === 0 && findCountActual[1] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[2]);\r\n      // Exception: same on Normal & Hard, unavailable on Expert.\r\n      } else if (findCountActual[0] > 0 && findCountActual[1] > 0 &&\r\n        findCountActual[0] === findCountActual[1] && findCountActual[2] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[0]);\r\n      // Exception: same on Hard & Expert, unavailable on Normal.\r\n      } else if (findCountActual[1] > 0 && findCountActual[2] > 0 &&\r\n        findCountActual[1] === findCountActual[2] && findCountActual[0] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[1]);\r\n      // Exception: same on Normal & Expert, unavailable on Hard.\r\n      } else if (findCountActual[0] > 0 && findCountActual[2] > 0 &&\r\n        findCountActual[0] === findCountActual[2] && findCountActual[1] === 0) {\r\n        setActlChange(false);\r\n        setActlStack(findCountActual[2]);\r\n      // Otherwise, different actual counts on all difficulties.\r\n      } else {\r\n        setActlChange(true);\r\n      }\r\n    // Otherwise, same actual count on all difficulties.\r\n    } else {\r\n      setActlChange(false);\r\n      setActlStack(findCountActual[0]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Text style={[\r\n      styles.locCount,\r\n      findBox && styles.locBox,\r\n      findPick && styles.locPick,\r\n    ]}>\r\n      {' '}\r\n      {/* Don't print the 'x' if only showing the game mode(s)\r\n          and the stack count is 1. */}\r\n      {!getModeChange && getDiffStack !== 1 &&\r\n        'x'\r\n      }\r\n      {/* Print this item's stack count (unchanged by difficulty). */}\r\n      {!getDiffChange && Math.max(...findCount) > 0 &&\r\n        (!getModeChange && getDiffStack !== 1) &&\r\n        getDiffStack\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {!getDiffChange && findCount[0] === -1 &&\r\n        (!getModeChange && getDiffStack !== 1) &&\r\n        '∞'\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {!getDiffChange && Math.max(...findCountActual) > -1 &&\r\n        <>\r\n          {'('}\r\n          {/* Is the available count the same on all difficulties? */}\r\n          {!getActlChange &&\r\n            getActlStack\r\n          }\r\n          {/* Is the available count different on Normal? */}\r\n          {getActlChange && findCountActual[0] > -1 &&\r\n            <Text style={{color: colors.locN}}>\r\n              {findCountActual[0]}\r\n            </Text>\r\n          }\r\n          {/* Separate the Normal stack from Hard or Expert, if needed. */}\r\n          {getActlChange && findCountActual[0] > -1 &&\r\n            (findCountActual[1] > -1 || findCountActual[2] > -1) &&\r\n            '/'\r\n          }\r\n          {/* Is the available count different on Hard? */}\r\n          {getActlChange && findCountActual[1] > -1 &&\r\n            <Text style={{color: colors.locH}}>\r\n              {findCountActual[1]}\r\n            </Text>\r\n          }\r\n          {/* Separate the Hard stack from Expert, if needed. */}\r\n          {getActlChange &&\r\n            findCountActual[1] > -1 && findCountActual[2] > -1 &&\r\n            '/'\r\n          }\r\n          {/* Is the available count different on Expert? */}\r\n          {getActlChange && findCountActual[2] > -1 &&\r\n            <Text style={{color: colors.locX}}>\r\n              {findCountActual[2]}\r\n            </Text>\r\n          }\r\n          {')'}\r\n        </>\r\n      }\r\n      {/* Print this item's stack count (Normal difficulty). */}\r\n      {getDiffChange && findCount[0] > 0 &&\r\n        <Text style={{color: colors.locN}}>\r\n          {findCount[0]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[0] === -1 &&\r\n        <Text style={{color: colors.locN}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[0] > -1 &&\r\n        <Text style={{color: colors.locN}}>\r\n          ({findCountActual[0]})\r\n        </Text>\r\n      }\r\n      {/* Separate the Normal stack from Hard or Expert, if needed. */}\r\n      {getDiffChange && findCount[0] > 0 &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Hard difficulty). */}\r\n      {getDiffChange && findCount[1] > 0 &&\r\n        <Text style={{color: colors.locH}}>\r\n          {findCount[1]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[1] === -1 &&\r\n        <Text style={{color: colors.locH}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[1] > -1 &&\r\n        <Text style={{color: colors.locH}}>\r\n          ({findCountActual[1]})\r\n        </Text>\r\n      }\r\n      {/* Separate the Hard stack from Expert, if needed. */}\r\n      {getDiffChange &&\r\n        (findCount[1] > 0 && findCount[2] > 0) &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Expert difficulty). */}\r\n      {getDiffChange && findCount[2] > 0 &&\r\n        <Text style={{color: colors.locX}}>\r\n          {findCount[2]}\r\n        </Text>\r\n      }\r\n      {/* Can this item be acquired indefinitely? */}\r\n      {getDiffChange && findCount[2] === -1 &&\r\n        <Text style={{color: colors.locX}}>\r\n          ∞\r\n        </Text>\r\n      }\r\n      {/* Is the available count different from the stack count? */}\r\n      {getDiffChange && findCountActual[2] > -1 &&\r\n        <Text style={{color: colors.locX}}>\r\n          ({findCountActual[2]})\r\n        </Text>\r\n      }\r\n\r\n      {/* Print this item's stack count (unchanged by game mode). */}\r\n      {!getModeChange &&\r\n        (!getDiffChange && getModeStack > 1) &&\r\n        `x${getModeStack}`\r\n      }\r\n      {!getModeChange && getModeStack !== -1 &&\r\n        '~'\r\n      }\r\n      {/* Print this item's stack count (Game mode A). */}\r\n      {getModeChange && findCountMode[0] > 0 &&\r\n        `x${findCountMode[0]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode A? */}\r\n      {findCountMode[0] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[0].icon}`\r\n      }\r\n      {/* Separate the Mode A stack from Mode B or C, if needed. */}\r\n      {getModeChange && findCountMode[0] > 0 &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Game mode B). */}\r\n      {getModeChange && findCountMode[1] > 0 &&\r\n        `x${findCountMode[1]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode B? */}\r\n      {findCountMode[1] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[1].icon}`\r\n      }\r\n      {/* Separate the Mode B stack from Mode C, if needed. */}\r\n      {getModeChange &&\r\n        (findCountMode[1] > 0 && findCountMode[2] > 0) &&\r\n        '/'\r\n      }\r\n      {/* Print this item's stack count (Game mode C). */}\r\n      {getModeChange && findCountMode[2] > 0 &&\r\n        `x${findCountMode[2]}~`\r\n      }\r\n      {/* Is this stack count available on Game Mode C? */}\r\n      {findCountMode[2] > 0 && Math.min(...findCountMode) > -1 &&\r\n        `${modeNames[2].icon}`\r\n      }\r\n\r\n    </Text>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   SECRET ENTRY   */\r\n/* **************** */\r\n// Custom view component of a secret, its trigger, and its rewards.\r\nexport const SecretEntry = React.memo(function SecretEntry(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // SecFound: tracks if this secret is selected as 'found'.\r\n  // Used to change location's background color.\r\n  const [getSecFound, setSecFound] = React.useState(false);\r\n\r\n  // ShowModal: tracks the modal's visibility.\r\n  // Used to show or hide the modal with an enlarged secret image.\r\n  // If multiple triggers, integer determines which image to show.\r\n  const [getShowModal, setShowModal] = React.useState(-1);\r\n\r\n  // Fetch FilterDiff states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Send data to device storage.\r\n  const storeSecFound = async (newSecFound) => {\r\n    try {\r\n      // Convert secret's state from boolean to string.\r\n      const jsonSecret = JSON.stringify(newSecFound);\r\n      await AsyncStorage.setItem(`@secret_${props.id}`, jsonSecret);\r\n      //alert(`Saved secret_${props.id} as ${jsonSecret}`);\r\n    } catch (e) {\r\n      // Error: Saving the data failed.\r\n      //alert('Failed to save value.');\r\n    }\r\n  };\r\n\r\n  // Read data from device storage.\r\n  const readSecFound = async () => {\r\n    try {\r\n      const jsonSecret = await AsyncStorage.getItem(`@secret_${props.id}`);\r\n      // Convert secret's state from string to boolean.\r\n      const parseSecret = JSON.parse(jsonSecret);\r\n      if (parseSecret !== null) {\r\n        setSecFound(parseSecret);\r\n        //alert(`Loaded secret_${props.id} as ${parseSecret}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read value.');\r\n    }\r\n  };\r\n\r\n  function triggerMe(type) {\r\n    let newSecFound = true;\r\n    newSecFound = triggerSwitch(getSecFound, type);\r\n\r\n    setSecFound(newSecFound);\r\n    // Send this data to storage.\r\n    storeSecFound(newSecFound);\r\n  };\r\n\r\n  // Switch statement to set secret as 'found' / 'not found'.\r\n  function triggerSwitch(toggle, type) {\r\n    switch(type) {\r\n      // 'On' sets this secret as 'found'.\r\n      case \"on\":\r\n        return true;\r\n      // 'Off' sets this secret as 'not found'.\r\n      case \"off\":\r\n        return false;\r\n      // 'Opposite' inverts this secret's status.\r\n      case \"opposite\":\r\n        return !toggle;\r\n      // If no case specified, don't change secret's status.\r\n      default:\r\n        return toggle;\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readSecFound();\r\n\r\n    if (props.getLinkedFind) {\r\n      // If 'Clear All' button has been pressed,\r\n      // toggle this item as 'not found'.\r\n      if (props.getLinkedFind === \"reset\") {\r\n        triggerMe(\"off\");\r\n        props.setLinkedFind();\r\n      }\r\n    }\r\n\r\n  }, [props.getLinkedFind]);\r\n\r\n  return (\r\n    <View style={styles.listEntry}>\r\n      <View style={[\r\n        styles.secretTrigList,\r\n        Platform.OS !== 'web' && {width: '72%'},\r\n        Platform.OS === 'web' && {\r\n          width: (width > 794) ? 590 : '77.5%'\r\n        }\r\n      ]}>\r\n        {/* Map out each entry in secret trigger sub-array. */}\r\n        {props.triggers && props.triggers.map((trigKey, trigIndex) => (\r\n          <View\r\n            key={trigKey.id}\r\n            style={styles.secretTrig}\r\n          >\r\n            <View style={[\r\n              styles.secretTrigID,\r\n              Platform.OS !== 'web' && {width: '27%'},\r\n              Platform.OS === 'web' && {\r\n                width: (width > 794) ? 140 : '24%'\r\n              },\r\n              {backgroundColor: colors.backMed,\r\n              borderColor: colors.border},\r\n              props.triggers.length === 1 && styles.secretTrigOne,\r\n              trigIndex === 0 && styles.secretTrigTop,\r\n              trigIndex !== 0 && styles.secretTrigMid,\r\n              trigIndex === props.triggers.length - 1 &&\r\n                props.triggers.length > 1 &&\r\n                styles.secretTrigBot\r\n            ]}>\r\n              {/* Secret's number and image go here. */}\r\n              {trigIndex === 0 &&\r\n                <Text style={[styles.secretNum, {color: colors.text}]}>\r\n                  {props.number}\r\n                </Text>\r\n              }\r\n              <TouchableWithoutFeedback\r\n                onPress={() => setShowModal(trigIndex)}\r\n              >\r\n                <Image\r\n                  source={props.img[trigIndex]}\r\n                  style={[\r\n                    styles.imgSecret,\r\n                    Platform.OS !== 'web' && {width: 70, height: 70},\r\n                    Platform.OS === 'web' && {\r\n                      width: (width > 794) ? 128 : width*0.16,\r\n                      height: (width > 794) ? 128 : width*0.16,\r\n                    },\r\n                  ]}\r\n                />\r\n              </TouchableWithoutFeedback>\r\n              {/* Modal to show bigger secret image. */}\r\n              <Modal\r\n                animationType='fade'\r\n                transparent={true}\r\n                visible={getShowModal !== -1}\r\n                onRequestClose={() => setShowModal(-1)}\r\n              >\r\n                <TouchableOpacity\r\n                  style={styles.modalView}\r\n                  activeOpacity={1}\r\n                  onPressOut={() => setShowModal(-1)}\r\n                >\r\n                  <TouchableWithoutFeedback>\r\n                    <View style={[\r\n                      styles.secretModal,\r\n                      {backgroundColor: colors.backMed,\r\n                      borderColor: colors.border}\r\n                    ]}>\r\n                      <Image\r\n                        source={props.img[getShowModal]}\r\n                        style={styles.imgSecretBig}\r\n                      />\r\n                    </View>\r\n                  </TouchableWithoutFeedback>\r\n                </TouchableOpacity>\r\n              </Modal>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.secretLoc,\r\n                Platform.OS !== 'web' && {width: '38%'},\r\n                Platform.OS === 'web' && {\r\n                  width: (width > 794) ? 150 : '25%'\r\n                },\r\n                {borderColor: colors.border}\r\n              ]}\r\n              // Toggle whether this secret is selected or not.\r\n              onPress={() => triggerMe(\"opposite\")}\r\n            >\r\n              <ImageBackground\r\n                source={(getCurrentTheme === 'dark')\r\n                  ? (getSecFound\r\n                    ? bgFoundDarkT : bgDefaultDark)\r\n                  : (getSecFound\r\n                    ? bgFoundLightT : bgDefaultLight)}\r\n                resizeMode=\"cover\"\r\n                style={[\r\n                  styles.findBackground\r\n                ]}\r\n              >\r\n                {/* Secret's location goes here. */}\r\n                <FindMeArea\r\n                  findArea={props.areas[trigKey.findArea].value}\r\n                  findCount={trigKey.findDiff}\r\n                />\r\n                <FindMePrecise\r\n                  findNarrow={trigKey.findNarrow}\r\n                />\r\n              </ImageBackground>\r\n            </TouchableOpacity>\r\n            <View style={[\r\n              styles.secretMethod,\r\n              Platform.OS !== 'web' && {width: '35%'},\r\n              Platform.OS === 'web' && {\r\n                width: (width > 794) ? 300 : '51%'\r\n              },\r\n              {backgroundColor: colors.backLight,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              {/* Secret's trigger goes here. */}\r\n              <Text style={[\r\n                styles.secretText,\r\n                {color: colors.text}\r\n              ]}>\r\n                {trigKey.method}\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={[\r\n        styles.secretRewardList,\r\n        Platform.OS !== 'web' && {width: '28%'},\r\n        Platform.OS === 'web' && {\r\n          width: (width > 794) ? 174 : '22.5%'\r\n        }\r\n      ]}>\r\n        {/* Map out each entry in secret reward sub-array. */}\r\n        {props.rewards && props.rewards.map((rewKey, rewIndex) => (\r\n          <View\r\n            key={rewKey.id}\r\n            style={styles.secretRewardFlex}\r\n          >\r\n            {(\r\n            // If exclusive to certain difficulties,\r\n            // hide this box if those difficulty filters are disabled.\r\n              (getFilterDiffN &&\r\n                rewKey.findCount && rewKey.findCount[0] !== 0) ||\r\n              (getFilterDiffH &&\r\n                rewKey.findCount && rewKey.findCount[1] !== 0) ||\r\n              (getFilterDiffX &&\r\n                rewKey.findCount && rewKey.findCount[2] !== 0)\r\n            ) &&\r\n              <View style={[\r\n                styles.secretReward,\r\n                {backgroundColor: colors.backLight,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                {/*!rewKey.rewardLoot && !rewKey.rewardItem &&\r\n                  <Text style={styles.secretRewardText}>WIP</Text>\r\n                */}\r\n                {/* Is this reward a new route? */}\r\n                {rewKey.rewardRoute &&\r\n                  <>\r\n                    <Text style={[\r\n                      styles.secretRewardText,\r\n                      styles.secretRewardOther,\r\n                      {color: colors.text}\r\n                    ]}>\r\n                      A new route between\r\n                    </Text>\r\n                    {rewKey.rewardRoute.map((routeKey, routeIndex) => (\r\n                      <Text\r\n                        key={`route_${routeIndex}`}\r\n                        style={[\r\n                          styles.secretRewardText,\r\n                          styles.secretRewardOther,\r\n                          {color: colors.text}\r\n                      ]}>\r\n                        {/* Print 'and' before\r\n                            final destination in list. */}\r\n                        {routeIndex === rewKey.rewardRoute.length -1 &&\r\n                          <Text>and </Text>\r\n                        }\r\n                        {/* Print each destination. */}\r\n                        {routeKey}\r\n                        {/* Print comma after each destination\r\n                            if list has at least 3 destinations. */}\r\n                        {routeIndex !== rewKey.rewardRoute.length - 1 &&\r\n                          rewKey.rewardRoute.length > 2 &&\r\n                          <Text>,</Text>\r\n                        }\r\n                      </Text>\r\n                    ))}\r\n                  </>\r\n                }\r\n                {/* Is this reward a loot item? */}\r\n                {rewKey.rewardLoot &&\r\n                  <>\r\n                    <Text style={[\r\n                      styles.secretRewardText,\r\n                      {color: colors.text}\r\n                    ]}>\r\n                      <FindMeArea\r\n                        value={rewKey.value}\r\n                        findArea={rewKey.rewardLoot}\r\n                        findCount={rewKey.findCount}\r\n                        secret={true}\r\n                      />\r\n                      {':'}\r\n                    </Text>\r\n                    {/* Loot item's value goes here. */}\r\n                    <View style={styles.lootRow}>\r\n                      {rewKey.value && rewKey.value[0] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGold}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[0]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {rewKey.value && rewKey.value[1] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGems}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[1]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {rewKey.value && rewKey.value[2] > 0 &&\r\n                        <>\r\n                          <Image\r\n                            source={iconGoods}\r\n                            style={styles.imgLootIcon}\r\n                          />\r\n                          <Text style={[\r\n                            styles.lootText,\r\n                            {color: colors.text}\r\n                          ]}>\r\n                            {`${rewKey.value[2]} `}\r\n                          </Text>\r\n                        </>\r\n                      }\r\n                      {/* If multiple loot items have same value,\r\n                          clarify shown value is not cumulative. */}\r\n                      {rewKey.findCount &&\r\n                        Math.max(...rewKey.findCount) > 1 &&\r\n                        <Text style={[\r\n                          styles.secretRewardText,\r\n                          {color: colors.text}\r\n                        ]}>\r\n                          {'each'}\r\n                        </Text>\r\n                      }\r\n                    </View>\r\n                  </>\r\n                }\r\n                {/* Is this reward an inventory item? */}\r\n                {rewKey.rewardItem &&\r\n                  <Text style={[\r\n                    styles.secretRewardText,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    <FindMeArea\r\n                      value={rewKey.value}\r\n                      findArea={rewKey.rewardItem}\r\n                      findCount={rewKey.findCount}\r\n                      secret={true}\r\n                    />\r\n                  </Text>\r\n                }\r\n                {/* Is this reward something else? */}\r\n                {rewKey.rewardOther &&\r\n                  <Text style={[\r\n                    styles.secretRewardText,\r\n                    styles.secretRewardOther,\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {rewKey.rewardOther}\r\n                  </Text>\r\n                }\r\n              </View>\r\n            }\r\n          </View>\r\n        ))}\r\n        {/* Is there no tangible reward for finding this secret? */}\r\n        {!props.rewards &&\r\n          <View style={styles.secretReward}>\r\n            <Text style={[\r\n              styles.secretRewardText,\r\n              styles.secretRewardOther,\r\n              {color: colors.text}\r\n            ]}>\r\n              None\r\n            </Text>\r\n          </View>\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   IMAGE SWITCH   */\r\n/* **************** */\r\n// Custom view component showing a slideshow of images.\r\nconst ImageSwitch = React.memo(function ImageSwitch(props) {\r\n  // ImageIndex: tracks the current index in the image array.\r\n  const [getImageIndex, setImageIndex] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    // Create an interval to iterate through the image array.\r\n    const imageID = setInterval(() => {\r\n      if (getImageIndex < props.img.length - 1) {\r\n        setImageIndex(getImageIndex + 1);\r\n      } else if (getImageIndex === props.img.length - 1) {\r\n        setImageIndex(0);\r\n      }\r\n    // Delay how often the interval updates.\r\n    // 2000 milliseconds = every 2 seconds.\r\n    }, 2000);\r\n\r\n    // Clear the interval when the component unmounts.\r\n    return () => clearInterval(imageID);\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <Image\r\n        source={props.img[getImageIndex]}\r\n        style={styles.imgStyle}\r\n      />\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*   TOTALS VIEW    */\r\n/* **************** */\r\n// Custom view component of the mission's loot values & requirements.\r\nexport const TotalsView = React.memo(function TotalsView(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} = React.useContext(FoundContext);\r\n\r\n  // Fetch CarryLoot and CarryFound states from context.\r\n  const {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound} =\r\n    React.useContext(CarryoverContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // FoundLoot: tracks the values of loot selected by the user.\r\n  // Each nested array is for Normal, Hard, & Expert difficulty.\r\n  // Each index in an array is for gold, gems, goods, and total.\r\n  const [getFoundLoot, setFoundLoot] =\r\n    React.useState([[0,0,0,0], [0,0,0,0], [0,0,0,0]]);\r\n\r\n  // FoundPocket: tracks the pickpockets selected by the user.\r\n  // Each index in the array is for Normal, Hard, & Expert difficulty.\r\n  const [getFoundPocket, setFoundPocket] = React.useState([0,0,0]);\r\n\r\n  // Share: tracks if any difficulties have the same loot total.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which total table headers to show.\r\n  const [getShareNH, setShareNH] = React.useState(false);\r\n  const [getShareHX, setShareHX] = React.useState(false);\r\n  const [getShareNX, setShareNX] = React.useState(false);\r\n\r\n  // Goal: tracks if any difficulties have the same loot goal.\r\n  // [ N+H, H+X, N+X ]\r\n  // Used to determine which goal table headers to show.\r\n  const [getGoalNH, setGoalNH] = React.useState(false);\r\n  const [getGoalHX, setGoalHX] = React.useState(false);\r\n  const [getGoalNX, setGoalNX] = React.useState(false);\r\n\r\n  // Read data from device storage.\r\n  /*const readFoundLoot = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(`@myloot_${props.title}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        setFoundLoot(parseArray);\r\n        //alert(`Loaded myloot_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read loot array.');\r\n    }\r\n  };\r\n  const readFoundPocket = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(`@mypocket_${props.title}`);\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        setFoundPocket(parseArray);\r\n        //alert(`Loaded mypocket_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read pocket array.');\r\n    }\r\n  };*/\r\n\r\n  // Function to limit the TextInput to numeric characters.\r\n  function onlyNumeric(over) {\r\n    // Failsafe so an empty input doesn't cause errors.\r\n    if (over === '') {\r\n      over = '0';\r\n    }\r\n    // Use a regex to remove any characters that aren't numbers.\r\n    over = over.replace(/[^0-9]/g, '');\r\n    // Use a regex to remove any leading zeros.\r\n    over = over.replace(/^0+/, '');\r\n    setCarryLoot(over);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    //readFoundLoot();\r\n    //readFoundPocket();\r\n\r\n    // Do Normal and Hard have the same loot totals?\r\n    if (props.totals) {\r\n      if (props.totals[0][0] === props.totals[1][0] &&\r\n          props.totals[0][1] === props.totals[1][1] &&\r\n          props.totals[0][2] === props.totals[1][2] &&\r\n          props.totals[0][3] === props.totals[1][3]) {\r\n        setShareNH(true);\r\n        // Do Normal and Hard have the same loot goal?\r\n        setGoalNH(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[0] !== props.goal1.total[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[0] !== props.goal1.gold[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[0] !== props.goal1.gems[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[0] !== props.goal1.goods[1]) {\r\n            setGoalNH(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[0] !== props.goal2.total[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[0] !== props.goal2.gold[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[0] !== props.goal2.gems[1]) {\r\n            setGoalNH(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[0] !== props.goal2.goods[1]) {\r\n            setGoalNH(false);\r\n          }\r\n        }\r\n      }\r\n      // Do Hard and Expert have the same loot totals?\r\n      if (props.totals[1][0] === props.totals[2][0] &&\r\n          props.totals[1][1] === props.totals[2][1] &&\r\n          props.totals[1][2] === props.totals[2][2] &&\r\n          props.totals[1][3] === props.totals[2][3]) {\r\n        setShareHX(true);\r\n        // Do Hard and Expert have the same loot goal?\r\n        setGoalHX(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[1] !== props.goal1.total[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[1] !== props.goal1.gold[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[1] !== props.goal1.gems[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[1] !== props.goal1.goods[2]) {\r\n            setGoalHX(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[1] !== props.goal2.total[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[1] !== props.goal2.gold[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[1] !== props.goal2.gems[2]) {\r\n            setGoalHX(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[1] !== props.goal2.goods[2]) {\r\n            setGoalHX(false);\r\n          }\r\n        }\r\n      }\r\n      // Do Normal and Expert have the same loot totals?\r\n      if (props.totals[0][0] === props.totals[2][0] &&\r\n          props.totals[0][1] === props.totals[2][1] &&\r\n          props.totals[0][2] === props.totals[2][2] &&\r\n          props.totals[0][3] === props.totals[2][3]) {\r\n        setShareNX(true);\r\n        // Do Normal and Expert have the same loot goal?\r\n        setGoalNX(true);\r\n        if (props.goal1) {\r\n          if (props.goal1.total &&\r\n          props.goal1.total[0] !== props.goal1.total[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.gold &&\r\n          props.goal1.gold[0] !== props.goal1.gold[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.gems &&\r\n          props.goal1.gems[0] !== props.goal1.gems[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal1.goods &&\r\n          props.goal1.goods[0] !== props.goal1.goods[2]) {\r\n            setGoalNX(false);\r\n          }\r\n        }\r\n        if (props.goal2) {\r\n          if (props.goal2.total &&\r\n          props.goal2.total[0] !== props.goal2.total[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.gold &&\r\n          props.goal2.gold[0] !== props.goal2.gold[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.gems &&\r\n          props.goal2.gems[0] !== props.goal2.gems[2]) {\r\n            setGoalNX(false);\r\n          }\r\n          if (props.goal2.goods &&\r\n          props.goal2.goods[0] !== props.goal2.goods[2]) {\r\n            setGoalNX(false);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Create an interval to force the found totals to update.\r\n    const updateMe = setInterval(() => {\r\n      setFoundLoot(accumLoot.current);\r\n      setFoundPocket(accumPocket.current);\r\n    // Delay how often the interval updates.\r\n    // 200 milliseconds = five times per second.\r\n    }, 200);\r\n\r\n    // Clear the interval when the component unmounts.\r\n    return () => clearInterval(updateMe);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={[styles.totalBorder, {borderColor: colors.border}]}>\r\n      <ScrollView\r\n        style={{\r\n          flexGrow: (Platform.OS === 'web') ? 0 : 1,\r\n          height: (Platform.OS === 'web') ? height*0.33 : '25%'\r\n        }}\r\n        contentContainerStyle={styles.totalView}\r\n      >\r\n        {/* If loot carries over from the previous mission,\r\n            allow user to input the total loot they found. */}\r\n        {props.totals && props.carryLoot &&\r\n          <View style={styles.carryView}>\r\n            <Text style={[styles.carryText, {color: colors.text}]}>\r\n              {`Enter previous loot: `}\r\n            </Text>\r\n            <TextInput\r\n              style={[\r\n                styles.carryInput,\r\n                {color: colors.text,\r\n                borderColor: colors.inputBorder}\r\n              ]}\r\n              inputMode='numeric'\r\n              maxLength={5}\r\n              onChangeText={over => onlyNumeric(over)}\r\n              value={getCarryLoot}\r\n            />\r\n          </View>\r\n        }\r\n        {/* If this mission has loot,\r\n            display a table showing totals for each loot value. */}\r\n        {(props.totals &&\r\n         (Math.max(...props.totals[0]) > 0 ||\r\n          Math.max(...props.totals[1]) > 0 ||\r\n          Math.max(...props.totals[2]) > 0) ) &&\r\n          <View style={styles.spacedView}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>\r\n                  Loot Totals\r\n                  </Text>\r\n              </View>\r\n              {/* Column headers for gold / gems / goods / total. */}\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGold}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGems}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Image\r\n                  source={iconGoods}\r\n                  style={styles.imgLootIcon}\r\n                />\r\n              </View>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                {width: (Platform.OS !== 'web')\r\n                        ? (width < 400) ? 48 : 66\r\n                        : (width < 626) ? 60 : 100,\r\n                backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Total</Text>\r\n              </View>\r\n              {/* Extra column if loot carries over. */}\r\n              {props.carryLoot &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.tableHeadText,\r\n                    {fontSize: (Platform.OS !== 'web') ? 8 :\r\n                            (width < 626) ? 10 : 14}\r\n                  ]}>+ Carryover</Text>\r\n                </View>\r\n              }\r\n            </View>\r\n            {props.totals.map((outerKey, a) => (\r\n              <View key={`outer_${a}`}>\r\n                {/* Default row: All, N+H, N+X, or N */}\r\n                {/* Second row: H+X or H */}\r\n                {/* Third row: X */}\r\n                {((a === 0) ||\r\n                  (a === 1 && !getShareNH) ||\r\n                  (a === 2 && !getShareHX && !getShareNX)) &&\r\n                  <View style={styles.tableRow}>\r\n                    {Math.max(...outerKey) > 0 &&\r\n                      <>\r\n                        <View style={[\r\n                          styles.tableRowStart,\r\n                          styles.sizeRowStart,\r\n                          {backgroundColor: colors.backMed,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          {/* All difficulties have the same total. */}\r\n                          {a === 0 &&\r\n                            getShareNH && getShareHX && getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              All\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Hard have the same total. */}\r\n                          {a === 0 &&\r\n                            getShareNH && !getShareHX && !getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard and Expert have the same total. */}\r\n                          {a === 1 &&\r\n                            !getShareNH && getShareHX && !getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Expert have the same total. */}\r\n                          {a === 0 &&\r\n                            !getShareNH && !getShareHX && getShareNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal has a different total. */}\r\n                          {a === 0 && !getShareNH && !getShareNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard has a different total. */}\r\n                          {a === 1 && !getShareNH && !getShareHX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Expert has a different total. */}\r\n                          {a === 2 && !getShareHX && !getShareNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                        </View>\r\n                        {/* Display found loot value & max loot value. */}\r\n                        {outerKey.map((innerKey, b) => (\r\n                          <View\r\n                            key={`inner_${b}`}\r\n                            style={[styles.tableRowBox,\r\n                              {width: (Platform.OS !== 'web')\r\n                                      ? (width < 400) ? 48 : 66\r\n                                      : (width < 626) ? 60 : 100,\r\n                              borderColor: colors.border}\r\n                          ]}>\r\n                            <ImageBackground\r\n                              source={(getCurrentTheme === 'dark')\r\n                                ? ((getFoundLoot[a][b] >= innerKey)\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundDarkS : bgFoundDark)\r\n                                  : bgDefaultDark)\r\n                                : ((getFoundLoot[a][b] >= innerKey)\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundLightS : bgFoundLight)\r\n                                  : bgDefaultLight)}\r\n                              resizeMode=\"cover\"\r\n                              style={[\r\n                                styles.totalBackground\r\n                              ]}\r\n                            >\r\n                              <Text style={[\r\n                                styles.tableRowText, {color: colors.text}\r\n                              ]}>\r\n                                {getFoundLoot[a][b]}\r\n                                {((Platform.OS !== 'web' && width < 400) ||\r\n                                  (Platform.OS === 'web' && width < 626)) &&\r\n                                  \"\\n\"\r\n                                }\r\n                                {\" / \"}\r\n                                {innerKey}\r\n                              </Text>\r\n                            </ImageBackground>\r\n                          </View>\r\n                        ))}\r\n                        {/* Carryover loot box if input is empty. */}\r\n                        {props.carryLoot && getCarryLoot === '' &&\r\n                          <View style={[styles.tableRowBox,\r\n                            {width: (Platform.OS !== 'web')\r\n                                    ? (width < 400) ? 48 : 66\r\n                                    : (width < 626) ? 60 : 100,\r\n                            borderColor: colors.border}\r\n                          ]}>\r\n                            <ImageBackground\r\n                              source={(getCurrentTheme === 'dark')\r\n                                ? ((getFoundLoot[a][3] >= props.totals[a][3])\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundDarkS : bgFoundDark)\r\n                                  : bgDefaultDark)\r\n                                : ((getFoundLoot[a][3] >= props.totals[a][3])\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundLightS : bgFoundLight)\r\n                                  : bgDefaultLight)}\r\n                              resizeMode=\"cover\"\r\n                              style={[\r\n                                styles.totalBackground\r\n                              ]}\r\n                            >\r\n                              <Text style={[\r\n                                styles.tableRowText, {color: colors.text}\r\n                              ]}>\r\n                                {getFoundLoot[a][3]}\r\n                                {((Platform.OS !== 'web' && width < 400) ||\r\n                                  (Platform.OS === 'web' && width < 626)) &&\r\n                                  \"\\n\"\r\n                                }\r\n                                {\" / \"}\r\n                                {props.totals[a][3]}\r\n                              </Text>\r\n                            </ImageBackground>\r\n                          </View>\r\n                        }\r\n                        {/* Carryover loot box if input is given. */}\r\n                        {props.carryLoot && getCarryLoot !== '' &&\r\n                          <View style={[styles.tableRowBox,\r\n                            {width: (Platform.OS !== 'web')\r\n                                    ? (width < 400) ? 48 : 66\r\n                                    : (width < 626) ? 60 : 100,\r\n                            borderColor: colors.border},\r\n                            (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                            (parseInt(getCarryLoot) + props.totals[a][3]) &&\r\n                            {backgroundColor: colors.found}\r\n                          ]}>\r\n                            <ImageBackground\r\n                              source={(getCurrentTheme === 'dark')\r\n                                ? ((getCarryFound &&\r\n                                  (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                                  (parseInt(getCarryLoot) + props.totals[a][3]))\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundDarkS : bgFoundDark)\r\n                                  : bgDefaultDark)\r\n                                : ((getCarryFound &&\r\n                                  (parseInt(getCarryLoot) + getFoundLoot[a][3]) >=\r\n                                  (parseInt(getCarryLoot) + props.totals[a][3]))\r\n                                  ? ((Platform.OS === 'web' && width < 626)\r\n                                    ? bgFoundLightS : bgFoundLight)\r\n                                  : bgDefaultLight)}\r\n                              resizeMode=\"cover\"\r\n                              style={[\r\n                                styles.totalBackground\r\n                              ]}\r\n                            >\r\n                              <Text style={[\r\n                                styles.tableRowText, {color: colors.text}\r\n                              ]}>\r\n                                {getCarryFound &&\r\n                                  parseInt(getCarryLoot) + getFoundLoot[a][3]}\r\n                                {!getCarryFound && getFoundLoot[a][3]}\r\n                                {((Platform.OS !== 'web' && width < 400) ||\r\n                                  (Platform.OS === 'web' && width < 626)) &&\r\n                                  \"\\n\"\r\n                                }\r\n                                {\" / \"}\r\n                                {parseInt(getCarryLoot) + props.totals[a][3]}\r\n                              </Text>\r\n                            </ImageBackground>\r\n                          </View>\r\n                        }\r\n                      </>\r\n                    }\r\n                  </View>\r\n                }\r\n              </View>\r\n            ))}\r\n          </View>\r\n        }\r\n\r\n        {/* If this mission has a loot goal,\r\n            display a table of loot goals. */}\r\n        {( (props.goal1 && props.goal1.total &&\r\n            Math.max(...props.goal1.total) > 0) ||\r\n           (props.goal2 && props.goal2.total &&\r\n            Math.max(...props.goal2.total) > 0) ) &&\r\n          <View style={styles.spacedView}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Loot Goals</Text>\r\n              </View>\r\n              {/* Column for the first loot goal. */}\r\n              {props.goal1 && props.goal1.total &&\r\n                Math.max(...props.goal1.total) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  {/* Is this loot goal optional or a bonus? */}\r\n                  {props.goal1.info !== \"optional\" &&\r\n                   props.goal1.info !== \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>Required</Text>\r\n                  }\r\n                  {props.goal1.info === \"optional\" &&\r\n                    <Text style={styles.tableHeadText}>(Optional)</Text>\r\n                  }\r\n                  {props.goal1.info === \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>(Bonus)</Text>\r\n                  }\r\n                </View>\r\n              }\r\n              {/* Column for the first goal's gold minimum. */}\r\n              {props.goal1 && props.goal1.gold &&\r\n                Math.max(...props.goal1.gold) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the first goal's gems minimum. */}\r\n              {props.goal1 && props.goal1.gems &&\r\n                Math.max(...props.goal1.gems) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the first goal's goods minimum. */}\r\n              {props.goal1 && props.goal1.goods &&\r\n                Math.max(...props.goal1.goods) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the second loot goal. */}\r\n              {props.goal2 && props.goal2.total &&\r\n                Math.max(...props.goal2.total) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  {/* Is this loot goal optional or a bonus? */}\r\n                  {props.goal2.info !== \"optional\" &&\r\n                   props.goal2.info !== \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>Required</Text>\r\n                  }\r\n                  {props.goal2.info === \"optional\" &&\r\n                    <Text style={styles.tableHeadText}>(Optional)</Text>\r\n                  }\r\n                  {props.goal2.info === \"bonus\" &&\r\n                    <Text style={styles.tableHeadText}>(Bonus)</Text>\r\n                  }\r\n                </View>\r\n              }\r\n              {/* Column for the second goal's gold minimum. */}\r\n              {props.goal2 && props.goal2.gold &&\r\n                Math.max(...props.goal2.gold) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGold}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the second goal's gems minimum. */}\r\n              {props.goal2 && props.goal2.gems &&\r\n                Math.max(...props.goal2.gems) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGems}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n              {/* Column for the second goal's goods minimum. */}\r\n              {props.goal2 && props.goal2.goods &&\r\n                Math.max(...props.goal2.goods) > 0 &&\r\n                <View style={[\r\n                  styles.tableHeadBox,\r\n                  {width: (Platform.OS !== 'web')\r\n                          ? (width < 400) ? 48 : 66\r\n                          : (width < 626) ? 60 : 100,\r\n                  backgroundColor: colors.backDark,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Image\r\n                    source={iconGoods}\r\n                    style={styles.imgLootIcon}\r\n                  />\r\n                </View>\r\n              }\r\n            </View>\r\n            {props.goal1.total.map((goalKey, g) => (\r\n              <View key={`total_${g}`}>\r\n                {/* Default row: All, N+H, N+X, or N */}\r\n                {/* Second row: H+X or H */}\r\n                {/* Third row: X */}\r\n                {((g === 0) ||\r\n                  (g === 1 && !getGoalNH) ||\r\n                  (g === 2 && !getGoalHX && !getGoalNX)) &&\r\n                  <View style={styles.tableRow}>\r\n                    {/* Make sure difficulty level has a loot goal. */}\r\n                    {/* Edge case for a gold/gems/goods minimum\r\n                        but not a total minimum. */}\r\n                    {(goalKey !== 0 ||\r\n                      (goalKey === 0 &&\r\n                        ((props.goal1.gold && props.goal1.gold[g] !== 0) ||\r\n                        (props.goal1.gems && props.goal1.gems[g] !== 0) ||\r\n                        (props.goal1.goods && props.goal1.goods[g] !== 0))\r\n                      )\r\n                    ) &&\r\n                      <>\r\n                        <View style={[\r\n                          styles.tableRowStart,\r\n                          styles.sizeRowStart,\r\n                          {backgroundColor: colors.backMed,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          {/* All difficulties have the same goal. */}\r\n                          {g === 0 &&\r\n                            getGoalNH && getGoalHX && getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              All\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Hard have the same goal. */}\r\n                          {g === 0 &&\r\n                            getGoalNH && !getGoalHX && !getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard and Expert have the same goal. */}\r\n                          {g === 1 &&\r\n                            !getGoalNH && getGoalHX && !getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal and Expert have the same goal. */}\r\n                          {g === 0 &&\r\n                            !getGoalNH && !getGoalHX && getGoalNX &&\r\n                            <Text style={[\r\n                              styles.tableRowText, {color: colors.text}\r\n                            ]}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>/\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Normal has a different goal. */}\r\n                          {g === 0 && !getGoalNH && !getGoalNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locN}\r\n                              ]}>\r\n                                {props.diffNames[0]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Hard has a different goal. */}\r\n                          {g === 1 && !getGoalNH && !getGoalHX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locH}\r\n                              ]}>\r\n                                {props.diffNames[1]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                          {/* Expert has a different goal. */}\r\n                          {g === 2 && !getGoalHX && !getGoalNX &&\r\n                            <Text style={styles.tableRowText}>\r\n                              <Text style={[\r\n                                styles.locCount, {color: colors.locX}\r\n                              ]}>\r\n                                {props.diffNames[2]}\r\n                              </Text>\r\n                            </Text>\r\n                          }\r\n                        </View>\r\n                        {/* Display found loot & loot goal. */}\r\n                        <GoalView\r\n                          goalLoot={goalKey}\r\n                          totalLoot={props.totals[g][3]}\r\n                          foundLoot={getFoundLoot[g][3]}\r\n                        />\r\n                        {/* Is there a minimum gold requirement? */}\r\n                        {props.goal1.gold &&\r\n                          Math.max(...props.goal1.gold) > 0 &&\r\n                          <GoalView\r\n                            goalLoot={props.goal1.gold[g]}\r\n                            totalLoot={props.totals[g][0]}\r\n                            foundLoot={getFoundLoot[g][0]}\r\n                          />\r\n                        }\r\n                        {/* Is there a minimum gems requirement? */}\r\n                        {props.goal1.gems &&\r\n                          Math.max(...props.goal1.gems) > 0 &&\r\n                          <GoalView\r\n                            goalLoot={props.goal1.gems[g]}\r\n                            totalLoot={props.totals[g][1]}\r\n                            foundLoot={getFoundLoot[g][1]}\r\n                          />\r\n                        }\r\n                        {/* Is there a minimum goods requirement? */}\r\n                        {props.goal1.goods &&\r\n                          Math.max(...props.goal1.goods) > 0 &&\r\n                          <GoalView\r\n                            goalLoot={props.goal1.goods[g]}\r\n                            totalLoot={props.totals[g][2]}\r\n                            foundLoot={getFoundLoot[g][2]}\r\n                          />\r\n                        }\r\n                        {/* Is there a second loot goal? */}\r\n                        {props.goal2 && props.goal2.total &&\r\n                          Math.max(...props.goal2.total) > 0 &&\r\n                          <>\r\n                            <GoalView\r\n                              goalLoot={props.goal2.total[g]}\r\n                              totalLoot={props.totals[g][3]}\r\n                              foundLoot={getFoundLoot[g][3]}\r\n                            />\r\n                            {/* Is there a minimum gold requirement? */}\r\n                            {props.goal2 && props.goal2.gold &&\r\n                              Math.max(...props.goal2.gold) > 0 &&\r\n                              <GoalView\r\n                                goalLoot={props.goal2.gold[g]}\r\n                                totalLoot={props.totals[g][0]}\r\n                                foundLoot={getFoundLoot[g][0]}\r\n                              />\r\n                            }\r\n                            {/* Is there a minimum gems requirement? */}\r\n                            {props.goal2 && props.goal2.gems &&\r\n                              Math.max(...props.goal2.gems) > 0 &&\r\n                              <GoalView\r\n                                goalLoot={props.goal2.gems[g]}\r\n                                totalLoot={props.totals[g][1]}\r\n                                foundLoot={getFoundLoot[g][1]}\r\n                              />\r\n                            }\r\n                            {/* Is there a minimum goods requirement? */}\r\n                            {props.goal2 && props.goal2.goods &&\r\n                              Math.max(...props.goal2.goods) > 0 &&\r\n                              <GoalView\r\n                                goalLoot={props.goal2.goods[g]}\r\n                                totalLoot={props.totals[g][2]}\r\n                                foundLoot={getFoundLoot[g][2]}\r\n                              />\r\n                            }\r\n                          </>\r\n                        }\r\n                      </>\r\n                    }\r\n                  </View>\r\n                }\r\n              </View>\r\n            ))}\r\n          </View>\r\n        }\r\n\r\n        {/* If this mission has pickpockets,\r\n            display a table of pickpocket counts. */}\r\n        {/* Because difficulties can have the same pick count\r\n            but different items/AI to pickpocket,\r\n            keep diffs separate for accurate counts. */}\r\n        {(props.pocketCount &&\r\n         (Math.max(...props.pocketCount) > 0) ) &&\r\n          <View style={styles.spacedView}>\r\n            <View style={styles.tableHeader}>\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.sizeRowStart,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Pickpockets</Text>\r\n              </View>\r\n              {/* Column header. */}\r\n              <View style={[\r\n                styles.tableHeadBox,\r\n                styles.pocketRowBox,\r\n                {backgroundColor: colors.backDark,\r\n                borderColor: colors.border}\r\n              ]}>\r\n                <Text style={styles.tableHeadText}>Total</Text>\r\n              </View>\r\n            </View>\r\n            {/* Normal difficulty. */}\r\n            {props.pocketCount[0] > 0 &&\r\n              <View style={styles.tableRow}>\r\n                {/* Row header. */}\r\n                <View style={[\r\n                  styles.tableRowStart,\r\n                  styles.sizeRowStart,\r\n                  {backgroundColor: colors.backMed,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.tableRowText,\r\n                    styles.locCount,\r\n                    {color: colors.locN}\r\n                  ]}>\r\n                    {props.diffNames[0]}\r\n                  </Text>\r\n                </View>\r\n                {/* Display found pickpockets & max pickpockets. */}\r\n                <View style={[\r\n                  styles.tableRowBox,\r\n                  styles.pocketRowBox,\r\n                  {borderColor: colors.border}\r\n                ]}>\r\n                  <ImageBackground\r\n                    source={(getCurrentTheme === 'dark')\r\n                      ? ((getFoundPocket[0] >= props.pocketCount[0])\r\n                        ? ((Platform.OS === 'web' && width < 626)\r\n                          ? bgFoundDarkS : bgFoundDark)\r\n                        : bgDefaultDark)\r\n                      : ((getFoundPocket[0] >= props.pocketCount[0])\r\n                        ? ((Platform.OS === 'web' && width < 626)\r\n                          ? bgFoundLightS : bgFoundLight)\r\n                        : bgDefaultLight)}\r\n                    resizeMode=\"cover\"\r\n                    style={[\r\n                      styles.totalBackground\r\n                    ]}\r\n                  >\r\n                    <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                      {getFoundPocket[0]}{\" / \"}{props.pocketCount[0]}\r\n                    </Text>\r\n                  </ImageBackground>\r\n                </View>\r\n              </View>\r\n            }\r\n            {/* Hard difficulty. */}\r\n            {props.pocketCount[1] > 0 &&\r\n              <View style={styles.tableRow}>\r\n                {/* Row header. */}\r\n                <View style={[\r\n                  styles.tableRowStart,\r\n                  styles.sizeRowStart,\r\n                  {backgroundColor: colors.backMed,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.tableRowText,\r\n                    styles.locCount,\r\n                    {color: colors.locH}\r\n                  ]}>\r\n                    {props.diffNames[1]}\r\n                  </Text>\r\n                </View>\r\n                {/* Display found pickpockets & max pickpockets. */}\r\n                <View style={[\r\n                  styles.tableRowBox,\r\n                  styles.pocketRowBox,\r\n                  {borderColor: colors.border}\r\n                ]}>\r\n                  <ImageBackground\r\n                    source={(getCurrentTheme === 'dark')\r\n                      ? ((getFoundPocket[1] >= props.pocketCount[1])\r\n                        ? ((Platform.OS === 'web' && width < 626)\r\n                          ? bgFoundDarkS : bgFoundDark)\r\n                        : bgDefaultDark)\r\n                      : ((getFoundPocket[1] >= props.pocketCount[1])\r\n                        ? ((Platform.OS === 'web' && width < 626)\r\n                          ? bgFoundLightS : bgFoundLight)\r\n                        : bgDefaultLight)}\r\n                    resizeMode=\"cover\"\r\n                    style={[\r\n                      styles.totalBackground\r\n                    ]}\r\n                  >\r\n                    <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                      {getFoundPocket[1]}{\" / \"}{props.pocketCount[1]}\r\n                    </Text>\r\n                  </ImageBackground>\r\n                </View>\r\n              </View>\r\n            }\r\n            {/* Expert difficulty. */}\r\n            {props.pocketCount[2] > 0 &&\r\n              <View style={styles.tableRow}>\r\n                {/* Row header. */}\r\n                <View style={[\r\n                  styles.tableRowStart,\r\n                  styles.sizeRowStart,\r\n                  {backgroundColor: colors.backMed,\r\n                  borderColor: colors.border}\r\n                ]}>\r\n                  <Text style={[\r\n                    styles.tableRowText,\r\n                    styles.locCount,\r\n                    {color: colors.locX}\r\n                  ]}>\r\n                    {props.diffNames[2]}\r\n                  </Text>\r\n                </View>\r\n                {/* Display found pickpockets & max pickpockets. */}\r\n                <View style={[\r\n                  styles.tableRowBox,\r\n                  styles.pocketRowBox,\r\n                  {borderColor: colors.border}\r\n                ]}>\r\n                  <ImageBackground\r\n                    source={(getCurrentTheme === 'dark')\r\n                      ? ((getFoundPocket[2] >= props.pocketCount[2])\r\n                        ? ((Platform.OS === 'web' && width < 626)\r\n                          ? bgFoundDarkS : bgFoundDark)\r\n                        : bgDefaultDark)\r\n                      : ((getFoundPocket[2] >= props.pocketCount[2])\r\n                        ? ((Platform.OS === 'web' && width < 626)\r\n                          ? bgFoundLightS : bgFoundLight)\r\n                        : bgDefaultLight)}\r\n                    resizeMode=\"cover\"\r\n                    style={[\r\n                      styles.totalBackground\r\n                    ]}\r\n                  >\r\n                    <Text style={[styles.tableRowText, {color: colors.text}]}>\r\n                      {getFoundPocket[2]}{\" / \"}{props.pocketCount[2]}\r\n                    </Text>\r\n                  </ImageBackground>\r\n                </View>\r\n              </View>\r\n            }\r\n          </View>\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\n/* **************** */\r\n/*     GOAL VIEW    */\r\n/* **************** */\r\n// Custom view component of a loot goal and its percentage.\r\nexport function GoalView(props) {\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  //const {getFoundLoot, setFoundLoot, getFoundPocket, setFoundPocket} =\r\n  //  React.useContext(FoundContext);\r\n\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  return (\r\n    <>\r\n      {/* If no value minimum, display an empty space. */}\r\n      {props.goalLoot === 0 &&\r\n        <View style={styles.emptyRowBox} />\r\n      }\r\n      {/* Otherwise, display the loot goal. */}\r\n      {props.goalLoot > 0 &&\r\n        <View style={[\r\n          styles.tableRowBox,\r\n          {width: (Platform.OS !== 'web')\r\n                  ? (width < 400) ? 48 : 66\r\n                  : (width < 626) ? 60 : 100,\r\n          borderColor: colors.border}\r\n        ]}>\r\n          <ImageBackground\r\n            source={(getCurrentTheme === 'dark')\r\n              ? ((props.foundLoot >= props.goalLoot)\r\n                ? ((Platform.OS === 'web' && width < 626)\r\n                  ? bgFoundDarkS : bgFoundDark)\r\n                : bgDefaultDark)\r\n              : ((props.foundLoot >= props.goalLoot)\r\n                ? ((Platform.OS === 'web' && width < 626)\r\n                  ? bgFoundLightS : bgFoundLight)\r\n                : bgDefaultLight)}\r\n            resizeMode=\"cover\"\r\n            style={[\r\n              styles.totalBackground\r\n            ]}\r\n          >\r\n            {/* Display found loot compared to loot goal. */}\r\n            <Text style={[\r\n              styles.tableRowText,\r\n              {color: colors.text}\r\n            ]}>\r\n              {props.foundLoot}\r\n              {((Platform.OS !== 'web' && width < 400) ||\r\n                (Platform.OS === 'web' && width < 626)) &&\r\n                \"\\n\"\r\n              }\r\n              {\" / \"}\r\n              {props.goalLoot}\r\n              {((Platform.OS !== 'web' && width >= 400) ||\r\n                (Platform.OS === 'web' && width >= 626)) &&\r\n                \" \"\r\n              }\r\n            </Text>\r\n            {/* Display loot goal percentage. */}\r\n            <Text style={[\r\n              styles.tableRowText,\r\n              styles.locCount,\r\n              {color: colors.text}\r\n            ]}>\r\n              {\"( \"}\r\n              {`${Math.round(\r\n                (props.goalLoot / props.totalLoot) * 100 )}`}\r\n              {\"% )\"}\r\n            </Text>\r\n          </ImageBackground>\r\n        </View>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*    FILTER VIEW   */\r\n/* **************** */\r\n// Custom view component of options for filtering item locations.\r\nexport function FilterView(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // ShowModal: tracks the modal's visibility.\r\n  // Used to show or hide the modal with 'please wait' text.\r\n  const [getShowModal, setShowModal] = React.useState(false);\r\n\r\n  // Fetch FoundLoot and FoundPocket states from context.\r\n  const {accumLoot, accumPocket} =\r\n    React.useContext(FoundContext);\r\n\r\n  // Fetch FilterDiff, FilterMode, and FilterArea states from context.\r\n  const {getFilterDiffN, setFilterDiffN,\r\n        getFilterDiffH, setFilterDiffH,\r\n        getFilterDiffX, setFilterDiffX,\r\n        getFilterModeA, setFilterModeA,\r\n        getFilterModeB, setFilterModeB,\r\n        getFilterModeC, setFilterModeC,\r\n        getFilterLootGold, setFilterLootGold,\r\n        getFilterLootGems, setFilterLootGems,\r\n        getFilterLootGoods, setFilterLootGoods,\r\n        getFilterArea, setFilterArea} =\r\n    React.useContext(FilterContext);\r\n\r\n  // Fetch global setting states from context.\r\n  const {getCurrentTheme, setCurrentTheme} =\r\n    React.useContext(SettingContext);\r\n\r\n  // Variables for checkbox icon formatting.\r\n  const checkSize = 14;\r\n  const checkColorOn = getCurrentTheme === 'dark'\r\n    ? 'goldenrod' : 'olive';\r\n  const checkColorOff = \"gray\";\r\n\r\n  // Remove this mission's data in device storage.\r\n  const removeStored = async () => {\r\n    const invKeys = [];\r\n    // Show the 'please wait' modal.\r\n    setShowModal(true);\r\n    // Create an array large enough to contain all IDs.\r\n    for (let i = 1; i <= 80; i++) {\r\n      invKeys.push(`@inventory_${props.id}_loot_${i}`);\r\n    }\r\n    for (let i = 1; i <= 110; i++) {\r\n      invKeys.push(`@inventory_${props.id}_item_${i}`);\r\n    }\r\n    for (let i = 1; i <= 70; i++) {\r\n      invKeys.push(`@inventory_${props.id}_junk_${i}`);\r\n    }\r\n    for (let i = 1; i <= 20; i++) {\r\n      invKeys.push(`@secret_${props.id}_sec_${i}`);\r\n    }\r\n    try {\r\n      await AsyncStorage.multiRemove(invKeys);\r\n      await AsyncStorage.removeItem(`@myloot_${props.title}`);\r\n      await AsyncStorage.removeItem(`@mypocket_${props.title}`);\r\n      //alert('Cleared all items.');\r\n    } catch (e) {\r\n      // Error: Clearing the data failed.\r\n      alert('Failed to clear data.');\r\n    }\r\n\r\n    // Reset loot & pickpocket totals to 0.\r\n    accumLoot.current = [[0,0,0,0],[0,0,0,0],[0,0,0,0]];\r\n    accumPocket.current = [0,0,0];\r\n    // Update item boxes.\r\n    props.setLinkedFind('reset');\r\n    // Hide the 'please wait' modal.\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Button to clear all selected items. */}\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.allButton,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border}\r\n        ]}\r\n        onPress={removeStored}\r\n      >\r\n        <Text style={{color: colors.text}}>\r\n          Clear All\r\n        </Text>\r\n        {/* Modal to show 'please wait' text. */}\r\n        <Modal\r\n          animationType='fade'\r\n          transparent={true}\r\n          visible={getShowModal}\r\n          onRequestClose={() => setShowModal(false)}\r\n        >\r\n          <View\r\n            style={styles.modalView}\r\n            activeOpacity={1}\r\n          >\r\n            <View style={[\r\n              styles.waitModal,\r\n              {backgroundColor: colors.backLight,\r\n              borderColor: colors.border}\r\n            ]}>\r\n              <Text style={{color: colors.text}}>\r\n                Clearing mission data.\r\n              </Text>\r\n              <Text style={{color: colors.text}}>\r\n                Please wait...\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.filters}>\r\n        <Text style={[\r\n            Platform.OS !== 'web' && {\r\n              fontSize: width*0.035,\r\n            },\r\n            Platform.OS === 'web' && {\r\n              fontSize: (width > 460) ? 14 : width*0.03,\r\n            },\r\n            {color: colors.text}\r\n          ]}>\r\n          Filters:\r\n        </Text>\r\n        <View>\r\n          {/* Row of difficulty filters. */}\r\n          <View style={styles.filterRow}>\r\n            {/* Normal difficulty filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {minWidth: (Platform.OS === 'web')\r\n                  ? 105 : width*0.256,\r\n                backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterDiffN && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterDiffN(!getFilterDiffN)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterDiffN ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterDiffN ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text style={[\r\n                styles.locCount,\r\n                {fontSize: (Platform.OS === 'web')\r\n                  ? 12 : width*0.034,\r\n                color: colors.locN}\r\n              ]}>\r\n                {` ${props.diffNames[0]}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {/* Hard difficulty filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {minWidth: (Platform.OS === 'web')\r\n                  ? 105 : width*0.256,\r\n                backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterDiffH && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterDiffH(!getFilterDiffH)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterDiffH ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterDiffH ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text style={[\r\n                styles.locCount,\r\n                {fontSize: (Platform.OS === 'web')\r\n                  ? 12 : width*0.034,\r\n                color: colors.locH}\r\n              ]}>\r\n                {` ${props.diffNames[1]}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            {/* Expert difficulty filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {minWidth: (Platform.OS === 'web')\r\n                  ? 105 : width*0.256,\r\n                backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterDiffX && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterDiffX(!getFilterDiffX)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterDiffX ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterDiffX ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text style={[\r\n                styles.locCount,\r\n                {fontSize: (Platform.OS === 'web')\r\n                  ? 12 : width*0.034,\r\n                color: colors.locX}\r\n              ]}>\r\n                {` ${props.diffNames[2]}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          {/* Row of game mode filters, if applicable. */}\r\n          {props.modeNames &&\r\n            <View style={styles.filterRow}>\r\n              {/* Game mode A filter. */}\r\n              {props.modeNames.length >= 1 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeA && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeA(!getFilterModeA)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeA ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeA ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: colors.text}\r\n                  ]}>\r\n                    {` ${props.modeNames[0].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Game mode B filter. */}\r\n              {props.modeNames.length >= 2 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeB && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeB(!getFilterModeB)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeB ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeB ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: colors.text}\r\n                  ]}>\r\n                    {` ${props.modeNames[1].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n              {/* Game mode C filter. */}\r\n              {props.modeNames.length >= 3 &&\r\n                <TouchableOpacity\r\n                  // Change background color when toggled.\r\n                  style={[styles.filterButton,\r\n                    {minWidth: (Platform.OS === 'web')\r\n                      ? 105 : width*0.256,\r\n                    backgroundColor: colors.backLight,\r\n                    borderColor: colors.border},\r\n                    !getFilterModeC && {backgroundColor: colors.backDark}\r\n                  ]}\r\n                  // Toggle whether this filter is on or off.\r\n                  onPress={() => setFilterModeC(!getFilterModeC)}\r\n                >\r\n                  {/* Change checkbox icon when toggled. */}\r\n                  <Ionicons\r\n                    name={getFilterModeC ? \"checkbox\" : \"square-outline\"}\r\n                    size={checkSize}\r\n                    color={getFilterModeC ? checkColorOn : checkColorOff}\r\n                  />\r\n                  <Text style={[\r\n                    styles.filterTextMode,\r\n                    {fontSize: (Platform.OS === 'web')\r\n                      ? 12 : width*0.028,\r\n                    color: colors.text}\r\n                  ]}>\r\n                    {` ${props.modeNames[2].name}`}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              }\r\n            </View>\r\n          }\r\n\r\n          {/* Row of loot type filters. */}\r\n          <View style={styles.filterRow}>\r\n            {/* Gold loot filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {minWidth: (Platform.OS === 'web')\r\n                  ? 105 : width*0.256,\r\n                backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterLootGold && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterLootGold(!getFilterLootGold)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterLootGold ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterLootGold ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text> </Text>\r\n              <Image\r\n                source={iconGold}\r\n                style={styles.imgLootIconBig}\r\n              />\r\n            </TouchableOpacity>\r\n            {/* Gems loot filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {minWidth: (Platform.OS === 'web')\r\n                  ? 105 : width*0.256,\r\n                backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterLootGems && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterLootGems(!getFilterLootGems)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterLootGems ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterLootGems ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text> </Text>\r\n              <Image\r\n                source={iconGems}\r\n                style={styles.imgLootIconBig}\r\n              />\r\n            </TouchableOpacity>\r\n            {/* Goods loot filter. */}\r\n            <TouchableOpacity\r\n              // Change background color when toggled.\r\n              style={[styles.filterButton,\r\n                {minWidth: (Platform.OS === 'web')\r\n                  ? 105 : width*0.256,\r\n                backgroundColor: colors.backLight,\r\n                borderColor: colors.border},\r\n                !getFilterLootGoods && {backgroundColor: colors.backDark}\r\n              ]}\r\n              // Toggle whether this filter is on or off.\r\n              onPress={() => setFilterLootGoods(!getFilterLootGoods)}\r\n            >\r\n              {/* Change checkbox icon when toggled. */}\r\n              <Ionicons\r\n                name={getFilterLootGoods ? \"checkbox\" : \"square-outline\"}\r\n                size={checkSize}\r\n                color={getFilterLootGoods ? checkColorOn : checkColorOff}\r\n              />\r\n              <Text> </Text>\r\n              <Image\r\n                source={iconGoods}\r\n                style={styles.imgLootIconBig}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Area filter. */}\r\n      <MultipleSelectList\r\n        boxStyles={[\r\n          styles.filterAreaBox,\r\n          Platform.OS !== 'web' && {\r\n            width: '80%',\r\n          },\r\n          Platform.OS === 'web' && {\r\n            width: (width > 460) ? 425 : width*0.92,\r\n          },\r\n          {backgroundColor: colors.inputArea,\r\n          borderColor: colors.inputBorder}\r\n        ]}\r\n        checkBoxStyles={{backgroundColor: colors.inputCheck}}\r\n        inputStyles={{color: colors.text}}\r\n        labelStyles={{color: colors.text}}\r\n        dropdownStyles={[\r\n          styles.filterAreaDropdown,\r\n          Platform.OS !== 'web' && {\r\n            width: '80%',\r\n          },\r\n          Platform.OS === 'web' && {\r\n            width: (width > 460) ? 425 : width*0.92,\r\n          },\r\n          {backgroundColor: colors.inputArea,\r\n          borderColor: colors.inputBorder}\r\n        ]}\r\n        dropdownItemStyles={styles.filterAreaListItem}\r\n        dropdownTextStyles={[\r\n          styles.filterAreaListText,\r\n          {color: colors.text}\r\n        ]}\r\n        badgeStyles={[\r\n          styles.filterAreaBadge,\r\n          {backgroundColor: colors.backLight,\r\n          borderColor: colors.border}\r\n        ]}\r\n        badgeTextStyles={[\r\n          styles.filterAreaBadgeText,\r\n          {color: colors.text}\r\n        ]}\r\n        data={props.areas}\r\n        save=\"value\"\r\n        setSelected={(area) => setFilterArea(area)}\r\n        placeholder=\"Select Areas\"\r\n        label=\"Selected:\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n// Define various styles here.\r\nconst styles = StyleSheet.create({\r\n  listEntry: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    alignItems: 'stretch',\r\n  },\r\n  nameEntry: {\r\n    borderWidth: 1,\r\n    borderTopLeftRadius: 8,\r\n    borderBottomLeftRadius: 8,\r\n    alignItems: 'center',\r\n    width: (Platform.OS === 'web') ? 80 : '15%',\r\n  },\r\n  nameEntryLoot: {\r\n    width: (Platform.OS === 'web') ? 80 : '13.5%',\r\n  },\r\n  subEntry: {\r\n    flex: 1,\r\n    width: (Platform.OS === 'web') ? 764 : '85%',\r\n  },\r\n  subEntryLoot: {\r\n    flex: 1,\r\n    width: (Platform.OS === 'web') ? 764 : '86.5%',\r\n  },\r\n  subEntryLocsPerValue: {\r\n    flex: 10,\r\n    flexDirection: 'row',\r\n    minHeight: (Platform.OS === 'web') ? 38 : 30,\r\n  },\r\n  subEntryLPV_Web: {\r\n    //backgroundColor: 'orange',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    minHeight: (Platform.OS === 'web') ? 38 : 30,\r\n  },\r\n  subEntryValue: {\r\n    //flexDirection: 'row',\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    paddingLeft: (Platform.OS === 'web') ? 4 : 2,\r\n    width: (Platform.OS === 'web') ? 60 : '11%',\r\n  },\r\n  subEntryLoc: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignContent: 'stretch',\r\n    //width: '89%',\r\n  },\r\n  subEntryLocLoot: {\r\n    width: (Platform.OS === 'web') ? 228 : '89%',\r\n  },\r\n  lootRow: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  findBackground: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n  },\r\n  find: {\r\n    borderWidth: 1,\r\n    width: (Platform.OS === 'web') ? 228 : '50%',\r\n  },\r\n  entryText: {\r\n    fontSize: (Platform.OS === 'web') ? 11 : 7.5,\r\n    textAlign: 'center',\r\n  },\r\n  lootText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n    marginLeft: (Platform.OS === 'web') ? 3 : 2,\r\n  },\r\n  locText: {\r\n    //fontFamily: 'BlueHighway',\r\n    //fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  locCount: {\r\n    fontWeight: 'bold',\r\n  },\r\n  locPick: {\r\n    fontStyle: 'italic',\r\n  },\r\n  locBox: {\r\n    textDecorationLine: 'underline',\r\n  },\r\n  locNoGet: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  secretTrigList: {\r\n    //width: (Platform.OS === 'web') ? 590 : '72%',\r\n  },\r\n  secretTrig: {\r\n    flexDirection: 'row',\r\n    flexGrow: 1,\r\n  },\r\n  secretTrigID: {\r\n    borderWidth: 1,\r\n    alignItems: 'center',\r\n    paddingHorizontal: 3,\r\n    //width: (Platform.OS === 'web') ? 140 : '27%',\r\n  },\r\n  secretTrigOne: {\r\n    borderBottomLeftRadius: 8,\r\n  },\r\n  secretTrigTop: {\r\n    borderTopLeftRadius: 8,\r\n    paddingBottom: (Platform.OS === 'web') ? 5 : 3,\r\n  },\r\n  secretTrigMid: {\r\n    paddingVertical: 8,\r\n  },\r\n  secretTrigBot: {\r\n    borderBottomLeftRadius: 8,\r\n    paddingTop: (Platform.OS === 'web') ? 5 : 3,\r\n    paddingBottom: (Platform.OS === 'web') ? 16 : 13,\r\n  },\r\n  secretNum: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n    fontWeight: 'bold',\r\n  },\r\n  secretLoc: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    //width: (Platform.OS === 'web') ? 150 : '38%',\r\n  },\r\n  secretMethod: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n    //width: (Platform.OS === 'web') ? 300 : '35%',\r\n  },\r\n  secretText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  secretRewardList: {\r\n    //width: (Platform.OS === 'web') ? 175 : '28%',\r\n  },\r\n  secretRewardFlex: {\r\n    flexGrow: 100,\r\n  },\r\n  secretReward: {\r\n    borderWidth: 1,\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 2,\r\n  },\r\n  secretRewardText: {\r\n    fontSize: (Platform.OS === 'web') ? 12 : 8,\r\n  },\r\n  secretRewardOther: {\r\n    fontStyle: 'italic',\r\n  },\r\n  secretModal: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: (Platform.OS === 'web') ? 420 : 220,\r\n    height: (Platform.OS === 'web') ? 420 : 220,\r\n  },\r\n  waitModal: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 5,\r\n  },\r\n  modalView: {\r\n    backgroundColor: 'rgba(64,64,64,0.7)',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  totalBorder: {\r\n    borderTopWidth: 3,\r\n  },\r\n  totalView: {\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginBottom: 5,\r\n  },\r\n  carryView: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    margin: 5,\r\n  },\r\n  carryText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 12,\r\n  },\r\n  carryInput: {\r\n    borderWidth: 1,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    width: 50,\r\n    height: 22,\r\n    fontSize: 12,\r\n  },\r\n  spacedView: {\r\n    marginVertical: (Platform.OS === 'web') ? 8 : 5,\r\n  },\r\n  tableHeader: {\r\n    flexDirection: 'row',\r\n  },\r\n  tableHeadBox: {\r\n    borderWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: (Platform.OS === 'web') ? 100 : 66,\r\n    padding: 2,\r\n  },\r\n  tableHeadText: {\r\n    color: 'white',\r\n    fontSize: (Platform.OS === 'web') ? 13 : 8,\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n  },\r\n  tableRowStart: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    padding: (Platform.OS === 'web') ? 4 : 2,\r\n  },\r\n  sizeRowStart: {\r\n    width: (Platform.OS === 'web') ? 100 : 68,\r\n  },\r\n  tableRowBox: {\r\n    //backgroundColor: 'lightgray',\r\n    borderWidth: 1,\r\n    //justifyContent: 'center',\r\n    //alignItems: 'flex-end',\r\n    width: (Platform.OS === 'web') ? 100 : 66,\r\n  },\r\n  tableRowText: {\r\n    fontSize: (Platform.OS === 'web') ? 13 : 8,\r\n    textAlign: 'right',\r\n  },\r\n  emptyRowBox: {\r\n    width: (Platform.OS === 'web') ? 100 : 66,\r\n  },\r\n  pocketRowBox: {\r\n    width: (Platform.OS === 'web') ? 60 : 40,\r\n  },\r\n  totalBackground: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: (Platform.OS === 'web') ? 4 : 2,\r\n  },\r\n  filters: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 5,\r\n  },\r\n  filterButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    //minWidth: 105,\r\n    minHeight: 27,\r\n  },\r\n  filterTextFalse: {\r\n    color: 'white',\r\n  },\r\n  filterTextMode: {\r\n    //fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  filterAreaBox: {\r\n    borderRadius: 5,\r\n    //width: (Platform.OS === 'web') ? 425 : '80%',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterAreaDropdown: {\r\n    borderRadius: 5,\r\n    //width: (Platform.OS === 'web') ? 425 : '80%',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: 5,\r\n  },\r\n  filterAreaListItem: {\r\n    alignItems: 'center',\r\n    marginHorizontal: -5,\r\n    height: 30,\r\n  },\r\n  filterAreaListText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 10,\r\n  },\r\n  filterAreaBadge: {\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n    margin: -5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  filterAreaBadgeText: {\r\n    fontSize: 10,\r\n  },\r\n  allButton: {\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginVertical: (Platform.OS === 'web') ? 10 : 5,\r\n    paddingHorizontal: 4,\r\n    paddingVertical: 2,\r\n    width: 80,\r\n  },\r\n  imgStyle: {\r\n    marginTop: (Platform.OS === 'web') ? 4 : 2,\r\n    width: (Platform.OS === 'web') ? 64 : 40,\r\n    height: (Platform.OS === 'web') ? 64 : 40,\r\n  },\r\n  imgLootIcon: {\r\n    width: (Platform.OS === 'web') ? 15 : 10,\r\n    height: (Platform.OS === 'web') ? 15 : 10,\r\n  },\r\n  imgLootIconBig: {\r\n    width: (Platform.OS === 'web') ? 18 : 14,\r\n    height: (Platform.OS === 'web') ? 18 : 14,\r\n  },\r\n  imgSecret: {\r\n    //width: (Platform.OS === 'web') ? 128 : 70,\r\n    //height: (Platform.OS === 'web') ? 128 : 70,\r\n  },\r\n  imgSecretBig: {\r\n    width: (Platform.OS === 'web') ? 400 : 200,\r\n    height: (Platform.OS === 'web') ? 400 : 200,\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport {\r\n  //NavigationContainer,\r\n  //useNavigation,\r\n  DefaultTheme,\r\n  DarkTheme,\r\n  useTheme,\r\n} from '@react-navigation/native';\r\n//import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n//import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {\r\n  StyleSheet, Platform,\r\n  Image, //Alert,\r\n  Text, //TextInput,\r\n  //Button,\r\n  //TouchableOpacity,\r\n  View, ScrollView,\r\n  PixelRatio,\r\n  useWindowDimensions,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n//import { useFonts } from 'expo-font';\r\n\r\n// Import functions and components from other files.\r\nimport * as Loot from \"./Loot\";\r\n\r\n// Import contexts here.\r\nimport {FoundContext, CarryoverContext, FilterContext} from \"./Context\";\r\n\r\n// Add mission lootlists here.\r\nconst myList = {\r\n  \"t0_test\": require('./lists/t0_practice.json'), // App Test\r\n  \"t0_select\": require('./lists/t0_select.json'), // Select Test\r\n  \"t0_template12\": require('./lists/t0_template12.json'), // Template 1/2\r\n\r\n  // THIEF: THE DARK PROJECT\r\n  \"t1_training\": require('./lists/t1_training.json'), // A Keeper's Training\r\n  \"t1_bafford\": require('./lists/t1_bafford.json'), // Lord Bafford's Manor\r\n  \"t1_cragscleft\": require('./lists/t1_cragscleft.json'), // Break from Cragscleft Prison\r\n  \"t1_bonehoard\": require('./lists/t1_bonehoard.json'), // Down in the Bonehoard\r\n  \"t1_assassins\": require('./lists/t1_assassins.json'), // Assassins\r\n  \"t1_guild\": require('./lists/t1_guild.json'), // Thieves' Guild\r\n  //\"t1_sword\": require('./lists/t1_sword.json'), // The Sword\r\n  //\"t1_haunted\": require('./lists/t1_haunted.json'), // The Haunted Cathedral\r\n  //\"t1_towers\": require('./lists/t1_towers.json'), // The Mage Towers\r\n  //\"t1_lost\": require('./lists/t1_lost.json'), // The Lost City\r\n  //\"t1_song\": require('./lists/t1_song.json'), // Song of the Caverns\r\n  //\"t1_undercover\": require('./lists/t1_undercover.json'), // Undercover\r\n  //\"t1_return\": require('./lists/t1_return.json'), // Return to the Cathedral\r\n  //\"t1_escape\": require('./lists/t1_escape.json'), // Escape!\r\n  //\"t1_bedfellows\": require('./lists/t1_bedfellows.json'), // Strange Bedfellows\r\n  //\"t1_maw\": require('./lists/t1_maw.json'), // Into the Maw of Chaos\r\n  //\"t1_blooper\": require('./lists/t1_blooper.json'), // Blooper Reel\r\n\r\n  // THIEF II: THE METAL AGE\r\n  \"t2_interference\": require('./lists/t2_interference.json'), // Running Interference\r\n  \"t2_shipping\": require('./lists/t2_shipping.json'), // Shipping ... and Receiving\r\n  \"t2_framed\": require('./lists/t2_framed.json'), // Framed\r\n  \"t2_ambush\": require('./lists/t2_ambush.json'), // Ambush\r\n  \"t2_eavesdropping\": require('./lists/t2_eavesdropping.json'), // Eavesdropping\r\n  \"t2_bank\": require('./lists/t2_bank.json'), // First City Bank and Trust\r\n  //\"t2_blackmail\": require('./lists/t2_blackmail.json'), // Blackmail\r\n  //\"t2_courier\": require('./lists/t2_courier.json'), // Trace the Courier\r\n  //\"t2_blood\": require('./lists/t2_blood.json'), // Trail of Blood\r\n  //\"t2_party\": require('./lists/t2_party.json'), // Life of the Party\r\n  //\"t2_cargo\": require('./lists/t2_cargo.json'), // Precious Cargo\r\n  //\"t2_kidnap\": require('./lists/t2_kidnap.json'), // Kidnap\r\n  //\"t2_casing\": require('./lists/t2_casing.json'), // Casing the Joint\r\n  //\"t2_masks\": require('./lists/t2_masks.json'), // Masks\r\n  //\"t2_soulforge\": require('./lists/t2_soulforge.json'), // Sabotage at Soulforge\r\n  \"t2_guest\": require('./lists/t2_guest.json'), // The Unwelcome Guest\r\n\r\n  // Fan Missions\r\n  \"fm_lampfire\": require('./lists/fm_lampfire.json'), // Autumn in Lampfire Hills\r\n  \"fm_burrickhead\": require('./lists/fm_burrickhead.json'), // The Burrick's Head Inn\r\n  \"fm_spirit_resurrection\": require('./lists/fm_spirit_resurrection.json'), // Cult of the Resurrection\r\n  \"fm_agenda\": require('./lists/fm_agenda.json'), // Hidden Agenda\r\n  \"fm_maelstrom\": require('./lists/fm_maelstrom.json'), // Into the Maelstrom\r\n  \"fm_spirit_manse\": require('./lists/fm_spirit_manse.json'), // The Inverted Manse\r\n  \"fm_highway\": require('./lists/fm_highway.json'), // Thieves' Highway\r\n  \"fm_vault\": require('./lists/fm_vault.json'), // Through No Vault of My Own\r\n};\r\n\r\n// Add mission screenshots here.\r\nconst myScreens = {\r\n  // T1: A Keeper's Training\r\n  'MIS_t1_training_A': require('./assets/screens/t1_training_A.png'),\r\n  'MIS_t1_training_B': require('./assets/screens/t1_training_B.png'),\r\n  // T1: Lord Bafford's Manor\r\n  'MIS_t1_bafford_A': require('./assets/screens/t1_bafford_A.png'),\r\n  'MIS_t1_bafford_B': require('./assets/screens/t1_bafford_B.png'),\r\n  // T1: Break from Cragscleft Prison\r\n  'MIS_t1_cragscleft_A': require('./assets/screens/t1_cragscleft_A.png'),\r\n  'MIS_t1_cragscleft_B': require('./assets/screens/t1_cragscleft_B.png'),\r\n  // T1: Down in the Bonehoard\r\n  'MIS_t1_bonehoard_A': require('./assets/screens/t1_bonehoard_A.png'),\r\n  'MIS_t1_bonehoard_B': require('./assets/screens/t1_bonehoard_B.png'),\r\n  // T1: Assassins\r\n  'MIS_t1_assassins_A': require('./assets/screens/t1_assassins_A.png'),\r\n  'MIS_t1_assassins_B': require('./assets/screens/t1_assassins_B.png'),\r\n  // T1: Thieves' Guild\r\n  'MIS_t1_guild_A': require('./assets/screens/t1_guild_A.png'),\r\n  'MIS_t1_guild_B': require('./assets/screens/t1_guild_B.png'),\r\n  // T1: The Sword\r\n  //'MIS_t1_sword_A': require('./assets/screens/t1_sword_A.png'),\r\n  //'MIS_t1_sword_B': require('./assets/screens/t1_sword_B.png'),\r\n  // T1: The Haunted Cathedral\r\n  //'MIS_t1_haunted_A': require('./assets/screens/t1_haunted_A.png'),\r\n  //'MIS_t1_haunted_B': require('./assets/screens/t1_haunted_B.png'),\r\n  // T1: The Mage Towers\r\n  //'MIS_t1_mage_A': require('./assets/screens/t1_mage_A.png'),\r\n  //'MIS_t1_mage_B': require('./assets/screens/t1_mage_B.png'),\r\n  // T1: The Lost City\r\n  //'MIS_t1_lost_A': require('./assets/screens/t1_lost_A.png'),\r\n  //'MIS_t1_lost_B': require('./assets/screens/t1_lost_B.png'),\r\n  // T1: Song of the Caverns\r\n  //'MIS_t1_song_A': require('./assets/screens/t1_song_A.png'),\r\n  //'MIS_t1_song_B': require('./assets/screens/t1_song_B.png'),\r\n  // T1: Undercover\r\n  //'MIS_t1_undercover_A': require('./assets/screens/t1_undercover_A.png'),\r\n  //'MIS_t1_undercover_B': require('./assets/screens/t1_undercover_B.png'),\r\n  // T1: Return to the Cathedral\r\n  //'MIS_t1_return_A': require('./assets/screens/t1_return_A.png'),\r\n  //'MIS_t1_return_B': require('./assets/screens/t1_return_B.png'),\r\n  // T1: Escape!\r\n  //'MIS_t1_escape_A': require('./assets/screens/t1_escape_A.png'),\r\n  //'MIS_t1_escape_B': require('./assets/screens/t1_escape_B.png'),\r\n  // T1: Strange Bedfellows\r\n  //'MIS_t1_bedfellows_A': require('./assets/screens/t1_bedfellows_A.png'),\r\n  //'MIS_t1_bedfellows_B': require('./assets/screens/t1_bedfellows_B.png'),\r\n  // T1: Into the Maw of Chaos\r\n  //'MIS_t1_maw_A': require('./assets/screens/t1_maw_A.png'),\r\n  //'MIS_t1_maw_B': require('./assets/screens/t1_maw_B.png'),\r\n  // T1: Blooper Reel\r\n  //'MIS_t1_blooper_A': require('./assets/screens/t1_blooper_A.png'),\r\n  //'MIS_t1_blooper_B': require('./assets/screens/t1_blooper_B.png'),\r\n\r\n  // T2: Running Interference\r\n  'MIS_t2_interference_A': require('./assets/screens/t2_interference_A.png'),\r\n  'MIS_t2_interference_B': require('./assets/screens/t2_interference_B.png'),\r\n  // T2: Shipping ... and Receiving\r\n  'MIS_t2_shipping_A': require('./assets/screens/t2_shipping_A.png'),\r\n  'MIS_t2_shipping_B': require('./assets/screens/t2_shipping_B.png'),\r\n  // T2: Framed\r\n  'MIS_t2_framed_A': require('./assets/screens/t2_framed_A.png'),\r\n  'MIS_t2_framed_B': require('./assets/screens/t2_framed_B.png'),\r\n  // T2: Ambush\r\n  'MIS_t2_ambush_A': require('./assets/screens/t2_ambush_A.png'),\r\n  'MIS_t2_ambush_B': require('./assets/screens/t2_ambush_B.png'),\r\n  // T2: Eavesdropping\r\n  'MIS_t2_eavesdropping_A': require('./assets/screens/t2_eavesdropping_A.png'),\r\n  'MIS_t2_eavesdropping_B': require('./assets/screens/t2_eavesdropping_B.png'),\r\n  // T2: First City Bank and Trust\r\n  'MIS_t2_bank_A': require('./assets/screens/t2_bank_A.png'),\r\n  'MIS_t2_bank_B': require('./assets/screens/t2_bank_B.png'),\r\n  // T2: Blackmail\r\n  //'MIS_t2_blackmail_A': require('./assets/screens/t2_blackmail_A.png'),\r\n  //'MIS_t2_blackmail_B': require('./assets/screens/t2_blackmail_B.png'),\r\n  // T2: Trace the Courier\r\n  //'MIS_t2_courier_A': require('./assets/screens/t2_courier_A.png'),\r\n  //'MIS_t2_courier_B': require('./assets/screens/t2_courier_B.png'),\r\n  // T2: Trail of Blood\r\n  //'MIS_t2_blood_A': require('./assets/screens/t2_blood_A.png'),\r\n  //'MIS_t2_blood_B': require('./assets/screens/t2_blood_B.png'),\r\n  // T2: Life of the Party\r\n  //'MIS_t2_party_A': require('./assets/screens/t2_party_A.png'),\r\n  //'MIS_t2_party_B': require('./assets/screens/t2_party_B.png'),\r\n  // T2: Precious Cargo\r\n  //'MIS_t2_cargo_A': require('./assets/screens/t2_cargo_A.png'),\r\n  //'MIS_t2_cargo_B': require('./assets/screens/t2_cargo_B.png'),\r\n  // T2: Kidnap\r\n  //'MIS_t2_kidnap_A': require('./assets/screens/t2_kidnap_A.png'),\r\n  //'MIS_t2_kidnap_B': require('./assets/screens/t2_kidnap_B.png'),\r\n  // T2: Casing the Joint\r\n  //'MIS_t2_casing_A': require('./assets/screens/t2_casing_A.png'),\r\n  //'MIS_t2_casing_B': require('./assets/screens/t2_casing_B.png'),\r\n  // T2: Masks\r\n  //'MIS_t2_masks_A': require('./assets/screens/t2_masks_A.png'),\r\n  //'MIS_t2_masks_B': require('./assets/screens/t2_masks_B.png'),\r\n  // T2: Sabotage at Soulforge\r\n  //'MIS_t2_soulforge_A': require('./assets/screens/t2_soulforge_A.png'),\r\n  //'MIS_t2_soulforge_B': require('./assets/screens/t2_soulforge_B.png'),\r\n  // T2: The Unwelcome Guest (Demo)\r\n  //'MIS_t2_guest_A': require('./assets/screens/t2_guest_A.png'),\r\n  //'MIS_t2_guest_B': require('./assets/screens/t2_guest_B.png'),\r\n\r\n  // FM: Autumn in Lampfire Hills\r\n  'MIS_fm_lampfire_A': require('./assets/screens/fm_lampfire_A.png'),\r\n  'MIS_fm_lampfire_B': require('./assets/screens/fm_lampfire_B.png'),\r\n  // FM: The Burrick's Head Inn\r\n  'MIS_fm_burrickhead_A': require('./assets/screens/fm_burrickhead_A.png'),\r\n  'MIS_fm_burrickhead_B': require('./assets/screens/fm_burrickhead_B.png'),\r\n  // FM: Cult of the Resurrection\r\n  'MIS_fm_spirit_resurrection_A': require('./assets/screens/fm_spirit_resurrection_A.png'),\r\n  'MIS_fm_spirit_resurrection_B': require('./assets/screens/fm_spirit_resurrection_B.png'),\r\n  // FM: Hidden Agenda\r\n  'MIS_fm_agenda_A': require('./assets/screens/fm_agenda_A.png'),\r\n  'MIS_fm_agenda_B': require('./assets/screens/fm_agenda_B.png'),\r\n  // FM: Into the Maelstrom\r\n  'MIS_fm_maelstrom_A': require('./assets/screens/fm_maelstrom_A.png'),\r\n  'MIS_fm_maelstrom_B': require('./assets/screens/fm_maelstrom_B.png'),\r\n  // FM: The Inverted Manse\r\n  'MIS_fm_spirit_manse_A': require('./assets/screens/fm_spirit_manse_A.png'),\r\n  'MIS_fm_spirit_manse_B': require('./assets/screens/fm_spirit_manse_B.png'),\r\n  // FM: Thieves' Highway\r\n  'MIS_fm_highway_A': require('./assets/screens/fm_highway_A.png'),\r\n  'MIS_fm_highway_B': require('./assets/screens/fm_highway_B.png'),\r\n  // FM: Through No Vault of My Own\r\n  'MIS_fm_vault_A': require('./assets/screens/fm_vault_A.png'),\r\n  'MIS_fm_vault_B': require('./assets/screens/fm_vault_B.png'),\r\n};\r\n\r\n// Add item images here.\r\nconst myImages = {\r\n  // -- LOOT (1 & 2) --\r\n  'IMG_Purse': require('./assets/items12/purse.png'),\r\n  'IMG_CopperCoinStack': require('./assets/items12/coppercoinstack.png'),\r\n  'IMG_SilverCoinStack': require('./assets/items12/silvercoinstack.png'),\r\n  'IMG_GoldCoinStack': require('./assets/items12/goldcoinstack.png'),\r\n  'IMG_Coin': require('./assets/items12/coin.png'),\r\n  'IMG_LuckyCoins': require('./assets/items12/luckycoins.png'),\r\n  'IMG_GoldRing': require('./assets/items12/goldring.png'),\r\n  'IMG_WeddingRings': require('./assets/items12/weddingrings.png'),\r\n  'IMG_GemRing': require('./assets/items12/gemring.png'),\r\n  'IMG_SignetRing': require('./assets/items12/signetring.png'),\r\n  'IMG_SilverBracelet': require('./assets/items12/silverbracelet.png'),\r\n  'IMG_SerpentyleTorc': require('./assets/items12/serpentyletorc.png'),\r\n  'IMG_Necklace': require('./assets/items12/necklace.png'),\r\n  'IMG_Medallion': require('./assets/items12/medallion.png'),\r\n  'IMG_PurpleMedallion': require('./assets/items12/purplemedallion.png'),\r\n  'IMG_Tiara': require('./assets/items12/tiara.png'),\r\n  'IMG_AddonizioCrystal': require('./assets/items12/addoniziocrystal.png'),\r\n  'IMG_Gemstone': require('./assets/items12/gemstone.png'),\r\n  'IMG_MysticsSoul': require('./assets/items12/mysticssoul.png'),\r\n  'IMG_MysticsHeart': require('./assets/items12/mysticsheart.png'),\r\n  'IMG_PrecursorGem': require('./assets/items12/precursorgem.png'),\r\n  'IMG_PrecursorJar_Small': require('./assets/items12/precursorjar_small.png'),\r\n  'IMG_PrecursorJar_Tall': require('./assets/items12/precursorjar_tall.png'),\r\n  'IMG_PrecursorJar_Pointed': require('./assets/items12/precursorjar_pointed.png'),\r\n  'IMG_PrecursorCanopicJar': require('./assets/items12/precursorcanopicjar.png'),\r\n  'IMG_PrecursorTapestry': require('./assets/items12/precursortapestry.png'),\r\n  'IMG_PrecursorMask_Bare': require('./assets/items12/precursormask_bare.png'),\r\n  'IMG_PrecursorMask_Fading': require('./assets/items12/precursormask_fading.png'),\r\n  'IMG_PrecursorMask_Green': require('./assets/items12/precursormask_green.png'),\r\n  'IMG_PrecursorMask_Brass': require('./assets/items12/precursormask_brass.png'),\r\n  'IMG_DecorativeMask_Demon': require('./assets/items12/decorativemask_demon.png'),\r\n  'IMG_DecorativeMask_Monster': require('./assets/items12/decorativemask_monster.png'),\r\n  'IMG_DecorativeMask_Bugaku': require('./assets/items12/decorativemask_bugaku.png'),\r\n  'IMG_DecorativeMask_Noh': require('./assets/items12/decorativemask_noh.png'),\r\n  'IMG_DecorativeMask_Inuit': require('./assets/items12/decorativemask_inuit.png'),\r\n  'IMG_DecorativeMask_White': require('./assets/items12/decorativemask_white.png'),\r\n  'IMG_TreebeastMask': require('./assets/items12/treebeastmask.png'),\r\n  'IMG_Statuette_Nobleman': require('./assets/items12/statuette_nobleman.png'),\r\n  'IMG_Statuette_Noblewoman': require('./assets/items12/statuette_noblewoman.png'),\r\n  'IMG_Statuette_Monk': require('./assets/items12/statuette_monk.png'),\r\n  'IMG_Statuette_Nun': require('./assets/items12/statuette_nun.png'),\r\n  'IMG_Statuette_Mage': require('./assets/items12/statuette_mage.png'),\r\n  'IMG_Statuette_Muse': require('./assets/items12/statuette_muse.png'),\r\n  'IMG_MechanistStatuette': require('./assets/items12/mechaniststatuette.png'),\r\n  'IMG_GoldHammer': require('./assets/items12/goldhammer.png'),\r\n  'IMG_CollectionPlate': require('./assets/items12/collectionplate.png'),\r\n  'IMG_GoldPlate': require('./assets/items12/goldplate.png'),\r\n  'IMG_DecorativePlate_Pink': require('./assets/items12/decorativeplate_pink.png'),\r\n  'IMG_DecorativePlate_Red': require('./assets/items12/decorativeplate_red.png'),\r\n  'IMG_DecorativePlate_Orange': require('./assets/items12/decorativeplate_orange.png'),\r\n  'IMG_DecorativePlate_Gold': require('./assets/items12/decorativeplate_gold.png'),\r\n  'IMG_DecorativePlate_Aqua': require('./assets/items12/decorativeplate_aqua.png'),\r\n  'IMG_DecorativePlate_Blue': require('./assets/items12/decorativeplate_blue.png'),\r\n  'IMG_SpiceBag': require('./assets/items12/spicebag.png'),\r\n  'IMG_RareSpiceBag': require('./assets/items12/rarespicebag.png'),\r\n  'IMG_FineWine': require('./assets/items12/finewine.png'),\r\n  'IMG_RareWine': require('./assets/items12/rarewine.png'),\r\n  'IMG_GoldGoblet': require('./assets/items12/goldgoblet.png'),\r\n  'IMG_PurpleGoblet': require('./assets/items12/purplegoblet.png'),\r\n  'IMG_GoldVase': require('./assets/items12/goldvase.png'),\r\n  'IMG_IndigoVase': require('./assets/items12/indigovase.png'),\r\n  'IMG_PurpleVase': require('./assets/items12/purplevase.png'),\r\n  'IMG_GreenVase': require('./assets/items12/greenvase.png'),\r\n  'IMG_SapphireVase': require('./assets/items12/sapphirevase.png'),\r\n  'IMG_GoldCandlestick': require('./assets/items12/goldcandlestick.png'),\r\n  'IMG_GoldGlasses': require('./assets/items12/goldglasses.png'),\r\n  'IMG_OperaGlasses': require('./assets/items12/operaglasses.png'),\r\n  'IMG_SilverFirePoker': require('./assets/items12/silverfirepoker.png'),\r\n  'IMG_JeweledDagger': require('./assets/items12/jeweleddagger.png'),\r\n  'IMG_JeweledSword': require('./assets/items12/jeweledsword.png'),\r\n  'IMG_DiamondDrillbit': require('./assets/items12/diamonddrillbit.png'),\r\n  'IMG_GoldGear': require('./assets/items12/goldgear.png'),\r\n  'IMG_SilverFlute': require('./assets/items12/silverflute.png'),\r\n  'IMG_WaxCylinder': require('./assets/items12/waxcylinder.png'),\r\n  'IMG_GoldDice': require('./assets/items12/golddice.png'),\r\n  'IMG_GoldBook': require('./assets/items12/goldbook.png'),\r\n  'IMG_SilverNugget': require('./assets/items12/silvernugget.png'),\r\n  'IMG_GoldNugget': require('./assets/items12/goldnugget.png'),\r\n\r\n  // -- ITEMS (1 & 2) --\r\n  'IMG_Sword': require('./assets/items12/sword.png'),\r\n  'IMG_ConstantinesSword': require('./assets/items12/constantinessword.png'),\r\n  'IMG_Blackjack': require('./assets/items12/blackjack.png'),\r\n  'IMG_BroadheadArrow': require('./assets/items12/broadheadarrow.png'),\r\n  'IMG_WaterArrow': require('./assets/items12/waterarrow.png'),\r\n  'IMG_HolyWaterArrow': require('./assets/items12/holywaterarrow.png'),\r\n  'IMG_FireArrow': require('./assets/items12/firearrow.png'),\r\n  'IMG_MossArrow': require('./assets/items12/mossarrow.png'),\r\n  'IMG_GasArrow_TDP': require('./assets/items12/gasarrow_tdp.png'),\r\n  'IMG_GasArrow_TMA': require('./assets/items12/gasarrow_tma.png'),\r\n  'IMG_RopeArrow': require('./assets/items12/ropearrow.png'),\r\n  'IMG_VineArrow': require('./assets/items12/vinearrow.png'),\r\n  'IMG_NoisemakerArrow': require('./assets/items12/noisemakerarrow.png'),\r\n  'IMG_WaterCrystal': require('./assets/items12/watercrystal.png'),\r\n  'IMG_FireCrystal': require('./assets/items12/firecrystal.png'),\r\n  'IMG_EarthCrystal': require('./assets/items12/earthcrystal.png'),\r\n  'IMG_AirCrystal': require('./assets/items12/aircrystal.png'),\r\n  'IMG_FlashBomb': require('./assets/items12/flashbomb.png'),\r\n  'IMG_Mine': require('./assets/items12/mine.png'),\r\n  'IMG_GasMine': require('./assets/items12/gasmine.png'),\r\n  'IMG_FlashMine': require('./assets/items12/flashmine.png'),\r\n  'IMG_ExplosiveCharge': require('./assets/items12/explosivecharge.png'),\r\n  'IMG_HealingPotion': require('./assets/items12/healingpotion.png'),\r\n  'IMG_SpeedPotion': require('./assets/items12/speedpotion.png'),\r\n  'IMG_BreathPotion': require('./assets/items12/breathpotion.png'),\r\n  'IMG_InvisibilityPotion': require('./assets/items12/invisibilitypotion.png'),\r\n  'IMG_SlowfallPotion': require('./assets/items12/slowfallpotion.png'),\r\n  'IMG_HolyWaterVial': require('./assets/items12/holywatervial.png'),\r\n  'IMG_Footlocker': require('./assets/items12/footlocker.png'),\r\n  'IMG_Chest_Blue': require('./assets/items12/chest_blue.png'),\r\n  'IMG_Chest_Precursor': require('./assets/items12/chest_precursor.png'),\r\n  'IMG_CoinBox': require('./assets/items12/coinbox.png'),\r\n  'IMG_Strongbox': require('./assets/items12/strongbox.png'),\r\n  'IMG_Safe': require('./assets/items12/safe.png'),\r\n  'IMG_Lockpick_Square': require('./assets/items12/lockpick_square.png'),\r\n  'IMG_Lockpick_Triangle': require('./assets/items12/lockpick_triangle.png'),\r\n  'IMG_Key_Gold': require('./assets/items12/key_gold.png'),\r\n  'IMG_Key_Silver': require('./assets/items12/key_silver.png'),\r\n  'IMG_Key_Black': require('./assets/items12/key_black.png'),\r\n  'IMG_Key_Yellow': require('./assets/items12/key_yellow.png'),\r\n  'IMG_Key_Blue': require('./assets/items12/key_blue.png'),\r\n  'IMG_Key_Red': require('./assets/items12/key_red.png'),\r\n  'IMG_Key_Orange': require('./assets/items12/key_orange.png'),\r\n  'IMG_Keyring': require('./assets/items12/keyring.png'),\r\n  'IMG_MageKey_Water': require('./assets/items12/magekey_water.png'),\r\n  'IMG_MageKey_Earth': require('./assets/items12/magekey_earth.png'),\r\n  'IMG_MageKey_Air': require('./assets/items12/magekey_air.png'),\r\n  'IMG_MageKey_Fire': require('./assets/items12/magekey_fire.png'),\r\n  'IMG_MageKey_Treasure': require('./assets/items12/magekey_treasure.png'),\r\n  'IMG_PortalKey': require('./assets/items12/portalkey.png'),\r\n  'IMG_GearKey_Metal': require('./assets/items12/gearkey_metal.png'),\r\n  'IMG_GearKey_Silver': require('./assets/items12/gearkey_silver.png'),\r\n  'IMG_GearKey_Bronze': require('./assets/items12/gearkey_bronze.png'),\r\n  'IMG_Candle': require('./assets/items12/candle.png'),\r\n  'IMG_Flare': require('./assets/items12/flare.png'),\r\n  'IMG_Compass': require('./assets/items12/compass.png'),\r\n  'IMG_ScoutingOrb': require('./assets/items12/scoutingorb.png'),\r\n  'IMG_Birdcall': require('./assets/items12/birdcall.png'),\r\n  'IMG_FrogbeastEgg': require('./assets/items12/frogbeastegg.png'),\r\n  'IMG_Loaf': require('./assets/items12/loaf.png'),\r\n  'IMG_Carrot': require('./assets/items12/carrot.png'),\r\n  'IMG_Cucumber': require('./assets/items12/cucumber.png'),\r\n  'IMG_Apple': require('./assets/items12/apple.png'),\r\n  'IMG_Fruit': require('./assets/items12/fruit.png'),\r\n  'IMG_Cheese': require('./assets/items12/cheese.png'),\r\n  'IMG_DeerLeg': require('./assets/items12/deerleg.png'),\r\n  'IMG_Letter': require('./assets/items12/letter.png'),\r\n  'IMG_CrumpledPaper': require('./assets/items12/crumpledpaper.png'),\r\n  'IMG_UnrolledScroll': require('./assets/items12/unrolledscroll.png'),\r\n  'IMG_RolledScroll': require('./assets/items12/rolledscroll.png'),\r\n  'IMG_Papyrus': require('./assets/items12/papyrus.png'),\r\n  'IMG_PrecursorScroll_Flat': require('./assets/items12/precursorscroll_flat.png'),\r\n  'IMG_PrecursorScroll_Round': require('./assets/items12/precursorscroll_round.png'),\r\n  'IMG_Blueprints': require('./assets/items12/blueprints.png'),\r\n  'IMG_Playbill': require('./assets/items12/playbill.png'),\r\n  'IMG_Book_Green': require('./assets/items12/book_green.png'),\r\n  'IMG_Book_Red': require('./assets/items12/book_red.png'),\r\n  'IMG_Book_Purple': require('./assets/items12/book_purple.png'),\r\n  'IMG_Book_Hammerite': require('./assets/items12/book_hammerite.png'),\r\n  'IMG_Book_Mechanist': require('./assets/items12/book_mechanist.png'),\r\n  'IMG_Book_Pagan': require('./assets/items12/book_pagan.png'),\r\n  'IMG_Book_Keeper': require('./assets/items12/book_keeper.png'),\r\n  'IMG_Book_Ash': require('./assets/items12/book_ash.png'),\r\n  'IMG_Handkerchief': require('./assets/items12/handkerchief.png'),\r\n  'IMG_Flute': require('./assets/items12/flute.png'),\r\n  'IMG_Dewdrop': require('./assets/items12/dewdrop.png'),\r\n  'IMG_Lever': require('./assets/items12/lever.png'),\r\n  'IMG_ValveKnob': require('./assets/items12/valveknob.png'),\r\n  'IMG_WheelPeg': require('./assets/items12/wheelpeg.png'),\r\n  'IMG_Mixture': require('./assets/items12/mixture.png'),\r\n  'IMG_SteelPlate': require('./assets/items12/steelplate.png'),\r\n  'IMG_IronChassis': require('./assets/items12/ironchassis.png'),\r\n  'IMG_Gauge': require('./assets/items12/gauge.png'),\r\n  'IMG_SpringWiring': require('./assets/items12/springwiring.png'),\r\n  'IMG_BantamNode': require('./assets/items12/bantamnode.png'),\r\n  'IMG_MineBulb': require('./assets/items12/minebulb.png'),\r\n  'IMG_FluxSpheroid': require('./assets/items12/fluxspheroid.png'),\r\n  'IMG_RegulatingRound': require('./assets/items12/regulatinground.png'),\r\n  'IMG_HolyHammer': require('./assets/items12/holyhammer.png'),\r\n  'IMG_HolySymbol': require('./assets/items12/holysymbol.png'),\r\n  'IMG_BlessedHolySymbol': require('./assets/items12/blessedholysymbol.png'),\r\n  'IMG_Multimold_Hammer': require('./assets/items12/multimold_hammer.png'),\r\n  'IMG_Multimold_Symbol': require('./assets/items12/multimold_symbol.png'),\r\n  'IMG_Multimold_Key': require('./assets/items12/multimold_key.png'),\r\n  'IMG_Multimold_Hilt': require('./assets/items12/multimold_hilt.png'),\r\n  'IMG_Multimold_Gear': require('./assets/items12/multimold_gear.png'),\r\n  'IMG_Multimold_Knob': require('./assets/items12/multimold_knob.png'),\r\n  'IMG_Multimold_Lever': require('./assets/items12/multimold_lever.png'),\r\n  'IMG_RosaryBeads': require('./assets/items12/rosarybeads.png'),\r\n  'IMG_BuildersChisel': require('./assets/items12/builderschisel.png'),\r\n  'IMG_PuttyKnife': require('./assets/items12/puttyknife.png'),\r\n  'IMG_WaxImpression': require('./assets/items12/waximpression.png'),\r\n  'IMG_Phonograph': require('./assets/items12/phonograph.png'),\r\n  'IMG_RustGasContainer': require('./assets/items12/rustgascontainer.png'),\r\n  'IMG_SignalBolt': require('./assets/items12/signalbolt.png'),\r\n  'IMG_Stage1Piece': require('./assets/items12/stage1piece.png'),\r\n  'IMG_Stage2Piece': require('./assets/items12/stage2piece.png'),\r\n  'IMG_Stage3Piece': require('./assets/items12/stage3piece.png'),\r\n  'IMG_GuidingBeacon': require('./assets/items12/guidingbeacon.png'),\r\n  'IMG_ShippingLabel': require('./assets/items12/shippinglabel.png'),\r\n  'IMG_Cuckoo': require('./assets/items12/cuckoo.png'),\r\n  'IMG_SilverScepter': require('./assets/items12/silverscepter.png'),\r\n  'IMG_HornOfQuintus': require('./assets/items12/hornofquintus.png'),\r\n  'IMG_NavigationGlobe': require('./assets/items12/navigationglobe.png'),\r\n  'IMG_Painting_Truart': require('./assets/items12/painting_truart.png'),\r\n  'IMG_Painting_Abduction': require('./assets/items12/painting_abduction.png'),\r\n  'IMG_Painting_Lachrymae': require('./assets/items12/painting_lachrymae.png'),\r\n  'IMG_Painting_Comparisons': require('./assets/items12/painting_comparisons.png'),\r\n  'IMG_Painting_Pheasant': require('./assets/items12/painting_pheasant.png'),\r\n  'IMG_PrecursorMask_Sun': require('./assets/items12/precursormask_sun.png'),\r\n  'IMG_PrecursorMask_Wood': require('./assets/items12/precursormask_wood.png'),\r\n  'IMG_Cultivator': require('./assets/items12/cultivator.png'),\r\n  'IMG_HandOfGlory': require('./assets/items12/handofglory.png'),\r\n  'IMG_GoldenBone_Skull': require('./assets/items12/goldenbone_skull.png'),\r\n  'IMG_GoldenBone_RightArm': require('./assets/items12/goldenbone_rightarm.png'),\r\n  'IMG_GoldenBone_LeftArm': require('./assets/items12/goldenbone_leftarm.png'),\r\n  'IMG_GoldenBone_RightLeg': require('./assets/items12/goldenbone_rightleg.png'),\r\n  'IMG_GoldenBone_LeftLeg': require('./assets/items12/goldenbone_leftleg.png'),\r\n  'IMG_KeeperMedallion': require('./assets/items12/keepermedallion.png'),\r\n  'IMG_RubyStone': require('./assets/items12/rubystone.png'),\r\n  'IMG_TheEye': require('./assets/items12/theeye.png'),\r\n  'IMG_TalismanOfEarth': require('./assets/items12/talismanofearth.png'),\r\n  'IMG_TalismanOfFire': require('./assets/items12/talismanoffire.png'),\r\n  'IMG_TalismanOfWater': require('./assets/items12/talismanofwater.png'),\r\n  'IMG_TalismanOfAir': require('./assets/items12/talismanofair.png'),\r\n\r\n  // -- JUNK (1 & 2) --\r\n  'IMG_NormalCrate': require('./assets/items12/normalcrate.png'),\r\n  'IMG_OldCrate': require('./assets/items12/oldcrate.png'),\r\n  'IMG_ToolCrate': require('./assets/items12/toolcrate.png'),\r\n  'IMG_WoodenSpoon': require('./assets/items12/woodenspoon.png'),\r\n  'IMG_Knife': require('./assets/items12/knife.png'),\r\n  'IMG_Cleaver': require('./assets/items12/cleaver.png'),\r\n  'IMG_WoodenBowl': require('./assets/items12/woodenbowl.png'),\r\n  'IMG_MetalBowl': require('./assets/items12/metalbowl.png'),\r\n  'IMG_MetalPlate': require('./assets/items12/metalplate.png'),\r\n  'IMG_CeramicPlate': require('./assets/items12/ceramicplate.png'),\r\n  'IMG_OrnatePlate': require('./assets/items12/ornateplate.png'),\r\n  'IMG_MetalTray': require('./assets/items12/metaltray.png'),\r\n  'IMG_WoodenGoblet': require('./assets/items12/woodengoblet.png'),\r\n  'IMG_MetalGoblet': require('./assets/items12/metalgoblet.png'),\r\n  'IMG_GreenBottle': require('./assets/items12/greenbottle.png'),\r\n  'IMG_GrayBottle': require('./assets/items12/graybottle.png'),\r\n  'IMG_SetOfBottles': require('./assets/items12/setofbottles.png'),\r\n  'IMG_Skillet': require('./assets/items12/skillet.png'),\r\n  'IMG_Saucepan': require('./assets/items12/saucepan.png'),\r\n  'IMG_CookingPot': require('./assets/items12/cookingpot.png'),\r\n  'IMG_Canister_Flour': require('./assets/items12/canister_flour.png'),\r\n  'IMG_Canister_Sugar': require('./assets/items12/canister_sugar.png'),\r\n  'IMG_Canister_Salt': require('./assets/items12/canister_salt.png'),\r\n  'IMG_Canister_UnmarkedLarge': require('./assets/items12/canister_unmarkedlarge.png'),\r\n  'IMG_Canister_UnmarkedSmall': require('./assets/items12/canister_unmarkedsmall.png'),\r\n  'IMG_MetalBucket': require('./assets/items12/metalbucket.png'),\r\n  'IMG_BrownHerbs': require('./assets/items12/brownherbs.png'),\r\n  'IMG_GreenHerbs': require('./assets/items12/greenherbs.png'),\r\n  'IMG_Barrel': require('./assets/items12/barrel.png'),\r\n  'IMG_PowderKeg': require('./assets/items12/powderkeg.png'),\r\n  'IMG_Dress': require('./assets/items12/dress.png'),\r\n  'IMG_HairBrush': require('./assets/items12/hairbrush.png'),\r\n  'IMG_HandMirror': require('./assets/items12/handmirror.png'),\r\n  'IMG_ReadingGlasses': require('./assets/items12/readingglasses.png'),\r\n  'IMG_Bedroll': require('./assets/items12/bedroll.png'),\r\n  'IMG_DeckOfCards': require('./assets/items12/deckofcards.png'),\r\n  'IMG_PairOfDice': require('./assets/items12/pairofdice.png'),\r\n  'IMG_Basketball': require('./assets/items12/basketball.png'),\r\n  'IMG_PottedPlant': require('./assets/items12/pottedplant.png'),\r\n  'IMG_LeafyPlant': require('./assets/items12/leafyplant.png'),\r\n  'IMG_Vase': require('./assets/items12/vase.png'),\r\n  'IMG_DecorativeVase_Neck': require('./assets/items12/decorativevase_neck.png'),\r\n  'IMG_DecorativeVase_Wide': require('./assets/items12/decorativevase_wide.png'),\r\n  'IMG_Banner_Globe': require('./assets/items12/banner_globe.png'),\r\n  'IMG_Rowboat': require('./assets/items12/rowboat.png'),\r\n  'IMG_Anchor': require('./assets/items12/anchor.png'),\r\n  'IMG_NavigatorsCompass': require('./assets/items12/navigatorscompass.png'),\r\n  'IMG_ChartCompass': require('./assets/items12/chartcompass.png'),\r\n  'IMG_Sextant': require('./assets/items12/sextant.png'),\r\n  'IMG_Spade': require('./assets/items12/spade.png'),\r\n  'IMG_Pick': require('./assets/items12/pick.png'),\r\n  'IMG_DrillingMachine': require('./assets/items12/drillingmachine.png'),\r\n  'IMG_LeverHandle': require('./assets/items12/leverhandle.png'),\r\n  'IMG_UpDownSwitch': require('./assets/items12/updownswitch.png'),\r\n  'IMG_Doorknob': require('./assets/items12/doorknob.png'),\r\n  'IMG_BrokenArrow': require('./assets/items12/brokenarrow.png'),\r\n  'IMG_SwordHilt': require('./assets/items12/swordhilt.png'),\r\n  'IMG_Warhammer': require('./assets/items12/warhammer.png'),\r\n  'IMG_SmallHammer': require('./assets/items12/smallhammer.png'),\r\n  'IMG_StoneHammer': require('./assets/items12/stonehammer.png'),\r\n  'IMG_AncientHammer': require('./assets/items12/ancienthammer.png'),\r\n  'IMG_MechanistMace': require('./assets/items12/mechanistmace.png'),\r\n  'IMG_Rubble': require('./assets/items12/rubble.png'),\r\n  'IMG_Boulder': require('./assets/items12/boulder.png'),\r\n  'IMG_StatueFragment_Head': require('./assets/items12/statuefragment_head.png'),\r\n  'IMG_StatueFragment_RightTorso': require('./assets/items12/statuefragment_righttorso.png'),\r\n  'IMG_StatueFragment_LeftTorso': require('./assets/items12/statuefragment_lefttorso.png'),\r\n  'IMG_CthulhuStatue': require('./assets/items12/cthulhustatue.png'),\r\n  'IMG_FrozenFish': require('./assets/items12/frozenfish.png'),\r\n  'IMG_Rat': require('./assets/items12/rat.png'),\r\n  'IMG_DeadBurrick': require('./assets/items12/deadburrick.png'),\r\n  'IMG_SewerSpider': require('./assets/items12/sewerspider.png'),\r\n  'IMG_MonkeyHead': require('./assets/items12/monkeyhead.png'),\r\n  'IMG_HammeriteZombieHead': require('./assets/items12/hammeritezombiehead.png'),\r\n  'IMG_HammeriteZombieTorso': require('./assets/items12/hammeritezombietorso.png'),\r\n  'IMG_HammeriteZombieArm': require('./assets/items12/hammeritezombiearm.png'),\r\n  'IMG_HammeriteZombieWaist': require('./assets/items12/hammeritezombiewaist.png'),\r\n  'IMG_HammeriteZombieLeg': require('./assets/items12/hammeritezombieleg.png'),\r\n  'IMG_Skull': require('./assets/items12/skull.png'),\r\n  'IMG_Ribcage': require('./assets/items12/ribcage.png'),\r\n  'IMG_SkeletalArm': require('./assets/items12/skeletalarm.png'),\r\n  'IMG_Tibia': require('./assets/items12/tibia.png'),\r\n  'IMG_WoodenBoard': require('./assets/items12/woodenboard.png'),\r\n  'IMG_Nightstand': require('./assets/items12/nightstand.png'),\r\n  'IMG_Gear': require('./assets/items12/gear.png'),\r\n  'IMG_LaboratoryEquipment': require('./assets/items12/laboratoryequipment.png'),\r\n  'IMG_BunsenBurner': require('./assets/items12/bunsenburner.png'),\r\n  'IMG_CrookedPole': require('./assets/items12/crookedpole.png'),\r\n  'IMG_GlassTools': require('./assets/items12/glasstools.png'),\r\n  'IMG_Broom': require('./assets/items12/broom.png'),\r\n  'IMG_PaperTray': require('./assets/items12/papertray.png'),\r\n  'IMG_Lantern': require('./assets/items12/lantern.png'),\r\n  'IMG_Floodlight': require('./assets/items12/floodlight.png'),\r\n  'IMG_JunkWax': require('./assets/items12/junkwax.png'),\r\n  'IMG_DivingHelmet': require('./assets/items12/divinghelmet.png'),\r\n  'IMG_Scarecrow': require('./assets/items12/scarecrow.png'),\r\n\r\n  // -- LOOT (FMs) --\r\n  'IMG_Locket': require('./assets/itemsFM/locket.png'),\r\n  'IMG_MindStone': require('./assets/itemsFM/mindstone.png'),\r\n  'IMG_VoidStone': require('./assets/itemsFM/voidstone.png'),\r\n  'IMG_FleshStone': require('./assets/itemsFM/fleshstone.png'),\r\n  'IMG_JeweledDagger_Alt1': require('./assets/itemsFM/jeweleddagger_alt1.png'),\r\n  'IMG_Painting_Highway1': require('./assets/itemsFM/painting_highway1.png'),\r\n  'IMG_Painting_Highway2': require('./assets/itemsFM/painting_highway2.png'),\r\n  'IMG_PocketWatch': require('./assets/itemsFM/pocketwatch.png'),\r\n\r\n  // -- ITEMS (FMs) --\r\n  'IMG_SaintEdgarsSword': require('./assets/itemsFM/saintedgarssword.png'),\r\n  'IMG_WarGauntlet': require('./assets/itemsFM/wargauntlet.png'),\r\n  'IMG_RazorHeadArrow': require('./assets/itemsFM/razorheadarrow.png'),\r\n  'IMG_HolyWaterArrow_Alt1': require('./assets/itemsFM/holywaterarrow_alt1.png'),\r\n  'IMG_ExplosiveHeadArrow': require('./assets/itemsFM/explosiveheadarrow.png'),\r\n  'IMG_MudArrow': require('./assets/itemsFM/mudarrow.png'),\r\n  'IMG_WindArrow': require('./assets/itemsFM/windarrow.png'),\r\n  'IMG_MudCrystal': require('./assets/itemsFM/mudcrystal.png'),\r\n  'IMG_WindCrystal': require('./assets/itemsFM/windcrystal.png'),\r\n  'IMG_AcidBomb': require('./assets/itemsFM/acidbomb.png'),\r\n  'IMG_BallisticMissile': require('./assets/itemsFM/ballisticmissile.png'),\r\n  'IMG_PotionOfWeaponsbane': require('./assets/itemsFM/potionofweaponsbane.png'),\r\n  'IMG_PotionOfLifebreath': require('./assets/itemsFM/potionoflifebreath.png'),\r\n  'IMG_PotionOfTheFirewalker': require('./assets/itemsFM/potionofthefirewalker.png'),\r\n  'IMG_VialOfUnholyFluid': require('./assets/itemsFM/vialofunholyfluid.png'),\r\n  'IMG_MoonblackCandle': require('./assets/itemsFM/moonblackcandle.png'),\r\n  'IMG_StaffOfAssizi': require('./assets/itemsFM/staffofassizi.png'),\r\n  'IMG_Cabbage': require('./assets/itemsFM/cabbage.png'),\r\n  'IMG_Cheese_Alt1': require('./assets/itemsFM/cheese_alt1.png'),\r\n  'IMG_Sausage': require('./assets/itemsFM/sausage.png'),\r\n  'IMG_GuardianHead_Mind': require('./assets/itemsFM/guardianhead_mind.png'),\r\n  'IMG_GuardianHead_Void': require('./assets/itemsFM/guardianhead_void.png'),\r\n  'IMG_GuardianHead_Flesh': require('./assets/itemsFM/guardianhead_flesh.png'),\r\n  'IMG_LargeGemstone_Diamond': require('./assets/itemsFM/largegemstone_diamond.png'),\r\n  'IMG_LargeGemstone_Ruby': require('./assets/itemsFM/largegemstone_ruby.png'),\r\n  'IMG_LargeGemstone_Sapphire': require('./assets/itemsFM/largegemstone_sapphire.png'),\r\n  'IMG_LargeGemstone_Emerald': require('./assets/itemsFM/largegemstone_emerald.png'),\r\n  'IMG_LargeGemstone_Amethyst': require('./assets/itemsFM/largegemstone_amethyst.png'),\r\n\r\n  // -- JUNK (FMs) --\r\n  'IMG_Brick': require('./assets/itemsFM/brick.png'),\r\n  'IMG_Scissors': require('./assets/itemsFM/scissors.png'),\r\n};\r\n\r\n// Add secret images here.\r\nconst mySecrets = {\r\n  // T2: Running Interference\r\n  'SEC_t2_interference_01': require('./assets/secrets/t2_interference_01.png'),\r\n  'SEC_t2_interference_02': require('./assets/secrets/t2_interference_02.png'),\r\n  'SEC_t2_interference_03': require('./assets/secrets/t2_interference_03.png'),\r\n  // T2: Shipping ... and Receiving\r\n  'SEC_t2_shipping_01': require('./assets/secrets/t2_shipping_01.png'),\r\n  'SEC_t2_shipping_02': require('./assets/secrets/t2_shipping_02.png'),\r\n  'SEC_t2_shipping_03': require('./assets/secrets/t2_shipping_03.png'),\r\n  'SEC_t2_shipping_04': require('./assets/secrets/t2_shipping_04.png'),\r\n  'SEC_t2_shipping_05': require('./assets/secrets/t2_shipping_05.png'),\r\n  'SEC_t2_shipping_06a': require('./assets/secrets/t2_shipping_06a.png'),\r\n  'SEC_t2_shipping_06b': require('./assets/secrets/t2_shipping_06b.png'),\r\n  'SEC_t2_shipping_07': require('./assets/secrets/t2_shipping_07.png'),\r\n  'SEC_t2_shipping_08': require('./assets/secrets/t2_shipping_08.png'),\r\n  'SEC_t2_shipping_09': require('./assets/secrets/t2_shipping_09.png'),\r\n  'SEC_t2_shipping_10': require('./assets/secrets/t2_shipping_10.png'),\r\n  'SEC_t2_shipping_11': require('./assets/secrets/t2_shipping_11.png'),\r\n  'SEC_t2_shipping_12': require('./assets/secrets/t2_shipping_12.png'),\r\n  'SEC_t2_shipping_13': require('./assets/secrets/t2_shipping_13.png'),\r\n  'SEC_t2_shipping_14': require('./assets/secrets/t2_shipping_14.png'),\r\n  // T2: Framed\r\n  'SEC_t2_framed_01a': require('./assets/secrets/t2_framed_01a.png'),\r\n  'SEC_t2_framed_01b': require('./assets/secrets/t2_framed_01b.png'),\r\n  'SEC_t2_framed_02a': require('./assets/secrets/t2_framed_02a.png'),\r\n  'SEC_t2_framed_02b': require('./assets/secrets/t2_framed_02b.png'),\r\n  'SEC_t2_framed_03': require('./assets/secrets/t2_framed_03.png'),\r\n  'SEC_t2_framed_04': require('./assets/secrets/t2_framed_04.png'),\r\n  'SEC_t2_framed_05a': require('./assets/secrets/t2_framed_05a.png'),\r\n  'SEC_t2_framed_05b': require('./assets/secrets/t2_framed_05b.png'),\r\n  'SEC_t2_framed_06a': require('./assets/secrets/t2_framed_06a.png'),\r\n  'SEC_t2_framed_06b': require('./assets/secrets/t2_framed_06b.png'),\r\n  'SEC_t2_framed_07a': require('./assets/secrets/t2_framed_07a.png'),\r\n  'SEC_t2_framed_07b': require('./assets/secrets/t2_framed_07b.png'),\r\n  'SEC_t2_framed_08a': require('./assets/secrets/t2_framed_08a.png'),\r\n  'SEC_t2_framed_08b': require('./assets/secrets/t2_framed_08b.png'),\r\n  'SEC_t2_framed_09a': require('./assets/secrets/t2_framed_09a.png'),\r\n  'SEC_t2_framed_09b': require('./assets/secrets/t2_framed_09b.png'),\r\n  // T2: Eavesdropping\r\n  'SEC_t2_eavesdropping_01': require('./assets/secrets/t2_eavesdropping_01.png'),\r\n  // T2: First City Bank and Trust\r\n  'SEC_t2_bank_01': require('./assets/secrets/t2_bank_01.png'),\r\n  'SEC_t2_bank_02': require('./assets/secrets/t2_bank_02.png'),\r\n  // T2: Blackmail\r\n  'SEC_t2_blackmail_01': require('./assets/secrets/t2_blackmail_01.png'),\r\n  'SEC_t2_blackmail_02': require('./assets/secrets/t2_blackmail_02.png'),\r\n  'SEC_t2_blackmail_03a': require('./assets/secrets/t2_blackmail_03a.png'),\r\n  'SEC_t2_blackmail_03b': require('./assets/secrets/t2_blackmail_03b.png'),\r\n  'SEC_t2_blackmail_04': require('./assets/secrets/t2_blackmail_04.png'),\r\n  'SEC_t2_blackmail_05a': require('./assets/secrets/t2_blackmail_05a.png'),\r\n  'SEC_t2_blackmail_05b': require('./assets/secrets/t2_blackmail_05b.png'),\r\n  'SEC_t2_blackmail_06': require('./assets/secrets/t2_blackmail_06.png'),\r\n  // T2: Trace the Courier\r\n  'SEC_t2_courier_01a': require('./assets/secrets/t2_courier_01a.png'),\r\n  'SEC_t2_courier_01b': require('./assets/secrets/t2_courier_01b.png'),\r\n  // T2: Life of the Party\r\n  'SEC_t2_party_01': require('./assets/secrets/t2_party_01.png'),\r\n  'SEC_t2_party_02': require('./assets/secrets/t2_party_02.png'),\r\n  'SEC_t2_party_03': require('./assets/secrets/t2_party_03.png'),\r\n  'SEC_t2_party_04': require('./assets/secrets/t2_party_04.png'),\r\n  'SEC_t2_party_05': require('./assets/secrets/t2_party_05.png'),\r\n  'SEC_t2_party_06': require('./assets/secrets/t2_party_06.png'),\r\n  'SEC_t2_party_07': require('./assets/secrets/t2_party_07.png'),\r\n  // T2: Precious Cargo\r\n  'SEC_t2_cargo_01': require('./assets/secrets/t2_cargo_01.png'),\r\n  // T2: Kidnap\r\n  'SEC_t2_kidnap_01': require('./assets/secrets/t2_kidnap_01.png'),\r\n  // T2: Casing the Joint\r\n  'SEC_t2_casing_01a': require('./assets/secrets/t2_casing_01a.png'),\r\n  'SEC_t2_casing_01b': require('./assets/secrets/t2_casing_01b.png'),\r\n  'SEC_t2_casing_02a': require('./assets/secrets/t2_casing_02a.png'),\r\n  'SEC_t2_casing_02b': require('./assets/secrets/t2_casing_02b.png'),\r\n  'SEC_t2_casing_03': require('./assets/secrets/t2_casing_03.png'),\r\n  'SEC_t2_casing_04a': require('./assets/secrets/t2_casing_04a.png'),\r\n  'SEC_t2_casing_04b': require('./assets/secrets/t2_casing_04b.png'),\r\n  'SEC_t2_casing_04c': require('./assets/secrets/t2_casing_04c.png'),\r\n  'SEC_t2_casing_04d': require('./assets/secrets/t2_casing_04d.png'),\r\n  'SEC_t2_casing_04e': require('./assets/secrets/t2_casing_04e.png'),\r\n  'SEC_t2_casing_05a': require('./assets/secrets/t2_casing_05a.png'),\r\n  'SEC_t2_casing_05b': require('./assets/secrets/t2_casing_05b.png'),\r\n  'SEC_t2_casing_05c': require('./assets/secrets/t2_casing_05c.png'),\r\n  'SEC_t2_casing_05d': require('./assets/secrets/t2_casing_05d.png'),\r\n  'SEC_t2_casing_05e': require('./assets/secrets/t2_casing_05e.png'),\r\n  'SEC_t2_casing_06a': require('./assets/secrets/t2_casing_06a.png'),\r\n  'SEC_t2_casing_06b': require('./assets/secrets/t2_casing_06b.png'),\r\n  'SEC_t2_casing_07a': require('./assets/secrets/t2_casing_07a.png'),\r\n  'SEC_t2_casing_07b': require('./assets/secrets/t2_casing_07b.png'),\r\n  'SEC_t2_casing_07c': require('./assets/secrets/t2_casing_07c.png'),\r\n  'SEC_t2_casing_07d': require('./assets/secrets/t2_casing_07d.png'),\r\n  'SEC_t2_casing_08': require('./assets/secrets/t2_casing_08.png'),\r\n  'SEC_t2_casing_09a': require('./assets/secrets/t2_casing_09a.png'),\r\n  'SEC_t2_casing_09b': require('./assets/secrets/t2_casing_09b.png'),\r\n  // T2: Masks\r\n  'SEC_t2_masks_01a': require('./assets/secrets/t2_masks_01a.png'),\r\n  'SEC_t2_masks_01b': require('./assets/secrets/t2_masks_01b.png'),\r\n  'SEC_t2_masks_02a': require('./assets/secrets/t2_masks_02a.png'),\r\n  'SEC_t2_masks_02b': require('./assets/secrets/t2_masks_02b.png'),\r\n  'SEC_t2_masks_03': require('./assets/secrets/t2_masks_03.png'),\r\n  'SEC_t2_masks_04a': require('./assets/secrets/t2_masks_04a.png'),\r\n  'SEC_t2_masks_04b': require('./assets/secrets/t2_masks_04b.png'),\r\n  'SEC_t2_masks_04c': require('./assets/secrets/t2_masks_04c.png'),\r\n  'SEC_t2_masks_04d': require('./assets/secrets/t2_masks_04d.png'),\r\n  'SEC_t2_masks_04e': require('./assets/secrets/t2_masks_04e.png'),\r\n  'SEC_t2_masks_05a': require('./assets/secrets/t2_masks_05a.png'),\r\n  'SEC_t2_masks_05b': require('./assets/secrets/t2_masks_05b.png'),\r\n  'SEC_t2_masks_05c': require('./assets/secrets/t2_masks_05c.png'),\r\n  'SEC_t2_masks_05d': require('./assets/secrets/t2_masks_05d.png'),\r\n  'SEC_t2_masks_05e': require('./assets/secrets/t2_masks_05e.png'),\r\n  'SEC_t2_masks_06a': require('./assets/secrets/t2_masks_06a.png'),\r\n  'SEC_t2_masks_06b': require('./assets/secrets/t2_masks_06b.png'),\r\n  'SEC_t2_masks_07a': require('./assets/secrets/t2_masks_07a.png'),\r\n  'SEC_t2_masks_07b': require('./assets/secrets/t2_masks_07b.png'),\r\n  'SEC_t2_masks_07c': require('./assets/secrets/t2_masks_07c.png'),\r\n  'SEC_t2_masks_07d': require('./assets/secrets/t2_masks_07d.png'),\r\n  'SEC_t2_masks_08': require('./assets/secrets/t2_masks_08.png'),\r\n  'SEC_t2_masks_09a': require('./assets/secrets/t2_masks_09a.png'),\r\n  'SEC_t2_masks_09b': require('./assets/secrets/t2_masks_09b.png'),\r\n  'SEC_t2_masks_10a': require('./assets/secrets/t2_masks_10a.png'),\r\n  'SEC_t2_masks_10b': require('./assets/secrets/t2_masks_10b.png'),\r\n  'SEC_t2_masks_11a': require('./assets/secrets/t2_masks_11a.png'),\r\n  'SEC_t2_masks_11b': require('./assets/secrets/t2_masks_11b.png'),\r\n  'SEC_t2_masks_12a': require('./assets/secrets/t2_masks_12a.png'),\r\n  'SEC_t2_masks_12b': require('./assets/secrets/t2_masks_12b.png'),\r\n  // T2: Sabotage at Soulforge\r\n  'SEC_t2_soulforge_01': require('./assets/secrets/t2_soulforge_01.png'),\r\n  'SEC_t2_soulforge_02': require('./assets/secrets/t2_soulforge_02.png'),\r\n  'SEC_t2_soulforge_03': require('./assets/secrets/t2_soulforge_03.png'),\r\n  'SEC_t2_soulforge_04': require('./assets/secrets/t2_soulforge_04.png'),\r\n  // T2: The Unwelcome Guest (Demo)\r\n  'SEC_t2_guest_01': require('./assets/secrets/t2_guest_01.png'),\r\n  'SEC_t2_guest_02': require('./assets/secrets/t2_guest_02.png'),\r\n  'SEC_t2_guest_03': require('./assets/secrets/t2_guest_03.png'),\r\n  'SEC_t2_guest_04': require('./assets/secrets/t2_guest_04.png'),\r\n\r\n  // FM: The Burrick's Head Inn\r\n  'SEC_fm_burrickhead_01': require('./assets/secrets/fm_burrickhead_01.png'),\r\n  'SEC_fm_burrickhead_02': require('./assets/secrets/fm_burrickhead_02.png'),\r\n  'SEC_fm_burrickhead_03': require('./assets/secrets/fm_burrickhead_03.png'),\r\n  'SEC_fm_burrickhead_04': require('./assets/secrets/fm_burrickhead_04.png'),\r\n  // FM: Hidden Agenda\r\n  'SEC_fm_agenda_01': require('./assets/secrets/fm_agenda_01.png'),\r\n  'SEC_fm_agenda_02': require('./assets/secrets/fm_agenda_02.png'),\r\n  'SEC_fm_agenda_03': require('./assets/secrets/fm_agenda_03.png'),\r\n  'SEC_fm_agenda_04': require('./assets/secrets/fm_agenda_04.png'),\r\n  // FM: Into the Maelstrom\r\n  'SEC_fm_maelstrom_01': require('./assets/secrets/fm_maelstrom_01.png'),\r\n  'SEC_fm_maelstrom_02': require('./assets/secrets/fm_maelstrom_02.png'),\r\n  'SEC_fm_maelstrom_03': require('./assets/secrets/fm_maelstrom_03.png'),\r\n  // FM: The Inverted Manse\r\n  'SEC_fm_spirit_manse_01': require('./assets/secrets/fm_spirit_manse_01.png'),\r\n  // FM: Thieves' Highway\r\n  'SEC_fm_highway_01': require('./assets/secrets/fm_highway_01.png'),\r\n  'SEC_fm_highway_02': require('./assets/secrets/fm_highway_02.png'),\r\n  'SEC_fm_highway_03': require('./assets/secrets/fm_highway_03.png'),\r\n  'SEC_fm_highway_04': require('./assets/secrets/fm_highway_04.png'),\r\n  'SEC_fm_highway_05': require('./assets/secrets/fm_highway_05.png'),\r\n  // FM: Through No Vault of My Own\r\n  'SEC_fm_vault_01': require('./assets/secrets/fm_vault_01.png'),\r\n};\r\n// ^^ Will these be too slow with too many lootlists and images??\r\n\r\n\r\n/* **************** */\r\n/*   LOOTLIST VIEW  */\r\n/* **************** */\r\n// Custom view component of a mission's lists of loot, items, etc.\r\nexport function LootlistView({missionName}) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  // AccumLoot: tracks the values of loot selected by the user.\r\n  // Each nested array is for Normal, Hard, & Expert difficulty.\r\n  // Each index in an array is for gold, gems, goods, and total.\r\n  // Store as a Ref instead of a State to avoid unneeded re-renders.\r\n  const accumLoot = React.useRef([[0,0,0,0], [0,0,0,0], [0,0,0,0]]);\r\n\r\n  // AccumPocket: tracks the pickpockets selected by the user.\r\n  // Each index in the array is for Normal, Hard, & Expert difficulty.\r\n  // Store as a Ref instead of a State to avoid unneeded re-renders.\r\n  const accumPocket = React.useRef([0,0,0]);\r\n\r\n  // CarryLoot: tracks loot carried over from the previous mission.\r\n  // Only used if lootlist's 'carryLoot' is set to 'true'.\r\n  const [getCarryLoot, setCarryLoot] = React.useState('');\r\n\r\n  // CarryFound: tracks if carryover loot has been found.\r\n  const [getCarryFound, setCarryFound] = React.useState(false);\r\n\r\n  // FilterDiff: tracks booleans for difficulty filters.\r\n  // True = show items only available on this difficulty.\r\n  // False = hide items only available on this difficulty.\r\n  const [getFilterDiffN, setFilterDiffN] = React.useState(true);\r\n  const [getFilterDiffH, setFilterDiffH] = React.useState(true);\r\n  const [getFilterDiffX, setFilterDiffX] = React.useState(true);\r\n\r\n  // FilterMode: tracks booleans for game mode filters.\r\n  // True = show items only available on this game mode.\r\n  // False = hide items only available on this game mode.\r\n  const [getFilterModeA, setFilterModeA] = React.useState(true);\r\n  const [getFilterModeB, setFilterModeB] = React.useState(true);\r\n  const [getFilterModeC, setFilterModeC] = React.useState(true);\r\n\r\n  // FilterLoot: tracks booleans for loot filters.\r\n  // True = show loot items with this value type.\r\n  // False = hide loot items with this value type.\r\n  const [getFilterLootGold, setFilterLootGold] = React.useState(true);\r\n  const [getFilterLootGems, setFilterLootGems] = React.useState(true);\r\n  const [getFilterLootGoods, setFilterLootGoods] = React.useState(true);\r\n\r\n  // FilterArea: tracks list of selections for area filter.\r\n  // When in use, hides any items not found in selected areas.\r\n  const [getFilterArea, setFilterArea] = React.useState([]);\r\n\r\n  // LinkedFind: tracks if items and secrets are found simultaneously.\r\n  // Used to trigger multiple items/secrets at the same time.\r\n  const [getLinkedFind, setLinkedFind] = React.useState([]);\r\n\r\n  // Read data from device storage.\r\n  const readFoundLoot = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(\r\n        `@myloot_${myList[missionName].title}`\r\n      );\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        //setFoundLoot(parseArray);\r\n        accumLoot.current = parseArray;\r\n        //alert(`Loaded myloot_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read loot array.');\r\n    }\r\n  };\r\n  const readFoundPocket = async () => {\r\n    try {\r\n      const jsonArray = await AsyncStorage.getItem(\r\n        `@mypocket_${myList[missionName].title}`\r\n      );\r\n      // Convert item's state from string to boolean.\r\n      const parseArray = JSON.parse(jsonArray);\r\n      if (parseArray !== null) {\r\n        //setFoundPocket(parseArray);\r\n        accumPocket.current = parseArray;\r\n        //alert(`Loaded mypocket_${props.title} as ${parseArray}`);\r\n      }\r\n    } catch (e) {\r\n      // Error: Reading the data failed.\r\n      alert('Failed to read pocket array.');\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // When component renders, check its last saved data.\r\n    readFoundLoot();\r\n    readFoundPocket();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    // Wrap component in providers to utilize context.\r\n    <FoundContext.Provider value={\r\n      {accumLoot, accumPocket}\r\n    }>\r\n      <CarryoverContext.Provider value={\r\n        {getCarryLoot, setCarryLoot, getCarryFound, setCarryFound}\r\n      }>\r\n        <FilterContext.Provider value={\r\n          {getFilterDiffN, setFilterDiffN,\r\n          getFilterDiffH, setFilterDiffH,\r\n          getFilterDiffX, setFilterDiffX,\r\n          getFilterModeA, setFilterModeA,\r\n          getFilterModeB, setFilterModeB,\r\n          getFilterModeC, setFilterModeC,\r\n          getFilterLootGold, setFilterLootGold,\r\n          getFilterLootGems, setFilterLootGems,\r\n          getFilterLootGoods, setFilterLootGoods,\r\n          getFilterArea, setFilterArea}\r\n        }>\r\n          <ScrollView style={{\r\n            flexGrow: (Platform.OS === 'web') ? 0 : 1,\r\n            height: (Platform.OS === 'web') ? height*0.66 : '75%'\r\n          }}>\r\n            <View style={[styles.listScreen, {\r\n              width: (width > 844) ? 844 : '100%'\r\n            }]}>\r\n              {/* Mission header (screens, author, etc). */}\r\n              <View style={styles.titleHeader}>\r\n                {myList[missionName].title &&\r\n                  <Text style={[\r\n                    styles.bigTitle,\r\n                    Platform.OS !== 'web' && {\r\n                      fontSize: width*0.058,\r\n                    },\r\n                    Platform.OS === 'web' && {\r\n                      fontSize: (width > 849) ? 40 : width*0.047,\r\n                    },\r\n                    {color: colors.text}\r\n                  ]}>\r\n                    {myList[missionName].title}\r\n                  </Text>\r\n                }\r\n                {/* Display mission author(s). */}\r\n                {myList[missionName].author &&\r\n                  <Text style={[\r\n                    styles.titleHeaderBy, {color: colors.text}\r\n                  ]}>\r\n                    {'by '}\r\n                    {myList[missionName].author.map((authKey, authIndex) => (\r\n                      <Text key={`author_${authIndex}`}>\r\n                        {/* Put an 'and' before the last author's name. */}\r\n                        {myList[missionName].author.length === 2 &&\r\n                        authIndex === myList[missionName].author.length - 1 &&\r\n                          ' and '\r\n                        }\r\n                        {myList[missionName].author.length > 2 &&\r\n                        authIndex === myList[missionName].author.length - 1 &&\r\n                          'and '\r\n                        }\r\n                        {/* Put the name of the author(s). */}\r\n                        <Text style={styles.titleHeaderName}>\r\n                          {authKey}\r\n                        </Text>\r\n                        {/* Put a comma between names (if > 2 authors). */}\r\n                        {myList[missionName].author.length > 2 &&\r\n                        authIndex !== myList[missionName].author.length - 1 &&\r\n                          ', '\r\n                        }\r\n                      </Text>\r\n                    ))}\r\n                  </Text>\r\n                }\r\n                {/* Display contest name, if applicable. */}\r\n                {myList[missionName].contest &&\r\n                  <Text style={[\r\n                    styles.titleHeaderBy, {color: colors.text}\r\n                  ]}>\r\n                    {'for the '}\r\n                    <Text style={styles.titleHeaderName}>\r\n                      {myList[missionName].contest}\r\n                    </Text>\r\n                  </Text>\r\n                }\r\n                {/* Display mission screenshots. */}\r\n                {myList[missionName].screens &&\r\n                  <View style={styles.imgHeaderView}>\r\n                    <Image\r\n                      source={myScreens[ myList[missionName].screens[0] ]}\r\n                      style={[styles.imgHeader, {\r\n                        height: (width > 849) ? 225 : width*0.265,\r\n                        width: (width > 849) ? 400 : width*0.475,\r\n                      }]}\r\n                    />\r\n                    <Image\r\n                      source={myScreens[ myList[missionName].screens[1] ]}\r\n                      style={[styles.imgHeader, {\r\n                        height: (width > 849) ? 225 : width*0.265,\r\n                        width: (width > 849) ? 400 : width*0.475,\r\n                      }]}\r\n                    />\r\n                  </View>\r\n                }\r\n                {/* Display release date & latest version. */}\r\n                {myList[missionName].firstRelease &&\r\n                  <Text style={[\r\n                    styles.titleHeaderDate, {color: colors.text}\r\n                  ]}>\r\n                    {`Initial release: ${myList[missionName].firstRelease}`}\r\n                  </Text>\r\n                }\r\n                {myList[missionName].latestVersion &&\r\n                  <Text style={[\r\n                    styles.titleHeaderDate, {color: colors.text}\r\n                  ]}>\r\n                    {`Latest version: ${myList[missionName].latestVersion}`}\r\n                  </Text>\r\n                }\r\n                <Text>{`width: ${width}`}</Text>\r\n              </View>\r\n              {/* Display buttons for filtering lists. */}\r\n              <Loot.FilterView\r\n                id={myList[missionName].id}\r\n                title={myList[missionName].title}\r\n                diffNames={myList[missionName].diffNames}\r\n                modeNames={myList[missionName].modeNames}\r\n                areas={myList[missionName].areas}\r\n                getLinkedFind={getLinkedFind}\r\n                setLinkedFind={setLinkedFind}\r\n              />\r\n              {/* Notes section */}\r\n              {myList[missionName].notes &&\r\n                myList[missionName].notes[0].id !== 'null' &&\r\n                <>\r\n                  <SectionHeader headerName=\"Notes\"/>\r\n                  <View style={styles.noteView}>\r\n                    {/* Map out each entry in notes array. */}\r\n                    {myList[missionName].notes.map((noteKey, noteIndex) => (\r\n                      <View key={`note_${noteIndex}`}>\r\n                        {noteKey.show &&\r\n                          <Text style={[styles.noteText,\r\n                            {color: colors.text}]}\r\n                          >\r\n                            {noteKey.icon &&\r\n                              <>\r\n                                <Text style={styles.noteSymbol}>\r\n                                  {noteKey.icon}\r\n                                </Text>\r\n                                {': '}\r\n                              </>\r\n                            }\r\n                            {`${noteKey.desc}`}\r\n                          </Text>\r\n                        }\r\n                      </View>\r\n                    ))}\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Loot section. */}\r\n              {myList[missionName].loot &&\r\n                <>\r\n                  <SectionHeader headerName=\"Loot\"/>\r\n                  <View style={[\r\n                    Platform.OS !== 'web' && {width: '100%'},\r\n                    Platform.OS === 'web' && {\r\n                      width: /*(width > 1300) ? 1300 :\r\n                             (width > 1072) ? 1072 :*/\r\n                             (width > 844) ? 844 :\r\n                             (width > 616) ? 616 : 388\r\n                    }\r\n                  ]}>\r\n                    <View style={[\r\n                      styles.listHeader,\r\n                      {backgroundColor: colors.backDark,\r\n                      borderColor: colors.border}\r\n                    ]}>\r\n                      <Text style={styles.listHeaderText}>\r\n                        {' '}\r\n                      </Text>\r\n                    </View>\r\n                    <View style={styles.listView}>\r\n                      {/* Map out each entry in loot array. */}\r\n                      {myList[missionName].loot.map((lootKey, lootIndex) => (\r\n                        <Loot.LootlistEntry\r\n                          key={`loot_${lootIndex}`}\r\n                          id={lootKey.id}\r\n                          title={myList[missionName].title}\r\n                          modeNames={myList[missionName].modeNames}\r\n                          areas={myList[missionName].areas}\r\n                          notes={myList[missionName].notes}\r\n                          name={lootKey.name}\r\n                          img={lootKey.img.map((imgKey, imgIndex) => {\r\n                            return myImages[imgKey];\r\n                          })}\r\n                          values={lootKey.values}\r\n                          getLinkedFind={getLinkedFind}\r\n                          setLinkedFind={setLinkedFind}\r\n                        />\r\n                      ))}\r\n                    </View>\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Item section. */}\r\n              {myList[missionName].items &&\r\n                <>\r\n                  <SectionHeader headerName=\"Items\"/>\r\n                  <View style={[styles.listView,\r\n                    Platform.OS !== 'web' && {width: '90%'},\r\n                    Platform.OS === 'web' && {\r\n                      width: /*(width > 1240) ? 1240 :\r\n                             (width > 1012) ? 1012 :*/\r\n                             (width > 784) ? 784 :\r\n                             (width > 556) ? 556 : 328\r\n                    }\r\n                  ]}>\r\n                    {/* Map out each entry in item array. */}\r\n                    {myList[missionName].items.map((itemCatKey, itemCatIndex) => (\r\n                      <View key={`itemCat_${itemCatIndex}`}>\r\n                        <View style={[\r\n                          styles.listHeader,\r\n                          {backgroundColor: colors.backDark,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          <Text style={styles.listHeaderText}>\r\n                            {itemCatKey.category}\r\n                          </Text>\r\n                        </View>\r\n                        <View>\r\n                          {itemCatKey.catItems.map((itemKey, itemIndex) => (\r\n                            <Loot.LootlistEntry\r\n                              key={`item_${itemIndex}`}\r\n                              id={itemKey.id}\r\n                              title={myList[missionName].title}\r\n                              modeNames={myList[missionName].modeNames}\r\n                              areas={myList[missionName].areas}\r\n                              notes={myList[missionName].notes}\r\n                              name={itemKey.name}\r\n                              img={itemKey.img.map((imgKey, imgIndex) => {\r\n                                return myImages[imgKey];\r\n                              })}\r\n                              locations={itemKey.locations}\r\n                              getLinkedFind={getLinkedFind}\r\n                              setLinkedFind={setLinkedFind}\r\n                            />\r\n                          ))}\r\n                        </View>\r\n                      </View>\r\n                    ))}\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Junk section. */}\r\n              {myList[missionName].junk &&\r\n                <>\r\n                  <SectionHeader headerName=\"Junk\"/>\r\n                  <View style={[styles.listView,\r\n                    Platform.OS !== 'web' && {width: '90%'},\r\n                    Platform.OS === 'web' && {\r\n                      width: /*(width > 1240) ? 1240 :\r\n                             (width > 1012) ? 1012 :*/\r\n                             (width > 784) ? 784 :\r\n                             (width > 556) ? 556 : 328\r\n                    }\r\n                  ]}>\r\n                    {/* Map out each entry in junk array. */}\r\n                    {myList[missionName].junk.map((junkCatKey, junkCatIndex) => (\r\n                      <View key={`junkCat_${junkCatIndex}`}>\r\n                        <View style={[\r\n                          styles.listHeader,\r\n                          {backgroundColor: colors.backDark,\r\n                          borderColor: colors.border}\r\n                        ]}>\r\n                          <Text style={styles.listHeaderText}>\r\n                            {junkCatKey.category}\r\n                          </Text>\r\n                        </View>\r\n                        <View>\r\n                          {junkCatKey.catJunk.map((junkKey, junkIndex) => (\r\n                            <Loot.LootlistEntry\r\n                              key={`junk_${junkIndex}`}\r\n                              id={junkKey.id}\r\n                              title={myList[missionName].title}\r\n                              modeNames={myList[missionName].modeNames}\r\n                              areas={myList[missionName].areas}\r\n                              notes={myList[missionName].notes}\r\n                              name={junkKey.name}\r\n                              img={junkKey.img.map((imgKey, imgIndex) => {\r\n                                return myImages[imgKey];\r\n                              })}\r\n                              locations={junkKey.locations}\r\n                              getLinkedFind={getLinkedFind}\r\n                              setLinkedFind={setLinkedFind}\r\n                            />\r\n                          ))}\r\n                        </View>\r\n                      </View>\r\n                    ))}\r\n                  </View>\r\n                </>\r\n              }\r\n              {/* Secret section. */}\r\n              {myList[missionName].secrets &&\r\n                <View style={[styles.listSecretView,\r\n                  Platform.OS !== 'web' && {width: '100%'},\r\n                  Platform.OS === 'web' && {\r\n                    width: (width > 784) ? 784 : '100%'\r\n                  }\r\n                ]}>\r\n                  <SectionHeader headerName=\"Secrets\"/>\r\n                  <View style={[\r\n                    styles.listHeader,\r\n                    {backgroundColor: colors.backDark,\r\n                    borderColor: colors.border}\r\n                  ]}>\r\n                    <Text style={styles.listHeaderText}>\r\n                      {' '}\r\n                    </Text>\r\n                  </View>\r\n                  <View style={styles.listView}>\r\n                    {/* Map out each entry in secrets array. */}\r\n                    {myList[missionName].secrets.map((secKey, secIndex) => (\r\n                      <Loot.SecretEntry\r\n                        key={`sec_${secIndex}`}\r\n                        id={secKey.id}\r\n                        areas={myList[missionName].areas}\r\n                        number={secKey.number}\r\n                        img={secKey.img.map((imgKey, imgIndex) => {\r\n                          return mySecrets[imgKey];\r\n                        })}\r\n                        triggers={secKey.triggers}\r\n                        rewards={secKey.rewards}\r\n                        getLinkedFind={getLinkedFind}\r\n                        setLinkedFind={setLinkedFind}\r\n                      />\r\n                    ))}\r\n                  </View>\r\n                </View>\r\n              }\r\n            </View>\r\n          </ScrollView>\r\n\r\n          {/* Display the mission's loot total(s). */}\r\n          <Loot.TotalsView\r\n            title={myList[missionName].title}\r\n            diffNames={myList[missionName].diffNames}\r\n            totals={myList[missionName].totals}\r\n            goal1={myList[missionName].goal1}\r\n            goal2={myList[missionName].goal2}\r\n            pocketCount={myList[missionName].pocketCount}\r\n            carryLoot={myList[missionName].carryLoot}\r\n          />\r\n        </FilterContext.Provider>\r\n      </CarryoverContext.Provider>\r\n    </FoundContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n/* **************** */\r\n/*  SECTION HEADER  */\r\n/* **************** */\r\n// Custom text component showing a header for each list section.\r\n// The long strings of spaces are given a 'strikethrough' style.\r\nexport function SectionHeader(props) {\r\n  // Access window size.\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  // Access theme colors.\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <View style={styles.listTitleView}>\r\n      <Text style={[\r\n        styles.listTitleText,\r\n        Platform.OS !== 'web' && {\r\n          fontSize: 14,\r\n        },\r\n        Platform.OS === 'web' && {\r\n          fontSize: (width > 460) ? 18 : width*0.039,\r\n        },\r\n        {color: colors.text}\r\n      ]}>\r\n        <Text style={styles.listTitleLine}>\r\n          {(width > 631)\r\n            ? '                                        '\r\n            : '                              '\r\n          }\r\n        </Text>\r\n        {`  ${props.headerName}  `}\r\n        <Text style={styles.listTitleLine}>\r\n          {(width > 631)\r\n            ? '                                        '\r\n            : '                              '\r\n          }\r\n        </Text>\r\n      </Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n// Define various styles here.\r\nconst styles = StyleSheet.create({\r\n  listScreen: {\r\n    //width: '100%',\r\n  },\r\n  listView: {\r\n    //width: '100%',\r\n    marginBottom: (Platform.OS === 'web') ? 10 : 5,\r\n  },\r\n  listItemView: {\r\n    //width: (Platform.OS === 'web') ? 784 : '90%',\r\n  },\r\n  listSecretView: {\r\n    width: (Platform.OS === 'web') ? 785 : '100%',\r\n  },\r\n  listHeader: {\r\n    borderWidth: 1,\r\n    borderTopLeftRadius: 8,\r\n    borderBottomLeftRadius: 8,\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\r\n    padding: 2,\r\n    paddingLeft: 6,\r\n  },\r\n  listHeaderText: {\r\n    color: 'white',\r\n    fontSize: (Platform.OS === 'web') ? 12 : 10,\r\n  },\r\n  listTitleView: {\r\n    alignItems: 'center',\r\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\r\n  },\r\n  listTitleText: {\r\n    //fontSize: (Platform.OS === 'web') ? 18 : 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  listTitleLine: {\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  titleHeader: {\r\n    alignItems: 'center',\r\n    marginVertical: 2,\r\n  },\r\n  bigTitle: {\r\n    fontFamily: 'Thief',\r\n    //fontSize: (Platform.OS === 'web') ? 40 : 24,\r\n    //fontSize: 30 / PixelRatio.getFontScale(),\r\n  },\r\n  titleHeaderBy: {\r\n    //fontSize: (Platform.OS === 'web') ? 24 : 14,\r\n    fontSize: 16 / PixelRatio.getFontScale(),\r\n  },\r\n  titleHeaderName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  titleHeaderDate: {\r\n    //fontSize: (Platform.OS === 'web') ? 16 : 10,\r\n    fontSize: 12 / PixelRatio.getFontScale(),\r\n  },\r\n  imgHeader: {\r\n    margin: 5,\r\n  },\r\n  imgHeaderView: {\r\n    flexDirection: 'row',\r\n  },\r\n  noteView: {\r\n    marginHorizontal: (Platform.OS === 'web') ? 10 : 5,\r\n    marginTop: 5,\r\n  },\r\n  noteText: {\r\n    fontSize: (Platform.OS === 'web') ? 15 : 12,\r\n  },\r\n  noteSymbol: {\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n","//import 'react-native-gesture-handler';\nimport * as React from 'react';\n//import { Ionicons } from '@expo/vector-icons';\nimport {\n  NavigationContainer,\n  useNavigation,\n  //createNavigationContainerRef,\n  //stackActions,\n  //useIsFocused,\n  //useFocusEffect,\n  //getFocusedRouteNameFromRoute,\n  DefaultTheme,\n  DarkTheme,\n  useTheme,\n} from '@react-navigation/native';\n//import { createStackNavigator } from '@react-navigation/stack';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\n//import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport {\n  createDrawerNavigator,\n  //useDrawerStatus,\n  //DrawerContentScrollView,\n  //DrawerItemList,\n  //DrawerItem,\n} from '@react-navigation/drawer';\nimport {\n  StyleSheet, Platform,\n  Image, //Alert,\n  Text, TextInput,\n  Button, //Pressable,\n  //TouchableHighlight,\n  TouchableOpacity,\n  //TouchableNativeFeedback,\n  //TouchableWithoutFeedback,\n  //FlatList, SectionList,\n  View, ScrollView,\n  // SafeAreaView,\n  // ActivityIndicator,\n  //StatusBar, BackHandler,\n  //Appearance,\n  PixelRatio,\n  useColorScheme,\n  //Linking,\n  useWindowDimensions,\n} from 'react-native';\n//import { AppearanceProvider, useColorScheme } from 'react-native-appearance';\n//import { Button } from 'react-native-paper';\n/*import {\n  SafeAreaProvider,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';*/\nimport * as Linking from 'expo-linking';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Ionicons from '@expo/vector-icons/Ionicons';\nimport { useFonts } from 'expo-font';\n\n// Import functions and components from other files.\nimport * as Lists from \"./Lists\";\n\n// Import contexts here.\nimport {SettingContext} from \"./Context\";\n\n// Add credits here.\nconst credits = require('./credits.json');\n\n// Add mission screenshots here.\nconst myScreens = {\n  // THIEF: THE DARK PROJECT\n  't1_training': require('./assets/screens/t1_training_A.png'), // A Keeper's Training\n  't1_bafford': require('./assets/screens/t1_bafford_A.png'), // Lord Bafford's Manor\n  't1_cragscleft': require('./assets/screens/t1_cragscleft_B.png'), // Break from Cragscleft Prison\n  't1_bonehoard': require('./assets/screens/t1_bonehoard_B.png'), // Down in the Bonehoard\n  't1_assassins': require('./assets/screens/t1_assassins_B.png'), // Assassins\n  't1_guild': require('./assets/screens/t1_guild_B.png'), // Thieves' Guild\n  //'t1_sword': require('./assets/screens/t1_training_A.png'), // The Sword\n  //'t1_haunted': require('./assets/screens/t1_training_A.png'), // The Haunted Cathedral\n  //'t1_mage': require('./assets/screens/t1_training_A.png'), // The Mage Towers\n  //'t1_lost': require('./assets/screens/t1_training_A.png'), // The Lost City\n  //'t1_song': require('./assets/screens/t1_training_A.png'), // Song of the Caverns\n  //'t1_undercover': require('./assets/screens/t1_training_A.png'), // Undercover\n  //'t1_return': require('./assets/screens/t1_training_A.png'), // Return to the Cathedral\n  //'t1_escape': require('./assets/screens/t1_training_A.png'), // Escape!\n  //'t1_bedfellows': require('./assets/screens/t1_training_A.png'), // Strange Bedfellows\n  //'t1_maw': require('./assets/screens/t1_training_A.png'), // Into the Maw of Chaos\n  //'t1_blooper': require('./assets/screens/t1_training_A.png'), // Blooper Reel\n\n  // THIEF II: THE METAL AGE\n  't2_interference': require('./assets/screens/t2_interference_B.png'), // Running Interference\n  't2_shipping': require('./assets/screens/t2_shipping_A.png'), // Shipping ... and Receiving\n  't2_framed': require('./assets/screens/t2_framed_A.png'), // Framed\n  't2_ambush': require('./assets/screens/t2_ambush_B.png'), // Ambush\n  't2_eavesdropping': require('./assets/screens/t2_eavesdropping_B.png'), // Eavesdropping\n  't2_bank': require('./assets/screens/t2_bank_B.png'), // First City Bank and Trust\n  //'t2_blackmail': require('./assets/screens/t1_training_A.png'), // Blackmail\n  //'t2_courier': require('./assets/screens/t1_training_A.png'), // Trace the Courier\n  //'t2_blood': require('./assets/screens/t1_training_A.png'), // Trail of Blood\n  //'t2_party': require('./assets/screens/t1_training_A.png'), // Life of the Party\n  //'t2_cargo': require('./assets/screens/t1_training_A.png'), // Precious Cargo\n  //'t2_kidnap': require('./assets/screens/t1_training_A.png'), // Kidnap\n  //'t2_casing': require('./assets/screens/t1_training_A.png'), // Casing the Joint\n  //'t2_masks': require('./assets/screens/t1_training_A.png'), // Masks\n  //'t2_soulforge': require('./assets/screens/t1_training_A.png'), // Sabotage at Soulforge\n  //'t2_guest': require('./assets/screens/t1_training_A.png'), // The Unwelcome Guest\n\n  // Fan Missions\n  'fm_lampfire': require('./assets/screens/fm_lampfire_B.png'), // Autumn in Lampfire Hills\n  'fm_burrickhead': require('./assets/screens/fm_burrickhead_A.png'), // The Burrick's Head Inn\n  'fm_spirit_resurrection': require('./assets/screens/fm_spirit_resurrection_B.png'), // Cult of the Resurrection\n  'fm_agenda': require('./assets/screens/fm_agenda_A.png'), // Hidden Agenda\n  'fm_maelstrom': require('./assets/screens/fm_maelstrom_B.png'), // Into the Maelstrom\n  'fm_spirit_manse': require('./assets/screens/fm_spirit_manse_B.png'), // The Inverted Manse\n  'fm_highway': require('./assets/screens/fm_highway_A.png'), // Thieves' Highway\n  'fm_vault': require('./assets/screens/fm_vault_B.png'), // Through No Vault of My Own\n};\n\n// REMINDER: Don't put comments inside return functions!\n// Unless they're inside a tag or surrounded by curly braces.\n\n// Create custom themes here.\nconst MyLightTheme = {\n  dark: false,\n  colors: {\n    ...DefaultTheme.colors,\n    border: 'black',\n    backLight: 'lightgray',\n    backMed: 'darkgray',\n    backDark: 'gray',\n    findE: 'lime',\n    findM: 'aqua',\n    findH: 'plum',\n    found: 'gold',\n    locObj: 'dodgerblue',\n    locN: 'green',\n    locH: 'blue',\n    locX: 'purple',\n    locSecret: 'crimson',\n    inputArea: 'rgb(242,242,242)',\n    inputCheck: 'rgb(242,242,242)',\n    inputBorder: 'dimgray',\n    url: 'blue',\n  },\n}\n\nconst MyDarkTheme = {\n  dark: true,\n  colors: {\n    ...DarkTheme.colors,\n    primary: 'gold',\n    background: 'rgb(50,50,50)',\n    card: 'gray',\n    //text: 'white',\n    border: 'rgb(140,140,140)',\n    backLight: 'dimgray',\n    backMed: 'rgb(85,85,85)',\n    backDark: 'rgb(70,70,70)',\n    findE: 'green',\n    findM: 'blue',\n    findH: 'purple',\n    found: 'olive',\n    locObj: 'skyblue',\n    locN: 'rgb(100,230,100)',\n    locH: 'aqua',\n    locX: 'rgb(230,180,230)',\n    locSecret: 'salmon',\n    inputArea: 'rgb(85,85,85)',\n    inputCheck: 'dimgray',\n    inputBorder: 'gray',\n    url: 'aqua',\n  },\n}\n\n\n/* **************** */\n/*   GO TO MISSION  */\n/* **************** */\n// Custom button component to choose a mission's lootlist.\nfunction GoToMission({missionID, missionName}) {\n  // Access navigation object from inside component.\n  const navigation = useNavigation();\n\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity\n      style={[\n        styles.buttonMission,\n        Platform.OS !== 'web' && {\n          width: '46%',\n          height: width*0.64*0.46,\n        },\n        Platform.OS === 'web' && {\n          width: (width > 618) ? 280 : '45%',\n          height: (width > 618) ? 175 : width*0.6*0.45,\n        },\n        {backgroundColor: colors.backLight,\n        borderColor: colors.border}\n      ]}\n      // Pass mission's name as a parameter to lootlist screen.\n      onPress={() => navigation.navigate('Lootlist', {\n        missionTitle: missionID,\n      })}\n    >\n      {missionID &&\n        <Image\n          source={myScreens[missionID]}\n          style={[\n            styles.buttonImage,\n            Platform.OS !== 'web' && {\n              width: '95%',\n              height: width*0.64*0.38,\n            },\n            Platform.OS === 'web' && {\n              width: (width > 618) ? 270 : '94%',\n              height: (width > 618) ? 150 : width*0.6*0.38,\n            }\n          ]}\n        />\n      }\n      {/* Use backquotes to denote parameters in a string. */}\n      <Text style={[\n        styles.buttonText,\n        Platform.OS !== 'web' && {\n          fontSize: 11,\n        },\n        Platform.OS === 'web' && {\n          fontSize: (width > 618) ? 15 : width*0.024,\n        },\n        {color: colors.text}\n      ]}>\n        {`${missionName}`}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\n\n// Create screen navigators here.\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Drawer = createDrawerNavigator();\n\n\n/* **************** */\n/*  THIEF 1 SCREEN  */\n/* **************** */\n// Screen for choosing a Thief 1 mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction Thief1Screen({ navigation }) {\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView style={{\n      height: (Platform.OS === 'web') ? height*0.99 : '100%'\n    }}>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief 1 Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t1_training\"\n            missionName=\"A Keeper's Training\"\n          />\n          <GoToMission\n            missionID=\"t1_bafford\"\n            missionName=\"Lord Bafford's Manor\"\n          />\n          <GoToMission\n            missionID=\"t1_cragscleft\"\n            missionName=\"Break from Cragscleft Prison\"\n          />\n          <GoToMission\n            missionID=\"t1_bonehoard\"\n            missionName=\"Down in the Bonehoard\"\n          />\n          <GoToMission\n            missionID=\"t1_assassins\"\n            missionName=\"Assassins\"\n          />\n          <GoToMission\n            missionID=\"t1_guild\"\n            missionName=\"Thieves' Guild\"\n          />\n          {/*<GoToMission\n            missionID=\"t1_sword\"\n            missionName=\"The Sword\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_haunted\"\n            missionName=\"The Haunted Cathedral\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_mage\"\n            missionName=\"The Mage Towers\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_lost\"\n            missionName=\"The Lost City\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_song\"\n            missionName=\"Song of the Caverns\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_undercover\"\n            missionName=\"Undercover\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_return\"\n            missionName=\"Return to the Cathedral\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_escape\"\n            missionName=\"Escape!\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_bedfellows\"\n            missionName=\"Bedfellows\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_maw\"\n            missionName=\"Into the Maw of Chaos\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t1_blooper\"\n            missionName=\"Blooper Reel\"\n          />*/}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  THIEF 2 SCREEN  */\n/* **************** */\n// Screen for choosing a Thief 2 mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction Thief2Screen({ navigation }) {\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView style={{\n      height: (Platform.OS === 'web') ? height*0.99 : '100%'\n    }}>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief 2 Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t2_interference\"\n            missionName=\"Running Interference\"\n          />\n          <GoToMission\n            missionID=\"t2_shipping\"\n            missionName=\"Shipping ... and Receiving\"\n          />\n          <GoToMission\n            missionID=\"t2_framed\"\n            missionName=\"Framed\"\n          />\n          <GoToMission\n            missionID=\"t2_ambush\"\n            missionName=\"Ambush\"\n          />\n          <GoToMission\n            missionID=\"t2_eavesdropping\"\n            missionName=\"Eavesdropping\"\n          />\n          <GoToMission\n            missionID=\"t2_bank\"\n            missionName=\"First City Bank and Trust\"\n          />\n          {/*<GoToMission\n            missionID=\"t2_blackmail\"\n            missionName=\"Blackmail\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_courier\"\n            missionName=\"Trace the Courier\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_blood\"\n            missionName=\"Trail of Blood\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_party\"\n            missionName=\"Life of the Party\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_cargo\"\n            missionName=\"Precious Cargo\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_kidnap\"\n            missionName=\"Kidnap\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_casing\"\n            missionName=\"Casing the Joint\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_masks\"\n            missionName=\"Masks\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_soulforge\"\n            missionName=\"Sabotage at Soulforge\"\n          />*/}\n          {/*<GoToMission\n            missionID=\"t2_guest\"\n            missionName=\"The Unwelcome Guest (Demo)\"\n          />*/}\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  THIEF FM SCREEN */\n/* **************** */\n// Screen for choosing a Thief fan mission.\n// Contained in tab navigator to easily switch Thief games.\n// 'navigation' allows functions to navigate to other screens.\nfunction ThiefFMScreen({ navigation }) {\n  // Access window size.\n  const { height, width } = useWindowDimensions();\n\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView style={{\n      height: (Platform.OS === 'web') ? height*0.99 : '100%'\n    }}>\n      <View style={styles.buttonPage}>\n        <Text style={{color: colors.text}}>\n          Thief Fan Mission Selection\n        </Text>\n        <Text style={{color: colors.text}}>\n          WIP\n        </Text>\n        <View style={styles.buttonView}>\n          <GoToMission\n            missionID=\"t0_test\"\n            missionName=\"App Test\"\n          />\n          <GoToMission\n            missionID=\"t0_select\"\n            missionName=\"Select Test\"\n          />\n          <GoToMission\n            missionID=\"fm_lampfire\"\n            missionName=\"Autumn in Lampfire Hills\"\n          />\n          <GoToMission\n            missionID=\"fm_burrickhead\"\n            missionName=\"The Burrick's Head Inn\"\n          />\n          <GoToMission\n            missionID=\"fm_spirit_resurrection\"\n            missionName=\"Cult of the Resurrection\"\n          />\n          <GoToMission\n            missionID=\"fm_agenda\"\n            missionName=\"Hidden Agenda\"\n          />\n          <GoToMission\n            missionID=\"fm_maelstrom\"\n            missionName=\"Into the Maelstrom\"\n          />\n          <GoToMission\n            missionID=\"fm_spirit_manse\"\n            missionName=\"The Inverted Manse\"\n          />\n          <GoToMission\n            missionID=\"fm_highway\"\n            missionName=\"Thieves' Highway\"\n          />\n          <GoToMission\n            missionID=\"fm_vault\"\n            missionName=\"Through No Vault of My Own\"\n          />\n          <GoToMission\n            missionID=\"t0_template12\"\n            missionName=\"Template 1/2\"\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*  SETTINGS SCREEN */\n/* **************** */\n// Screen for changing app settings.\n// Contained in drawer navigator to separate from other screens.\nfunction SettingsScreen() {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  // Fetch global setting states from context.\n  const {getCurrentTheme, setCurrentTheme} =\n    React.useContext(SettingContext);\n\n  // Variables for checkbox icon formatting.\n  const checkSize = 14;\n  const checkColorOn = getCurrentTheme === 'dark'\n    ? 'goldenrod' : 'olive';\n  const checkColorOff = \"gray\";\n\n  function updateTheme(newTheme) {\n    setCurrentTheme(newTheme);\n    storeTheme(newTheme);\n  };\n\n  // Send data to device storage.\n  const storeTheme = async (newTheme) => {\n    try {\n      // Convert setting's state to string.\n      //const jsonSetting = JSON.stringify(newTheme);\n      await AsyncStorage.setItem(`@setting_theme`, newTheme);\n      //alert(`Saved setting_theme as ${newTheme}`);\n    } catch (e) {\n      // Error: Saving the data failed.\n      alert('Failed to save setting.');\n    }\n  };\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <Text style={{color: colors.text}}>\n        Settings Screen\n      </Text>\n      <Text style={{color: colors.text}}>\n        WIP\n      </Text>\n\n      <View style={styles.settingRow}>\n        {/* Theme setting: system default. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"default\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"default\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"default\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"default\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={styles.settingButtonText}>\n            {` Default`}\n          </Text>\n        </TouchableOpacity>\n        {/* Theme setting: light. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"light\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"light\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"light\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"light\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={styles.settingButtonText}>\n            {` Light`}\n          </Text>\n        </TouchableOpacity>\n        {/* Theme setting: dark. */}\n        <TouchableOpacity\n          // Change background color when toggled.\n          style={[styles.settingButton,\n            {backgroundColor: colors.backLight,\n            borderColor: colors.border},\n            getCurrentTheme !== \"dark\" &&\n            {backgroundColor: colors.backDark}\n          ]}\n          // Change the theme being used.\n          onPress={() => updateTheme(\"dark\")}\n        >\n          {/* Change checkbox icon when toggled. */}\n          <Ionicons\n            name={getCurrentTheme === \"dark\"\n              ? \"checkbox\" : \"square-outline\"}\n            size={checkSize}\n            color={getCurrentTheme === \"dark\"\n              ? checkColorOn : checkColorOff}\n          />\n          <Text style={styles.settingButtonText}>\n            {` Dark`}\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\n\n/* **************** */\n/*   ABOUT SCREEN   */\n/* **************** */\n// Screen for viewing changelog and credits.\n// Contained in drawer navigator to separate from other screens.\nfunction AboutScreen() {\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{\n        alignItems: 'center',\n      }}>\n      <Text style={[styles.creditText, {color: colors.text}]}>\n        App created by\n      </Text>\n      <Text style={[\n        styles.creditText, styles.locCount, {color: colors.text}\n      ]}>\n        Kevin Kolpack (Grandmauden)\n      </Text>\n\n      <View style={[styles.credit, styles.creditCenter]}>\n        <Text style={[styles.creditText, {color: colors.text}]}>\n          This app is not affiliated with and is not supported by\n        </Text>\n        <Text style={[styles.creditText, {color: colors.text}]}>\n          Looking Glass Studios, Ion Storm - Austin, Eidos Montréal,\n        </Text>\n        <Text style={[styles.creditText, {color: colors.text}]}>\n          Eidos Interactive, Square Enix, or Embracer Group.\n        </Text>\n      </View>\n\n      {/* API section */}\n      <Lists.SectionHeader headerName=\"APIs Used\"/>\n      <View style={styles.credit}>\n        {/* Map out each entry in API array. */}\n        {credits.api.map((apiKey, apiIndex) => (\n          <View\n            key={`api_${apiIndex}`}\n            style={styles.creditCenter}\n          >\n            <Text style={[\n              styles.creditText, styles.locCount, {color: colors.text}\n            ]}>\n              {`${apiKey.name}:`}\n            </Text>\n            <Text\n              style={[styles.url, {color: colors.url}]}\n              onPress={() => Linking.openURL(apiKey.link)}\n            >\n              {`${apiKey.link}`}\n            </Text>\n          </View>\n        ))}\n      </View>\n\n      {/* Special Thanks section */}\n      <Lists.SectionHeader headerName=\"Special Thanks\"/>\n      <View style={[styles.credit, styles.creditCenter]}>\n        {/* Map out each entry in special thanks array. */}\n        {credits.thanks.map((thankKey, thankIndex) => (\n          <View key={`thank_${thankIndex}`}>\n            <Text style={[styles.creditText, {color: colors.text}]}>\n              <Text style={styles.locCount}>\n                {`${thankKey.name}: `}\n              </Text>\n              {`${thankKey.reason}`}\n            </Text>\n          </View>\n        ))}\n      </View>\n\n      {/* Changelog section */}\n      <Lists.SectionHeader headerName=\"Changelog\"/>\n      <View>\n        {/* Map out each entry in changelog array. */}\n        {credits.changelog.map((logKey, logIndex) => (\n          <View key={`log_${logIndex}`}>\n            <View style={[styles.changelog, styles.creditCenter]}>\n              <Text style={[\n                styles.creditText, styles.locCount, {color: colors.text}\n              ]}>\n                {`${logKey.version}`}\n              </Text>\n              <Text style={[styles.creditText, {color: colors.text}]}>\n                {`${logKey.date}`}\n              </Text>\n            </View>\n            <View>\n              {logKey.changes.map((changeKey, changeIndex) => (\n                <View key={`change_${changeIndex}`}>\n                  <Text style={[styles.creditText, {color: colors.text}]}>\n                    {`• ${changeKey}`}\n                  </Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.creditCenter}>\n              <Text style={[styles.changeLine, {color: colors.text}]}>\n                {(Platform.OS === 'web')\n                  ? '                                                  '\n                  : '                                        '\n                }\n              </Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    </ScrollView>\n  );\n}\n\n\n/* **************** */\n/*    MAP SCREEN    */\n/* **************** */\n// Screen for viewing interactive map of The City.\n// Contained in drawer navigator to separate from other screens.\nfunction MapScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}>\n      <Text>Map Screen</Text>\n      <Text>WIP</Text>\n    </View>\n  );\n}\n\n\n/* **************** */\n/*  MISSION SCREEN  */\n/* **************** */\n// Screen with nested tab navigator.\n// Contained in drawer navigator to separate from other screens.\n// Tabs won't appear in other drawer screens.\nfunction MissionScreen() {\n  return (\n    <Tab.Navigator\n      screenOptions={{headerShown: false}}\n      initialRouteName=\"TDP\"\n    >\n      <Tab.Screen\n        name=\"TDP\"\n        component={Thief1Screen}\n      />\n      <Tab.Screen\n        name=\"TMA\"\n        component={Thief2Screen}\n      />\n      <Tab.Screen\n        name=\"FMs\"\n        component={ThiefFMScreen}\n      />\n    </Tab.Navigator>\n  );\n}\n\n\n/* **************** */\n/*   START SCREEN   */\n/* **************** */\n// Screen with nested drawer navigator.\n// Contained in stack navigator to allow going back in stack.\n// Drawer won't appear in other stack screens.\n// Default screen when app is opened for the first time.\nfunction StartScreen() {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen\n        name=\"Lootlists\"\n        component={MissionScreen}\n        //options={{headerShown: false}}\n      />\n      {/*<Drawer.Screen\n        name=\"City Map\"\n        component={MapScreen}\n        //options={{headerShown: false}}\n      />*/}\n      <Drawer.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        //options={{headerShown: false}}\n      />\n      <Drawer.Screen\n        name=\"About\"\n        component={AboutScreen}\n        options={{title: \"About This App\"}}\n      />\n    </Drawer.Navigator>\n  );\n}\n\n\n/* **************** */\n/*  LOOTLIST SCREEN */\n/* **************** */\n// Screen for displaying mission lootlist.\n// Screen contents change depending on selected mission.\n// Contained in stack navigator to allow going back in stack.\n// 'route' allows screen to receive parameters.\nfunction LootlistScreen({ route }) {\n  const {missionTitle} = route.params;\n  // Access theme colors.\n  const { colors } = useTheme();\n\n  return (\n    <View>\n      {/*<Text>missionTitle: {missionTitle}</Text>*/}\n      <Lists.LootlistView\n        missionName={missionTitle}\n      />\n    </View>\n  );\n}\n\n\n/* **************** */\n/* NOT FOUND SCREEN */\n/* **************** */\n// Screen for displaying an Error 404 message.\n// Used in web browser in case of incorrect URL.\n// Contained in stack navigator to allow going back in stack.\n// 'route' allows screen to receive parameters.\nfunction NotFoundScreen({ route }) {\n  return (\n    <View>\n      <Text>ERROR 404!</Text>\n      {route.path &&\n        <Text>{`Nothing was found at \"${route.path}\"!`}</Text>\n      }\n      {!route.path &&\n        <Text>Nothing was found here!</Text>\n      }\n    </View>\n  );\n}\n\n\n// The root of the app.\nexport default function App() {\n  // Configure URL paths to match navigation routes here.\n  const config = {\n    screens: {\n      Start: {\n        screens: {\n          Lootlists: {\n            screens: {\n              TDP: 'select/thief_1',\n              TMA: 'select/thief_2',\n              FMs: 'select/thief_fm',\n            },\n          },\n          Settings: 'settings',\n          About: 'about',\n        },\n      },\n      Lootlist: 'list/:missionTitle',\n      NotFound: '*',\n    },\n  };\n\n  // Parse incoming deep links here.\n  const linking = {\n    // Prefixes allow for different schemes,\n    // whether the link comes from the client app or a standalone app.\n    // If using universal links, add domain to the prefixes list:\n    // prefixes: [Linking.createURL('/'), 'https://app.example.com'],\n    prefixes: [\n      Linking.createURL('/')\n    ],\n    config,\n  };\n\n  // Get the system's default color scheme.\n  const scheme = useColorScheme();\n\n  // Load custom fonts here.\n  const [fontsLoaded] = useFonts({\n    //'Batang': require('./assets/fonts/Batang.ttf'),\n    //'BlueHighway': require('./assets/fonts/bluehighway.ttf'),\n    'Thief': require('./assets/fonts/THIEF.ttf'),\n  });\n\n  // CurrentTheme: tracks the currently selected color theme.\n  const [getCurrentTheme, setCurrentTheme] = React.useState('default');\n\n  // Read settings from device storage.\n  const readAllSettings = async () => {\n    try {\n      // Use 'multiGet' to read multiple values at once.\n      //const jsonValues = await AsyncStorage.multiGet([`@setting_${id}`]);\n      const readTheme = await AsyncStorage.getItem(`@setting_theme`);\n      if (readTheme !== null) {\n        setCurrentTheme(readTheme);\n        //alert(`Loaded settings as ${readTheme}`);\n      }\n    } catch (e) {\n      // Error: Reading the data failed.\n      alert('Failed to read settings.');\n    }\n  };\n\n  React.useEffect(() => {\n    // When app renders, check its last saved settings.\n    readAllSettings();\n\n  }, []);\n\n  return (\n    // Wrap app root in providers to utilize context.\n    <SettingContext.Provider value={\n      {getCurrentTheme, setCurrentTheme}\n    }>\n      {/* Wrap app root in 'NavigationContainer' to use screen navigation. */}\n      <NavigationContainer\n        linking={linking}\n        fallback={<Text>Loading...</Text>}\n        theme={getCurrentTheme === 'default' && scheme === 'dark'\n          ? MyDarkTheme\n          : getCurrentTheme === 'dark'\n            ? MyDarkTheme\n            : MyLightTheme}\n        //theme={scheme === 'dark' ? MyDarkTheme : DefaultTheme}\n        //theme={MyDarkTheme}\n      >\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Start\"\n            component={StartScreen}\n            options={{headerShown: false}}\n          />\n          <Stack.Screen\n            name=\"Lootlist\"\n            component={LootlistScreen}\n            options={{headerShown: (Platform.OS === 'web') ? false : true}}\n          />\n          <Stack.Screen\n            name=\"Not Found\"\n            component={NotFoundScreen}\n            //options={{headerShown: false}}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SettingContext.Provider>\n  );\n}\n\n\n// Define various styles here.\nconst styles = StyleSheet.create({\n  buttonPage: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonView: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignContent: 'space-around',\n    justifyContent: 'center',\n  },\n  buttonMission: {\n    backgroundColor: 'lightgray',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingTop: 2,\n    margin: (Platform.OS === 'web') ? 8 : 4,\n    //width: (Platform.OS === 'web') ? 280 : 190,\n    //height: (Platform.OS === 'web') ? 175 : 120,\n  },\n  buttonImage: {\n    //width: (Platform.OS === 'web') ? 270 : 180,\n    //height: (Platform.OS === 'web') ? 150 : 100,\n  },\n  buttonText: {\n    //fontSize: (Platform.OS === 'web') ? 15 : 11,\n    fontWeight: 'bold',\n  },\n  locText: {\n    //fontFamily: 'BlueHighway',\n    fontSize: 8,\n  },\n  locCount: {\n    fontWeight: 'bold',\n  },\n  locPick: {\n    fontStyle: 'italic',\n  },\n  locBox: {\n    textDecorationLine: 'underline',\n  },\n  locNoGet: {\n    textDecorationLine: 'line-through',\n  },\n  settingRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 5,\n  },\n  settingButton: {\n    backgroundColor: 'lightgray',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginHorizontal: 5,\n    paddingHorizontal: 4,\n    paddingVertical: 2,\n    minWidth: 105,\n    minHeight: 27,\n  },\n  settingButtonFalse: {\n    backgroundColor: 'darkgray',\n  },\n  settingButtonText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  credit: {\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\n  },\n  creditCenter: {\n    alignItems: 'center',\n  },\n  creditText: {\n    fontSize: (Platform.OS === 'web') ? 14 : 12,\n  },\n  changelog: {\n    marginTop: (Platform.OS === 'web') ? 12 : 10,\n    marginBottom: (Platform.OS === 'web') ? 8 : 6,\n  },\n  changeLine: {\n    textDecorationLine: 'underline',\n  },\n  url: {\n    fontSize: (Platform.OS === 'web') ? 14 : 11,\n    textDecorationLine: 'underline',\n    marginBottom: 4,\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [872], () => (__webpack_require__(46271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["FoundContext","createContext","CarryoverContext","FilterContext","SettingContext","iconGold","require","iconGems","iconGoods","bgDefaultLight","bgDefaultDark","bgEasyLight","bgEasyDark","bgMediumLight","bgMediumDark","bgHardLight","bgHardDark","bgFoundLight","bgFoundLightS","bgFoundLightT","bgFoundDark","bgFoundDarkS","bgFoundDarkT","LootlistEntry","props","_useWindowDimensions","useWindowDimensions","width","height","colors","useTheme","_React$useContext","React","getCarryLoot","setCarryLoot","_jsxs","View","style","styles","listEntry","children","nameEntry","backgroundColor","backMed","borderColor","border","values","nameEntryLoot","img","length","_jsx","Image","source","imgStyle","ImageSwitch","Text","entryText","color","text","name","subEntry","subEntryLoot","map","valueKey","index1","Platform","OS","locations","subEntryLPV_Web","subEntryLocsPerValue","subEntryValue","value","lootRow","imgLootIcon","lootText","carryValue","subEntryLoc","subEntryLocLoot","locKey","index2","FindMe","id","title","modeNames","areas","notes","findSimple","findArea","findNarrow","findExact","findObj","findCount","findCountRecipe","findCountBox","findCountMode","findCountActual","findRecipe","findBox","findPick","findSecret","findUnable","findNote","findLink","loadout","price","getLinkedFind","setLinkedFind","index3","_props$id","_props$title","_props$findSimple","_props$findCount","_props$findCountRecip","_props$findCountBox","_props$findCountMode","_props$setLinkedFind","_React$useState","_React$useState2","_slicedToArray","getSimpleColor","setSimpleColor","_React$useState3","_React$useState4","getIsFound","setIsFound","_React$useContext2","accumLoot","accumPocket","_React$useContext3","setCarryFound","getCarryFound","_React$useContext4","getFilterDiffN","getFilterDiffH","setFilterDiffN","getFilterDiffX","setFilterDiffH","getFilterModeA","setFilterDiffX","getFilterModeB","setFilterModeA","getFilterModeC","setFilterModeB","getFilterLootGold","setFilterModeC","getFilterLootGems","setFilterLootGold","getFilterLootGoods","setFilterLootGems","getFilterArea","setFilterLootGoods","_React$useContext5","setFilterArea","getCurrentTheme","storeIsFound","setCurrentTheme","_ref","_asyncToGenerator","newToggle","jsonToggle","JSON","stringify","AsyncStorage","setItem","e","alert","_x","apply","arguments","storeFoundLoot","_ref2","addFoundLoot","jsonLoot","_x2","storeFoundPocket","_ref3","addFoundPocket","jsonPocket","_x3","readIsFound","_ref4","jsonValue","getItem","parseValue","parse","simpleColorSwitch","toggleMe","type","toggle","toggleSwitch","newFound","linkKey","linkIndex","_Fragment","Math","max","_toConsumableArray","includes","TouchableOpacity","find","backLight","findE","findM","findH","found","onPress","current","foundDiffKey","i","foundValueKey","j","newValue","foundLinkKey","k","allKey","l","pocketDiffKey","p","pocketLinkKey","q","min","activateMe","ImageBackground","resizeMode","findBackground","FindMeArea","FindMePrecise","_useWindowDimensions2","_React$useState5","_React$useState6","getDiffExclude","setDiffExclude","locText","fontSize","locCount","locObj","locN","locH","locX","secret","FindMeCount","_useWindowDimensions3","locSecret","locNoGet","locBox","locPick","delimiter","icon","_props$modeNames2","_props$findCount2","_props$findCountMode2","_props$findCountActua2","_props$findBox2","_props$findPick2","_React$useState7","_React$useState8","getDiffChange","setDiffChange","_React$useState9","_React$useState10","getModeChange","setModeChange","_React$useState11","_React$useState12","getActlChange","setActlChange","_React$useState13","_React$useState14","getDiffStack","setDiffStack","_React$useState15","_React$useState16","getModeStack","setModeStack","_React$useState17","_React$useState18","getActlStack","setActlStack","SecretEntry","_useWindowDimensions4","_React$useState19","_React$useState20","getSecFound","setSecFound","_React$useState21","_React$useState22","getShowModal","setShowModal","_React$useContext6","_React$useContext7","storeSecFound","_ref5","newSecFound","jsonSecret","_x4","readSecFound","_ref6","parseSecret","triggerMe","triggerSwitch","secretTrigList","triggers","trigKey","trigIndex","secretTrig","secretTrigID","secretTrigOne","secretTrigTop","secretTrigMid","secretTrigBot","secretNum","number","TouchableWithoutFeedback","imgSecret","Modal","animationType","transparent","visible","onRequestClose","modalView","activeOpacity","onPressOut","secretModal","imgSecretBig","secretLoc","findDiff","secretMethod","secretText","method","secretRewardList","rewards","rewKey","rewIndex","secretRewardFlex","secretReward","rewardRoute","secretRewardText","secretRewardOther","routeKey","routeIndex","rewardLoot","rewardItem","rewardOther","_React$useState23","_React$useState24","getImageIndex","setImageIndex","imageID","setInterval","clearInterval","TotalsView","_useWindowDimensions5","_React$useContext8","_React$useContext9","_React$useContext10","_React$useState25","_React$useState26","getFoundLoot","setFoundLoot","_React$useState27","_React$useState28","getFoundPocket","setFoundPocket","_React$useState29","_React$useState30","getShareNH","setShareNH","_React$useState31","_React$useState32","getShareHX","setShareHX","_React$useState33","_React$useState34","getShareNX","setShareNX","_React$useState35","_React$useState36","getGoalNH","setGoalNH","_React$useState37","_React$useState38","getGoalHX","setGoalHX","_React$useState39","_React$useState40","getGoalNX","setGoalNX","totals","goal1","total","gold","gems","goods","goal2","updateMe","totalBorder","ScrollView","flexGrow","contentContainerStyle","totalView","carryLoot","carryView","carryText","TextInput","carryInput","inputBorder","inputMode","maxLength","onChangeText","over","replace","onlyNumeric","spacedView","tableHeader","tableHeadBox","sizeRowStart","backDark","tableHeadText","outerKey","a","tableRow","tableRowStart","tableRowText","diffNames","innerKey","b","tableRowBox","totalBackground","parseInt","info","goalKey","g","GoalView","goalLoot","totalLoot","foundLoot","pocketCount","pocketRowBox","_useWindowDimensions6","_React$useContext11","emptyRowBox","round","FilterView","_useWindowDimensions7","_React$useState41","_React$useState42","_React$useContext12","_React$useContext13","_React$useContext14","checkSize","checkColorOn","checkColorOff","removeStored","_ref7","invKeys","push","multiRemove","removeItem","allButton","waitModal","filters","filterRow","filterButton","minWidth","Ionicons","size","filterTextMode","imgLootIconBig","MultipleSelectList","boxStyles","filterAreaBox","inputArea","checkBoxStyles","inputCheck","inputStyles","labelStyles","dropdownStyles","filterAreaDropdown","dropdownItemStyles","filterAreaListItem","dropdownTextStyles","filterAreaListText","badgeStyles","filterAreaBadge","badgeTextStyles","filterAreaBadgeText","data","save","setSelected","area","placeholder","label","StyleSheet","create","flexDirection","marginHorizontal","alignItems","borderWidth","borderTopLeftRadius","borderBottomLeftRadius","flex","minHeight","justifyContent","paddingLeft","flexWrap","alignContent","padding","textAlign","marginLeft","fontWeight","fontStyle","textDecorationLine","paddingHorizontal","paddingBottom","paddingVertical","paddingTop","borderRadius","borderTopWidth","marginBottom","margin","paddingRight","marginVertical","filterTextFalse","marginTop","myList","myScreens","myImages","mySecrets","LootlistView","missionName","readFoundLoot","jsonArray","parseArray","readFoundPocket","Provider","listScreen","titleHeader","bigTitle","author","titleHeaderBy","authKey","authIndex","titleHeaderName","contest","screens","imgHeaderView","imgHeader","firstRelease","titleHeaderDate","latestVersion","Loot","SectionHeader","headerName","noteView","noteKey","noteIndex","show","noteText","noteSymbol","desc","loot","listHeader","listHeaderText","listView","lootKey","lootIndex","imgKey","imgIndex","items","itemCatKey","itemCatIndex","category","catItems","itemKey","itemIndex","junk","junkCatKey","junkCatIndex","catJunk","junkKey","junkIndex","secrets","listSecretView","secKey","secIndex","listTitleView","listTitleText","listTitleLine","listItemView","fontFamily","PixelRatio","getFontScale","credits","MyLightTheme","dark","_objectSpread","DefaultTheme","url","MyDarkTheme","DarkTheme","primary","background","card","GoToMission","missionID","navigation","useNavigation","buttonMission","navigate","missionTitle","buttonImage","buttonText","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","Drawer","createDrawerNavigator","Thief1Screen","buttonPage","buttonView","Thief2Screen","ThiefFMScreen","SettingsScreen","updateTheme","newTheme","storeTheme","settingRow","settingButton","settingButtonText","AboutScreen","creditText","credit","creditCenter","Lists","api","apiKey","apiIndex","Linking","openURL","link","thanks","thankKey","thankIndex","reason","changelog","logKey","logIndex","version","date","changes","changeKey","changeIndex","changeLine","MissionScreen","Navigator","screenOptions","headerShown","initialRouteName","Screen","component","StartScreen","options","LootlistScreen","route","params","NotFoundScreen","path","App","linking","prefixes","createURL","config","Start","Lootlists","TDP","TMA","FMs","Settings","About","Lootlist","NotFound","scheme","useColorScheme","_useFonts","useFonts","readAllSettings","_ref8","readTheme","NavigationContainer","fallback","theme","settingButtonFalse","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}